{"version":3,"file":"index.js","names":["_jsTokens","require","_helperValidatorIdentifier","_picocolors","_interopRequireWildcard","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","_typeof","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","prototype","hasOwnProperty","call","i","set","colors","process","env","FORCE_COLOR","createColors","compose","f","g","v","sometimesKeywords","Set","getDefs","keyword","cyan","capitalized","yellow","jsxIdentifier","punctuator","number","magenta","string","green","regex","comment","gray","invalid","white","bgRed","bold","NEWLINE","BRACKET","tokenize","JSX_TAG","getTokenType","token","offset","text","type","isKeyword","value","isStrictReservedWord","test","slice","toLowerCase","_regeneratorRuntime","mark","match","wrap","tokenize$","_context","prev","next","exec","matchToToken","index","stop","highlightTokens","defs","highlighted","_iterator","_createForOfIteratorHelper","_step","_loop","_step$value","colorize","split","map","str","join","s","done","err","shouldHighlight","options","isColorSupported","forceColor","pcWithForcedColor","undefined","getColors","_pcWithForcedColor","highlight","code","arguments","length","chalk","chalkWithForcedColor","exports","getChalk","_ref","_chalk","_chalkWithForcedColor","constructor","enabled","level"],"sources":["../src/index.ts"],"sourcesContent":["/// <reference path=\"../../../lib/third-party-libs.d.ts\" />\n\nimport type { Token as JSToken, JSXToken } from \"js-tokens\";\nimport jsTokens from \"js-tokens\";\n\nimport {\n  isStrictReservedWord,\n  isKeyword,\n} from \"@babel/helper-validator-identifier\";\n\nimport _colors, { createColors } from \"picocolors\";\nimport type { Colors, Formatter } from \"picocolors/types\";\n// See https://github.com/alexeyraspopov/picocolors/issues/62\nconst colors =\n  typeof process === \"object\" &&\n  (process.env.FORCE_COLOR === \"0\" || process.env.FORCE_COLOR === \"false\")\n    ? createColors(false)\n    : _colors;\n\nconst compose: <T, U, V>(f: (gv: U) => V, g: (v: T) => U) => (v: T) => V =\n  (f, g) => v =>\n    f(g(v));\n\n/**\n * Names that are always allowed as identifiers, but also appear as keywords\n * within certain syntactic productions.\n *\n * https://tc39.es/ecma262/#sec-keywords-and-reserved-words\n *\n * `target` has been omitted since it is very likely going to be a false\n * positive.\n */\nconst sometimesKeywords = new Set([\"as\", \"async\", \"from\", \"get\", \"of\", \"set\"]);\n\ntype InternalTokenType =\n  | \"keyword\"\n  | \"capitalized\"\n  | \"jsxIdentifier\"\n  | \"punctuator\"\n  | \"number\"\n  | \"string\"\n  | \"regex\"\n  | \"comment\"\n  | \"invalid\";\n\ntype Token = {\n  type: InternalTokenType | \"uncolored\";\n  value: string;\n};\n/**\n * Styles for token types.\n */\nfunction getDefs(colors: Colors): Record<InternalTokenType, Formatter> {\n  return {\n    keyword: colors.cyan,\n    capitalized: colors.yellow,\n    jsxIdentifier: colors.yellow,\n    punctuator: colors.yellow,\n    number: colors.magenta,\n    string: colors.green,\n    regex: colors.magenta,\n    comment: colors.gray,\n    invalid: compose(compose(colors.white, colors.bgRed), colors.bold),\n  };\n}\n\n/**\n * RegExp to test for newlines in terminal.\n */\nconst NEWLINE = /\\r\\n|[\\n\\r\\u2028\\u2029]/;\n\n/**\n * RegExp to test for the three types of brackets.\n */\nconst BRACKET = /^[()[\\]{}]$/;\n\nlet tokenize: (\n  text: string,\n) => Generator<{ type: InternalTokenType | \"uncolored\"; value: string }>;\n\nif (process.env.BABEL_8_BREAKING) {\n  /**\n   * Get the type of token, specifying punctuator type.\n   */\n  const getTokenType = function (\n    token: JSToken | JSXToken,\n  ): InternalTokenType | \"uncolored\" {\n    if (token.type === \"IdentifierName\") {\n      if (\n        isKeyword(token.value) ||\n        isStrictReservedWord(token.value, true) ||\n        sometimesKeywords.has(token.value)\n      ) {\n        return \"keyword\";\n      }\n\n      if (token.value[0] !== token.value[0].toLowerCase()) {\n        return \"capitalized\";\n      }\n    }\n\n    if (token.type === \"Punctuator\" && BRACKET.test(token.value)) {\n      return \"uncolored\";\n    }\n\n    if (token.type === \"Invalid\" && token.value === \"@\") {\n      return \"punctuator\";\n    }\n\n    switch (token.type) {\n      case \"NumericLiteral\":\n        return \"number\";\n\n      case \"StringLiteral\":\n      case \"JSXString\":\n      case \"NoSubstitutionTemplate\":\n        return \"string\";\n\n      case \"RegularExpressionLiteral\":\n        return \"regex\";\n\n      case \"Punctuator\":\n      case \"JSXPunctuator\":\n        return \"punctuator\";\n\n      case \"MultiLineComment\":\n      case \"SingleLineComment\":\n        return \"comment\";\n\n      case \"Invalid\":\n      case \"JSXInvalid\":\n        return \"invalid\";\n\n      case \"JSXIdentifier\":\n        return \"jsxIdentifier\";\n\n      default:\n        return \"uncolored\";\n    }\n  };\n\n  /**\n   * Turn a string of JS into an array of objects.\n   */\n  tokenize = function* (text: string): Generator<Token> {\n    for (const token of jsTokens(text, { jsx: true })) {\n      switch (token.type) {\n        case \"TemplateHead\":\n          yield { type: \"string\", value: token.value.slice(0, -2) };\n          yield { type: \"punctuator\", value: \"${\" };\n          break;\n\n        case \"TemplateMiddle\":\n          yield { type: \"punctuator\", value: \"}\" };\n          yield { type: \"string\", value: token.value.slice(1, -2) };\n          yield { type: \"punctuator\", value: \"${\" };\n          break;\n\n        case \"TemplateTail\":\n          yield { type: \"punctuator\", value: \"}\" };\n          yield { type: \"string\", value: token.value.slice(1) };\n          break;\n\n        default:\n          yield {\n            type: getTokenType(token),\n            value: token.value,\n          };\n      }\n    }\n  };\n} else {\n  /**\n   * RegExp to test for what seems to be a JSX tag name.\n   */\n  const JSX_TAG = /^[a-z][\\w-]*$/i;\n\n  // The token here is defined in js-tokens@4. However we don't bother\n  // typing it since the whole block will be removed in Babel 8\n  const getTokenType = function (token: any, offset: number, text: string) {\n    if (token.type === \"name\") {\n      if (\n        isKeyword(token.value) ||\n        isStrictReservedWord(token.value, true) ||\n        sometimesKeywords.has(token.value)\n      ) {\n        return \"keyword\";\n      }\n\n      if (\n        JSX_TAG.test(token.value) &&\n        (text[offset - 1] === \"<\" || text.slice(offset - 2, offset) == \"</\")\n      ) {\n        return \"jsxIdentifier\";\n      }\n\n      if (token.value[0] !== token.value[0].toLowerCase()) {\n        return \"capitalized\";\n      }\n    }\n\n    if (token.type === \"punctuator\" && BRACKET.test(token.value)) {\n      return \"bracket\";\n    }\n\n    if (\n      token.type === \"invalid\" &&\n      (token.value === \"@\" || token.value === \"#\")\n    ) {\n      return \"punctuator\";\n    }\n\n    return token.type;\n  };\n\n  tokenize = function* (text: string) {\n    let match;\n    while ((match = (jsTokens as any).default.exec(text))) {\n      const token = (jsTokens as any).matchToToken(match);\n\n      yield {\n        type: getTokenType(token, match.index, text),\n        value: token.value,\n      };\n    }\n  };\n}\n\n/**\n * Highlight `text` using the token definitions in `defs`.\n */\nfunction highlightTokens(defs: Record<string, Formatter>, text: string) {\n  let highlighted = \"\";\n\n  for (const { type, value } of tokenize(text)) {\n    const colorize = defs[type];\n    if (colorize) {\n      highlighted += value\n        .split(NEWLINE)\n        .map(str => colorize(str))\n        .join(\"\\n\");\n    } else {\n      highlighted += value;\n    }\n  }\n\n  return highlighted;\n}\n\n/**\n * Highlight `text` using the token definitions in `defs`.\n */\n\ntype Options = {\n  forceColor?: boolean;\n};\n\n/**\n * Whether the code should be highlighted given the passed options.\n */\nexport function shouldHighlight(options: Options): boolean {\n  return colors.isColorSupported || options.forceColor;\n}\n\nlet pcWithForcedColor: Colors = undefined;\nfunction getColors(forceColor: boolean) {\n  if (forceColor) {\n    pcWithForcedColor ??= createColors(true);\n    return pcWithForcedColor;\n  }\n  return colors;\n}\n\n/**\n * Highlight `code`.\n */\nexport default function highlight(code: string, options: Options = {}): string {\n  if (code !== \"\" && shouldHighlight(options)) {\n    const defs = getDefs(getColors(options.forceColor));\n    return highlightTokens(defs, code);\n  } else {\n    return code;\n  }\n}\n\nif (!process.env.BABEL_8_BREAKING && !USE_ESM && !IS_STANDALONE) {\n  let chalk: any, chalkWithForcedColor: any;\n  // eslint-disable-next-line no-restricted-globals\n  exports.getChalk = ({ forceColor }: Options) => {\n    // eslint-disable-next-line no-restricted-globals\n    chalk ??= require(\"chalk\");\n    if (forceColor) {\n      chalkWithForcedColor ??= new chalk.constructor({\n        enabled: true,\n        level: 1,\n      });\n      return chalkWithForcedColor;\n    }\n    return chalk;\n  };\n}\n"],"mappings":"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","ignoreList":[]}
{"version":3,"file":"index.js","names":["run","_marked2","_regeneratorRuntime","mark","transformFile","_traverse","data","require","_pluginPass","_blockHoistPlugin","_normalizeOpts","_normalizeFile","_generate","_deepArray","config","code","ast","file","opts","_opts$filename","outputCode","outputMap","_ref","_opts$filename2","wrap","run$","_context","prev","next","delegateYield","passes","t0","t2","message","concat","filename","t3","abrupt","metadata","options","undefined","map","sourceType","program","externalDependencies","flattenToSet","stop","_marked","pluginPasses","_iterator","_step","pluginPairs","passPairs","visitors","_iterator2","_step2","_plugin2","_pass2","_i","_passPairs","_passPairs$_i","plugin","pass","fn","result","visitor","_i2","_passPairs2","_passPairs2$_i","_plugin","_pass","_fn","_result","transformFile$","_context2","_createForOfIteratorHelper","s","n","done","value","key","push","err","e","f","length","_slicedToArray","pre","call","isThenable","Error","merge","wrapPluginVisitorMethod","scope","post","finish","val","_typeof","then"],"sources":["../../src/transformation/index.ts"],"sourcesContent":["import traverse from \"@babel/traverse\";\nimport type * as t from \"@babel/types\";\nimport type { GeneratorResult } from \"@babel/generator\";\n\nimport type { Handler } from \"gensync\";\n\nimport type { ResolvedConfig, Plugin, PluginPasses } from \"../config/index.ts\";\n\nimport PluginPass from \"./plugin-pass.ts\";\nimport loadBlockHoistPlugin from \"./block-hoist-plugin.ts\";\nimport normalizeOptions from \"./normalize-opts.ts\";\nimport normalizeFile from \"./normalize-file.ts\";\n\nimport generateCode from \"./file/generate.ts\";\nimport type File from \"./file/file.ts\";\n\nimport { flattenToSet } from \"../config/helpers/deep-array.ts\";\n\nexport type FileResultCallback = {\n  (err: Error, file: null): void;\n  (err: null, file: FileResult | null): void;\n};\n\nexport type FileResult = {\n  metadata: { [key: string]: any };\n  options: { [key: string]: any };\n  ast: t.File | null;\n  code: string | null;\n  map: GeneratorResult[\"map\"] | null;\n  sourceType: \"script\" | \"module\";\n  externalDependencies: Set<string>;\n};\n\nexport function* run(\n  config: ResolvedConfig,\n  code: string,\n  ast?: t.File | t.Program | null,\n): Handler<FileResult> {\n  const file = yield* normalizeFile(\n    config.passes,\n    normalizeOptions(config),\n    code,\n    ast,\n  );\n\n  const opts = file.opts;\n  try {\n    yield* transformFile(file, config.passes);\n  } catch (e) {\n    e.message = `${opts.filename ?? \"unknown file\"}: ${e.message}`;\n    if (!e.code) {\n      e.code = \"BABEL_TRANSFORM_ERROR\";\n    }\n    throw e;\n  }\n\n  let outputCode, outputMap;\n  try {\n    if (opts.code !== false) {\n      ({ outputCode, outputMap } = generateCode(config.passes, file));\n    }\n  } catch (e) {\n    e.message = `${opts.filename ?? \"unknown file\"}: ${e.message}`;\n    if (!e.code) {\n      e.code = \"BABEL_GENERATE_ERROR\";\n    }\n    throw e;\n  }\n\n  return {\n    metadata: file.metadata,\n    options: opts,\n    ast: opts.ast === true ? file.ast : null,\n    code: outputCode === undefined ? null : outputCode,\n    map: outputMap === undefined ? null : outputMap,\n    sourceType: file.ast.program.sourceType,\n    externalDependencies: flattenToSet(config.externalDependencies),\n  };\n}\n\nfunction* transformFile(file: File, pluginPasses: PluginPasses): Handler<void> {\n  for (const pluginPairs of pluginPasses) {\n    const passPairs: [Plugin, PluginPass][] = [];\n    const passes = [];\n    const visitors = [];\n\n    for (const plugin of pluginPairs.concat([loadBlockHoistPlugin()])) {\n      const pass = new PluginPass(file, plugin.key, plugin.options);\n\n      passPairs.push([plugin, pass]);\n      passes.push(pass);\n      visitors.push(plugin.visitor);\n    }\n\n    for (const [plugin, pass] of passPairs) {\n      const fn = plugin.pre;\n      if (fn) {\n        // eslint-disable-next-line @typescript-eslint/no-confusing-void-expression\n        const result = fn.call(pass, file);\n\n        // @ts-expect-error - If we want to support async .pre\n        yield* [];\n\n        if (isThenable(result)) {\n          throw new Error(\n            `You appear to be using an plugin with an async .pre, ` +\n              `which your current version of Babel does not support. ` +\n              `If you're using a published plugin, you may need to upgrade ` +\n              `your @babel/core version.`,\n          );\n        }\n      }\n    }\n\n    // merge all plugin visitors into a single visitor\n    const visitor = traverse.visitors.merge(\n      visitors,\n      passes,\n      file.opts.wrapPluginVisitorMethod,\n    );\n    if (process.env.BABEL_8_BREAKING) {\n      traverse(file.ast.program, visitor, file.scope, null, file.path, true);\n    } else {\n      traverse(file.ast, visitor, file.scope);\n    }\n\n    for (const [plugin, pass] of passPairs) {\n      const fn = plugin.post;\n      if (fn) {\n        // eslint-disable-next-line @typescript-eslint/no-confusing-void-expression\n        const result = fn.call(pass, file);\n\n        // @ts-expect-error - If we want to support async .post\n        yield* [];\n\n        if (isThenable(result)) {\n          throw new Error(\n            `You appear to be using an plugin with an async .post, ` +\n              `which your current version of Babel does not support. ` +\n              `If you're using a published plugin, you may need to upgrade ` +\n              `your @babel/core version.`,\n          );\n        }\n      }\n    }\n  }\n}\n\nfunction isThenable<T extends PromiseLike<any>>(val: any): val is T {\n  return (\n    !!val &&\n    (typeof val === \"object\" || typeof val === \"function\") &&\n    !!val.then &&\n    typeof val.then === \"function\"\n  );\n}\n"],"mappings":"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","ignoreList":[]}
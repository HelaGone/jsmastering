{"version":3,"file":"full.js","names":["loadPluginDescriptor","_marked2","_regeneratorRuntime","mark","loadPresetDescriptor","_typeof","o","Symbol","iterator","constructor","prototype","_gensync","data","require","_async","_util","context","_plugin","_item","_configChain","_deepArray","_traverse","_caching","_options","_plugins","_configApi","_partial","_configError","_default","exports","loadFullConfig","inputOpts","_opts$assumptions","result","options","fileHandling","optionDefaults","plugins","presets","presetContext","toDescriptor","presetsDescriptors","initialPluginsDescriptors","pluginDescriptorsByPass","passes","externalDependencies","ignored","opts","pluginContext","wrap","loadFullConfig$","_context3","prev","next","delegateYield","t0","abrupt","Error","Object","assign","targets","item","desc","getItemDescriptor","map","enhanceError","recursePresetDescriptors","rawPresets","pluginDescriptorsPass","i","descriptor","preset","_iterator","_step","_step$value","_preset","pass","_ignored","recursePresetDescriptors$","_context","length","t1","code","checkNoUnwrappedItemOptionPairs","push","ownPass","chain","unshift","splice","apply","concat","_toConsumableArray","filter","p","_createForOfIteratorHelper","s","n","done","value","t2","forEach","mergeOptions","t3","e","f","finish","stop","assumptions","loadPluginDescriptors","_pluginDescriptorsByP","_i","_pluginDescriptorsByP2","descs","plugin","loadPluginDescriptors$","_context2","slice","passPerPreset","finalize","fn","_callee","arg1","arg2","_context$filename","_callee$","_context4","test","message","filename","makeDescriptorLoader","apiFactory","makeWeakCache","_ref","cache","dirname","alias","_callee2","factory","api","error","_callee2$","_context5","maybeAsync","JSON","stringify","isThenable","configured","mode","pluginDescriptorLoader","makePluginAPI","presetDescriptorLoader","makePresetAPI","instantiatePlugin","_ref2","_callee3","pluginObj","inheritsDescriptor","inherits","_callee3$","_context6","validatePluginObject","visitor","explode","name","undefined","forwardAsync","run","invalidate","pre","post","manipulateOptions","visitors","merge","loadPluginDescriptor$","_context7","t4","_marked","needsFilename","val","validateIfOptionNeedsFilename","include","exclude","formattedPresetName","join","validatePreset","_options$overrides","overrides","overrideOptions","instantiatePreset","makeWeakCacheSync","_ref3","validate","loadPresetDescriptor$","_context8","buildPresetChain","t5","a","b","fns","Boolean","_len","arguments","args","Array","_key","_iterator2","_step2","err"],"sources":["../../src/config/full.ts"],"sourcesContent":["import gensync, { type Handler } from \"gensync\";\nimport {\n  forwardAsync,\n  maybeAsync,\n  isThenable,\n} from \"../gensync-utils/async.ts\";\n\nimport { mergeOptions } from \"./util.ts\";\nimport * as context from \"../index.ts\";\nimport Plugin from \"./plugin.ts\";\nimport { getItemDescriptor } from \"./item.ts\";\nimport { buildPresetChain } from \"./config-chain.ts\";\nimport { finalize as freezeDeepArray } from \"./helpers/deep-array.ts\";\nimport type { DeepArray, ReadonlyDeepArray } from \"./helpers/deep-array.ts\";\nimport type {\n  ConfigContext,\n  ConfigChain,\n  PresetInstance,\n} from \"./config-chain.ts\";\nimport type { UnloadedDescriptor } from \"./config-descriptors.ts\";\nimport traverse from \"@babel/traverse\";\nimport { makeWeakCache, makeWeakCacheSync } from \"./caching.ts\";\nimport type { CacheConfigurator } from \"./caching.ts\";\nimport {\n  validate,\n  checkNoUnwrappedItemOptionPairs,\n} from \"./validation/options.ts\";\nimport type { PluginItem } from \"./validation/options.ts\";\nimport { validatePluginObject } from \"./validation/plugins.ts\";\nimport { makePluginAPI, makePresetAPI } from \"./helpers/config-api.ts\";\nimport type { PluginAPI, PresetAPI } from \"./helpers/config-api.ts\";\n\nimport loadPrivatePartialConfig from \"./partial.ts\";\nimport type { ValidatedOptions } from \"./validation/options.ts\";\n\nimport type * as Context from \"./cache-contexts.ts\";\nimport ConfigError from \"../errors/config-error.ts\";\n\ntype LoadedDescriptor = {\n  value: {};\n  options: {};\n  dirname: string;\n  alias: string;\n  externalDependencies: ReadonlyDeepArray<string>;\n};\n\nexport type { InputOptions } from \"./validation/options.ts\";\n\nexport type ResolvedConfig = {\n  options: any;\n  passes: PluginPasses;\n  externalDependencies: ReadonlyDeepArray<string>;\n};\n\nexport type { Plugin };\nexport type PluginPassList = Array<Plugin>;\nexport type PluginPasses = Array<PluginPassList>;\n\nexport default gensync(function* loadFullConfig(\n  inputOpts: unknown,\n): Handler<ResolvedConfig | null> {\n  const result = yield* loadPrivatePartialConfig(inputOpts);\n  if (!result) {\n    return null;\n  }\n  const { options, context, fileHandling } = result;\n\n  if (fileHandling === \"ignored\") {\n    return null;\n  }\n\n  const optionDefaults = {};\n\n  const { plugins, presets } = options;\n\n  if (!plugins || !presets) {\n    throw new Error(\"Assertion failure - plugins and presets exist\");\n  }\n\n  const presetContext: Context.FullPreset = {\n    ...context,\n    targets: options.targets,\n  };\n\n  const toDescriptor = (item: PluginItem) => {\n    const desc = getItemDescriptor(item);\n    if (!desc) {\n      throw new Error(\"Assertion failure - must be config item\");\n    }\n\n    return desc;\n  };\n\n  const presetsDescriptors = presets.map(toDescriptor);\n  const initialPluginsDescriptors = plugins.map(toDescriptor);\n  const pluginDescriptorsByPass: Array<Array<UnloadedDescriptor<PluginAPI>>> = [\n    [],\n  ];\n  const passes: Array<Array<Plugin>> = [];\n\n  const externalDependencies: DeepArray<string> = [];\n\n  const ignored = yield* enhanceError(\n    context,\n    function* recursePresetDescriptors(\n      rawPresets: Array<UnloadedDescriptor<PresetAPI>>,\n      pluginDescriptorsPass: Array<UnloadedDescriptor<PluginAPI>>,\n    ): Handler<true | void> {\n      const presets: Array<{\n        preset: ConfigChain | null;\n        pass: Array<UnloadedDescriptor<PluginAPI>>;\n      }> = [];\n\n      for (let i = 0; i < rawPresets.length; i++) {\n        const descriptor = rawPresets[i];\n        if (descriptor.options !== false) {\n          try {\n            // eslint-disable-next-line no-var\n            var preset = yield* loadPresetDescriptor(descriptor, presetContext);\n          } catch (e) {\n            if (e.code === \"BABEL_UNKNOWN_OPTION\") {\n              checkNoUnwrappedItemOptionPairs(rawPresets, i, \"preset\", e);\n            }\n            throw e;\n          }\n\n          externalDependencies.push(preset.externalDependencies);\n\n          // Presets normally run in reverse order, but if they\n          // have their own pass they run after the presets\n          // in the previous pass.\n          if (descriptor.ownPass) {\n            presets.push({ preset: preset.chain, pass: [] });\n          } else {\n            presets.unshift({\n              preset: preset.chain,\n              pass: pluginDescriptorsPass,\n            });\n          }\n        }\n      }\n\n      // resolve presets\n      if (presets.length > 0) {\n        // The passes are created in the same order as the preset list, but are inserted before any\n        // existing additional passes.\n        pluginDescriptorsByPass.splice(\n          1,\n          0,\n          ...presets.map(o => o.pass).filter(p => p !== pluginDescriptorsPass),\n        );\n\n        for (const { preset, pass } of presets) {\n          if (!preset) return true;\n\n          pass.push(...preset.plugins);\n\n          const ignored = yield* recursePresetDescriptors(preset.presets, pass);\n          if (ignored) return true;\n\n          preset.options.forEach(opts => {\n            mergeOptions(optionDefaults, opts);\n          });\n        }\n      }\n    },\n  )(presetsDescriptors, pluginDescriptorsByPass[0]);\n\n  if (ignored) return null;\n\n  const opts: any = optionDefaults;\n  mergeOptions(opts, options);\n\n  const pluginContext: Context.FullPlugin = {\n    ...presetContext,\n    assumptions: opts.assumptions ?? {},\n  };\n\n  yield* enhanceError(context, function* loadPluginDescriptors() {\n    pluginDescriptorsByPass[0].unshift(...initialPluginsDescriptors);\n\n    for (const descs of pluginDescriptorsByPass) {\n      const pass: Plugin[] = [];\n      passes.push(pass);\n\n      for (let i = 0; i < descs.length; i++) {\n        const descriptor = descs[i];\n        if (descriptor.options !== false) {\n          try {\n            // eslint-disable-next-line no-var\n            var plugin = yield* loadPluginDescriptor(descriptor, pluginContext);\n          } catch (e) {\n            if (e.code === \"BABEL_UNKNOWN_PLUGIN_PROPERTY\") {\n              // print special message for `plugins: [\"@babel/foo\", { foo: \"option\" }]`\n              checkNoUnwrappedItemOptionPairs(descs, i, \"plugin\", e);\n            }\n            throw e;\n          }\n          pass.push(plugin);\n\n          externalDependencies.push(plugin.externalDependencies);\n        }\n      }\n    }\n  })();\n\n  opts.plugins = passes[0];\n  opts.presets = passes\n    .slice(1)\n    .filter(plugins => plugins.length > 0)\n    .map(plugins => ({ plugins }));\n  opts.passPerPreset = opts.presets.length > 0;\n\n  return {\n    options: opts,\n    passes: passes,\n    externalDependencies: freezeDeepArray(externalDependencies),\n  };\n});\n\nfunction enhanceError<T extends Function>(context: ConfigContext, fn: T): T {\n  return function* (arg1: unknown, arg2: unknown) {\n    try {\n      return yield* fn(arg1, arg2);\n    } catch (e) {\n      // There are a few case where thrown errors will try to annotate themselves multiple times, so\n      // to keep things simple we just bail out if re-wrapping the message.\n      if (!/^\\[BABEL\\]/.test(e.message)) {\n        e.message = `[BABEL] ${context.filename ?? \"unknown file\"}: ${\n          e.message\n        }`;\n      }\n\n      throw e;\n    }\n  } as any;\n}\n\n/**\n * Load a generic plugin/preset from the given descriptor loaded from the config object.\n */\nconst makeDescriptorLoader = <Context, API>(\n  apiFactory: (\n    cache: CacheConfigurator<Context>,\n    externalDependencies: Array<string>,\n  ) => API,\n) =>\n  makeWeakCache(function* (\n    { value, options, dirname, alias }: UnloadedDescriptor<API>,\n    cache: CacheConfigurator<Context>,\n  ): Handler<LoadedDescriptor> {\n    // Disabled presets should already have been filtered out\n    if (options === false) throw new Error(\"Assertion failure\");\n\n    options = options || {};\n\n    const externalDependencies: Array<string> = [];\n\n    let item: unknown = value;\n    if (typeof value === \"function\") {\n      const factory = maybeAsync(\n        value as (api: API, options: {}, dirname: string) => unknown,\n        `You appear to be using an async plugin/preset, but Babel has been called synchronously`,\n      );\n\n      const api = {\n        ...context,\n        ...apiFactory(cache, externalDependencies),\n      };\n      try {\n        item = yield* factory(api, options, dirname);\n      } catch (e) {\n        if (alias) {\n          e.message += ` (While processing: ${JSON.stringify(alias)})`;\n        }\n        throw e;\n      }\n    }\n\n    if (!item || typeof item !== \"object\") {\n      throw new Error(\"Plugin/Preset did not return an object.\");\n    }\n\n    if (isThenable(item)) {\n      // @ts-expect-error - if we want to support async plugins\n      yield* [];\n\n      throw new Error(\n        `You appear to be using a promise as a plugin, ` +\n          `which your current version of Babel does not support. ` +\n          `If you're using a published plugin, ` +\n          `you may need to upgrade your @babel/core version. ` +\n          `As an alternative, you can prefix the promise with \"await\". ` +\n          `(While processing: ${JSON.stringify(alias)})`,\n      );\n    }\n\n    if (\n      externalDependencies.length > 0 &&\n      (!cache.configured() || cache.mode() === \"forever\")\n    ) {\n      let error =\n        `A plugin/preset has external untracked dependencies ` +\n        `(${externalDependencies[0]}), but the cache `;\n      if (!cache.configured()) {\n        error += `has not been configured to be invalidated when the external dependencies change. `;\n      } else {\n        error += ` has been configured to never be invalidated. `;\n      }\n      error +=\n        `Plugins/presets should configure their cache to be invalidated when the external ` +\n        `dependencies change, for example using \\`api.cache.invalidate(() => ` +\n        `statSync(filepath).mtimeMs)\\` or \\`api.cache.never()\\`\\n` +\n        `(While processing: ${JSON.stringify(alias)})`;\n\n      throw new Error(error);\n    }\n\n    return {\n      value: item,\n      options,\n      dirname,\n      alias,\n      externalDependencies: freezeDeepArray(externalDependencies),\n    };\n  });\n\nconst pluginDescriptorLoader = makeDescriptorLoader<\n  Context.SimplePlugin,\n  PluginAPI\n>(makePluginAPI);\nconst presetDescriptorLoader = makeDescriptorLoader<\n  Context.SimplePreset,\n  PresetAPI\n>(makePresetAPI);\n\nconst instantiatePlugin = makeWeakCache(function* (\n  { value, options, dirname, alias, externalDependencies }: LoadedDescriptor,\n  cache: CacheConfigurator<Context.SimplePlugin>,\n): Handler<Plugin> {\n  const pluginObj = validatePluginObject(value);\n\n  const plugin = {\n    ...pluginObj,\n  };\n  if (plugin.visitor) {\n    plugin.visitor = traverse.explode({\n      ...plugin.visitor,\n    });\n  }\n\n  if (plugin.inherits) {\n    const inheritsDescriptor: UnloadedDescriptor<PluginAPI> = {\n      name: undefined,\n      alias: `${alias}$inherits`,\n      value: plugin.inherits,\n      options,\n      dirname,\n    };\n\n    const inherits = yield* forwardAsync(loadPluginDescriptor, run => {\n      // If the inherited plugin changes, reinstantiate this plugin.\n      return cache.invalidate(data => run(inheritsDescriptor, data));\n    });\n\n    plugin.pre = chain(inherits.pre, plugin.pre);\n    plugin.post = chain(inherits.post, plugin.post);\n    plugin.manipulateOptions = chain(\n      inherits.manipulateOptions,\n      plugin.manipulateOptions,\n    );\n    plugin.visitor = traverse.visitors.merge([\n      inherits.visitor || {},\n      plugin.visitor || {},\n    ]);\n\n    if (inherits.externalDependencies.length > 0) {\n      if (externalDependencies.length === 0) {\n        externalDependencies = inherits.externalDependencies;\n      } else {\n        externalDependencies = freezeDeepArray([\n          externalDependencies,\n          inherits.externalDependencies,\n        ]);\n      }\n    }\n  }\n\n  return new Plugin(plugin, options, alias, externalDependencies);\n});\n\n/**\n * Instantiate a plugin for the given descriptor, returning the plugin/options pair.\n */\nfunction* loadPluginDescriptor(\n  descriptor: UnloadedDescriptor<PluginAPI>,\n  context: Context.SimplePlugin,\n): Handler<Plugin> {\n  if (descriptor.value instanceof Plugin) {\n    if (descriptor.options) {\n      throw new Error(\n        \"Passed options to an existing Plugin instance will not work.\",\n      );\n    }\n\n    return descriptor.value;\n  }\n\n  return yield* instantiatePlugin(\n    yield* pluginDescriptorLoader(descriptor, context),\n    context,\n  );\n}\n\nconst needsFilename = (val: unknown) => val && typeof val !== \"function\";\n\nconst validateIfOptionNeedsFilename = (\n  options: ValidatedOptions,\n  descriptor: UnloadedDescriptor<PresetAPI>,\n): void => {\n  if (\n    needsFilename(options.test) ||\n    needsFilename(options.include) ||\n    needsFilename(options.exclude)\n  ) {\n    const formattedPresetName = descriptor.name\n      ? `\"${descriptor.name}\"`\n      : \"/* your preset */\";\n    throw new ConfigError(\n      [\n        `Preset ${formattedPresetName} requires a filename to be set when babel is called directly,`,\n        `\\`\\`\\``,\n        `babel.transformSync(code, { filename: 'file.ts', presets: [${formattedPresetName}] });`,\n        `\\`\\`\\``,\n        `See https://babeljs.io/docs/en/options#filename for more information.`,\n      ].join(\"\\n\"),\n    );\n  }\n};\n\nconst validatePreset = (\n  preset: PresetInstance,\n  context: ConfigContext,\n  descriptor: UnloadedDescriptor<PresetAPI>,\n): void => {\n  if (!context.filename) {\n    const { options } = preset;\n    validateIfOptionNeedsFilename(options, descriptor);\n    options.overrides?.forEach(overrideOptions =>\n      validateIfOptionNeedsFilename(overrideOptions, descriptor),\n    );\n  }\n};\n\nconst instantiatePreset = makeWeakCacheSync(\n  ({\n    value,\n    dirname,\n    alias,\n    externalDependencies,\n  }: LoadedDescriptor): PresetInstance => {\n    return {\n      options: validate(\"preset\", value),\n      alias,\n      dirname,\n      externalDependencies,\n    };\n  },\n);\n\n/**\n * Generate a config object that will act as the root of a new nested config.\n */\nfunction* loadPresetDescriptor(\n  descriptor: UnloadedDescriptor<PresetAPI>,\n  context: Context.FullPreset,\n): Handler<{\n  chain: ConfigChain | null;\n  externalDependencies: ReadonlyDeepArray<string>;\n}> {\n  const preset = instantiatePreset(\n    yield* presetDescriptorLoader(descriptor, context),\n  );\n  validatePreset(preset, context, descriptor);\n  return {\n    chain: yield* buildPresetChain(preset, context),\n    externalDependencies: preset.externalDependencies,\n  };\n}\n\nfunction chain<Args extends any[]>(\n  a: undefined | ((...args: Args) => void),\n  b: undefined | ((...args: Args) => void),\n) {\n  const fns = [a, b].filter(Boolean);\n  if (fns.length <= 1) return fns[0];\n\n  return function (this: unknown, ...args: unknown[]) {\n    for (const fn of fns) {\n      fn.apply(this, args);\n    }\n  };\n}\n"],"mappings":"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","ignoreList":[]}
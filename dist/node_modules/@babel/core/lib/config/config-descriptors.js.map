{"version":3,"file":"config-descriptors.js","names":["handlerOf","_marked2","_regeneratorRuntime","mark","createPresetDescriptors","_marked3","createPluginDescriptors","_marked4","createDescriptors","_gensync","data","require","_functional","_index","_item","_caching","_resolveTargets","isEqualDescriptor","a","b","_a$file","_b$file","_a$file2","_b$file2","name","value","options","dirname","alias","ownPass","file","request","resolved","wrap","handlerOf$","_context","prev","next","abrupt","stop","_marked","optionsWithResolvedBrowserslistConfigFile","browserslistConfigFile","resolveBrowserslistConfigFile","createCachedDescriptors","plugins","presets","passPerPreset","createCachedPluginDescriptors","createCachedPresetDescriptors","createUncachedDescriptors","once","PRESET_DESCRIPTOR_CACHE","WeakMap","makeWeakCacheSync","items","cache","using","dir","makeStrongCacheSync","makeStrongCache","_callee","descriptors","_callee$","_context2","delegateYield","t0","map","desc","loadCachedDescriptor","PLUGIN_DESCRIPTOR_CACHE","_callee2","_callee2$","_context3","DEFAULT_OPTIONS","_desc$options","cacheByOptions","get","set","possibilities","indexOf","matches","filter","possibility","length","push","createPresetDescriptors$","_context4","createPluginDescriptors$","_context5","type","createDescriptors$","_context6","all","item","index","createDescriptor","concat","assertNoDuplicates","pair","_ref","_callee3","_value","_value2","_value3","_value4","filepath","resolver","_yield$resolver","_callee3$","_context7","getItemDescriptor","Array","isArray","_slicedToArray","undefined","Error","loadPlugin","loadPreset","String","_typeof","__esModule","Map","_iterator","_createForOfIteratorHelper","_step","_loop","nameMap","Set","has","conflicts","i","JSON","stringify","join","add","s","n","done","err","e","f"],"sources":["../../src/config/config-descriptors.ts"],"sourcesContent":["import gensync, { type Handler } from \"gensync\";\nimport { once } from \"../gensync-utils/functional.ts\";\n\nimport { loadPlugin, loadPreset } from \"./files/index.ts\";\n\nimport { getItemDescriptor } from \"./item.ts\";\n\nimport {\n  makeWeakCacheSync,\n  makeStrongCacheSync,\n  makeStrongCache,\n} from \"./caching.ts\";\nimport type { CacheConfigurator } from \"./caching.ts\";\n\nimport type {\n  ValidatedOptions,\n  PluginList,\n  PluginItem,\n} from \"./validation/options.ts\";\n\nimport { resolveBrowserslistConfigFile } from \"./resolve-targets.ts\";\nimport type { PluginAPI, PresetAPI } from \"./helpers/config-api.ts\";\n\n// Represents a config object and functions to lazily load the descriptors\n// for the plugins and presets so we don't load the plugins/presets unless\n// the options object actually ends up being applicable.\nexport type OptionsAndDescriptors = {\n  options: ValidatedOptions;\n  plugins: () => Handler<Array<UnloadedDescriptor<PluginAPI>>>;\n  presets: () => Handler<Array<UnloadedDescriptor<PresetAPI>>>;\n};\n\n// Represents a plugin or presets at a given location in a config object.\n// At this point these have been resolved to a specific object or function,\n// but have not yet been executed to call functions with options.\nexport interface UnloadedDescriptor<API, Options = {} | undefined | false> {\n  name: string | undefined;\n  value: object | ((api: API, options: Options, dirname: string) => unknown);\n  options: Options;\n  dirname: string;\n  alias: string;\n  ownPass?: boolean;\n  file?: {\n    request: string;\n    resolved: string;\n  };\n}\n\nfunction isEqualDescriptor<API>(\n  a: UnloadedDescriptor<API>,\n  b: UnloadedDescriptor<API>,\n): boolean {\n  return (\n    a.name === b.name &&\n    a.value === b.value &&\n    a.options === b.options &&\n    a.dirname === b.dirname &&\n    a.alias === b.alias &&\n    a.ownPass === b.ownPass &&\n    a.file?.request === b.file?.request &&\n    a.file?.resolved === b.file?.resolved\n  );\n}\n\nexport type ValidatedFile = {\n  filepath: string;\n  dirname: string;\n  options: ValidatedOptions;\n};\n\n// eslint-disable-next-line require-yield\nfunction* handlerOf<T>(value: T): Handler<T> {\n  return value;\n}\n\nfunction optionsWithResolvedBrowserslistConfigFile(\n  options: ValidatedOptions,\n  dirname: string,\n): ValidatedOptions {\n  if (typeof options.browserslistConfigFile === \"string\") {\n    options.browserslistConfigFile = resolveBrowserslistConfigFile(\n      options.browserslistConfigFile,\n      dirname,\n    );\n  }\n  return options;\n}\n\n/**\n * Create a set of descriptors from a given options object, preserving\n * descriptor identity based on the identity of the plugin/preset arrays\n * themselves, and potentially on the identity of the plugins/presets + options.\n */\nexport function createCachedDescriptors(\n  dirname: string,\n  options: ValidatedOptions,\n  alias: string,\n): OptionsAndDescriptors {\n  const { plugins, presets, passPerPreset } = options;\n  return {\n    options: optionsWithResolvedBrowserslistConfigFile(options, dirname),\n    plugins: plugins\n      ? () =>\n          // @ts-expect-error todo(flow->ts) ts complains about incorrect arguments\n          // eslint-disable-next-line @typescript-eslint/no-use-before-define\n          createCachedPluginDescriptors(plugins, dirname)(alias)\n      : () => handlerOf([]),\n    presets: presets\n      ? () =>\n          // @ts-expect-error todo(flow->ts) ts complains about incorrect arguments\n          // eslint-disable-next-line @typescript-eslint/no-use-before-define\n          createCachedPresetDescriptors(presets, dirname)(alias)(\n            !!passPerPreset,\n          )\n      : () => handlerOf([]),\n  };\n}\n\n/**\n * Create a set of descriptors from a given options object, with consistent\n * identity for the descriptors, but not caching based on any specific identity.\n */\nexport function createUncachedDescriptors(\n  dirname: string,\n  options: ValidatedOptions,\n  alias: string,\n): OptionsAndDescriptors {\n  return {\n    options: optionsWithResolvedBrowserslistConfigFile(options, dirname),\n    // The returned result here is cached to represent a config object in\n    // memory, so we build and memoize the descriptors to ensure the same\n    // values are returned consistently.\n    plugins: once(() =>\n      createPluginDescriptors(options.plugins || [], dirname, alias),\n    ),\n    presets: once(() =>\n      createPresetDescriptors(\n        options.presets || [],\n        dirname,\n        alias,\n        !!options.passPerPreset,\n      ),\n    ),\n  };\n}\n\nconst PRESET_DESCRIPTOR_CACHE = new WeakMap();\nconst createCachedPresetDescriptors = makeWeakCacheSync(\n  (items: PluginList, cache: CacheConfigurator<string>) => {\n    const dirname = cache.using(dir => dir);\n    return makeStrongCacheSync((alias: string) =>\n      makeStrongCache(function* (\n        passPerPreset: boolean,\n      ): Handler<Array<UnloadedDescriptor<PresetAPI>>> {\n        const descriptors = yield* createPresetDescriptors(\n          items,\n          dirname,\n          alias,\n          passPerPreset,\n        );\n        return descriptors.map(\n          // Items are cached using the overall preset array identity when\n          // possibly, but individual descriptors are also cached if a match\n          // can be found in the previously-used descriptor lists.\n          desc => loadCachedDescriptor(PRESET_DESCRIPTOR_CACHE, desc),\n        );\n      }),\n    );\n  },\n);\n\nconst PLUGIN_DESCRIPTOR_CACHE = new WeakMap();\nconst createCachedPluginDescriptors = makeWeakCacheSync(\n  (items: PluginList, cache: CacheConfigurator<string>) => {\n    const dirname = cache.using(dir => dir);\n    return makeStrongCache(function* (\n      alias: string,\n    ): Handler<Array<UnloadedDescriptor<PluginAPI>>> {\n      const descriptors = yield* createPluginDescriptors(items, dirname, alias);\n      return descriptors.map(\n        // Items are cached using the overall plugin array identity when\n        // possibly, but individual descriptors are also cached if a match\n        // can be found in the previously-used descriptor lists.\n        desc => loadCachedDescriptor(PLUGIN_DESCRIPTOR_CACHE, desc),\n      );\n    });\n  },\n);\n\n/**\n * When no options object is given in a descriptor, this object is used\n * as a WeakMap key in order to have consistent identity.\n */\nconst DEFAULT_OPTIONS = {};\n\n/**\n * Given the cache and a descriptor, returns a matching descriptor from the\n * cache, or else returns the input descriptor and adds it to the cache for\n * next time.\n */\nfunction loadCachedDescriptor<API>(\n  cache: WeakMap<{} | Function, WeakMap<{}, Array<UnloadedDescriptor<API>>>>,\n  desc: UnloadedDescriptor<API>,\n) {\n  const { value, options = DEFAULT_OPTIONS } = desc;\n  if (options === false) return desc;\n\n  let cacheByOptions = cache.get(value);\n  if (!cacheByOptions) {\n    cacheByOptions = new WeakMap();\n    cache.set(value, cacheByOptions);\n  }\n\n  let possibilities = cacheByOptions.get(options);\n  if (!possibilities) {\n    possibilities = [];\n    cacheByOptions.set(options, possibilities);\n  }\n\n  if (possibilities.indexOf(desc) === -1) {\n    const matches = possibilities.filter(possibility =>\n      isEqualDescriptor(possibility, desc),\n    );\n    if (matches.length > 0) {\n      return matches[0];\n    }\n\n    possibilities.push(desc);\n  }\n\n  return desc;\n}\n\nfunction* createPresetDescriptors(\n  items: PluginList,\n  dirname: string,\n  alias: string,\n  passPerPreset: boolean,\n): Handler<Array<UnloadedDescriptor<PresetAPI>>> {\n  return yield* createDescriptors(\n    \"preset\",\n    items,\n    dirname,\n    alias,\n    passPerPreset,\n  );\n}\n\nfunction* createPluginDescriptors(\n  items: PluginList,\n  dirname: string,\n  alias: string,\n): Handler<Array<UnloadedDescriptor<PluginAPI>>> {\n  return yield* createDescriptors(\"plugin\", items, dirname, alias);\n}\n\nfunction* createDescriptors<API>(\n  type: \"plugin\" | \"preset\",\n  items: PluginList,\n  dirname: string,\n  alias: string,\n  ownPass?: boolean,\n): Handler<Array<UnloadedDescriptor<API>>> {\n  const descriptors = yield* gensync.all(\n    items.map((item, index) =>\n      createDescriptor(item, dirname, {\n        type,\n        alias: `${alias}$${index}`,\n        ownPass: !!ownPass,\n      }),\n    ),\n  );\n\n  assertNoDuplicates(descriptors);\n\n  return descriptors;\n}\n\n/**\n * Given a plugin/preset item, resolve it into a standard format.\n */\nexport function* createDescriptor<API>(\n  pair: PluginItem,\n  dirname: string,\n  {\n    type,\n    alias,\n    ownPass,\n  }: {\n    type?: \"plugin\" | \"preset\";\n    alias: string;\n    ownPass?: boolean;\n  },\n): Handler<UnloadedDescriptor<API>> {\n  const desc = getItemDescriptor(pair);\n  if (desc) {\n    return desc;\n  }\n\n  let name;\n  let options;\n  // todo(flow->ts) better type annotation\n  let value: any = pair;\n  if (Array.isArray(value)) {\n    if (value.length === 3) {\n      [value, options, name] = value;\n    } else {\n      [value, options] = value;\n    }\n  }\n\n  let file = undefined;\n  let filepath = null;\n  if (typeof value === \"string\") {\n    if (typeof type !== \"string\") {\n      throw new Error(\n        \"To resolve a string-based item, the type of item must be given\",\n      );\n    }\n    const resolver = type === \"plugin\" ? loadPlugin : loadPreset;\n    const request = value;\n\n    ({ filepath, value } = yield* resolver(value, dirname));\n\n    file = {\n      request,\n      resolved: filepath,\n    };\n  }\n\n  if (!value) {\n    throw new Error(`Unexpected falsy value: ${String(value)}`);\n  }\n\n  if (typeof value === \"object\" && value.__esModule) {\n    if (value.default) {\n      value = value.default;\n    } else {\n      throw new Error(\"Must export a default export when using ES6 modules.\");\n    }\n  }\n\n  if (typeof value !== \"object\" && typeof value !== \"function\") {\n    throw new Error(\n      `Unsupported format: ${typeof value}. Expected an object or a function.`,\n    );\n  }\n\n  if (filepath !== null && typeof value === \"object\" && value) {\n    // We allow object values for plugins/presets nested directly within a\n    // config object, because it can be useful to define them in nested\n    // configuration contexts.\n    throw new Error(\n      `Plugin/Preset files are not allowed to export objects, only functions. In ${filepath}`,\n    );\n  }\n\n  return {\n    name,\n    alias: filepath || alias,\n    value,\n    options,\n    dirname,\n    ownPass,\n    file,\n  };\n}\n\nfunction assertNoDuplicates<API>(items: Array<UnloadedDescriptor<API>>): void {\n  const map = new Map();\n\n  for (const item of items) {\n    if (typeof item.value !== \"function\") continue;\n\n    let nameMap = map.get(item.value);\n    if (!nameMap) {\n      nameMap = new Set();\n      map.set(item.value, nameMap);\n    }\n\n    if (nameMap.has(item.name)) {\n      const conflicts = items.filter(i => i.value === item.value);\n      throw new Error(\n        [\n          `Duplicate plugin/preset detected.`,\n          `If you'd like to use two separate instances of a plugin,`,\n          `they need separate names, e.g.`,\n          ``,\n          `  plugins: [`,\n          `    ['some-plugin', {}],`,\n          `    ['some-plugin', {}, 'some unique name'],`,\n          `  ]`,\n          ``,\n          `Duplicates detected are:`,\n          `${JSON.stringify(conflicts, null, 2)}`,\n        ].join(\"\\n\"),\n      );\n    }\n\n    nameMap.add(item.name);\n  }\n}\n"],"mappings":"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","ignoreList":[]}
{"version":3,"file":"partial.js","names":["loadPrivatePartialConfig","_marked2","_regeneratorRuntime","mark","loadPartialConfig","_typeof","o","Symbol","iterator","constructor","prototype","_path","data","require","_plugin","_util","_item","_configChain","_environment","_options","_index","_resolveTargets","_excluded","_objectWithoutPropertiesLoose","source","excluded","target","sourceKeys","Object","keys","key","i","length","indexOf","resolveRootMode","rootDir","rootMode","upwardRootDir","findConfigUpwards","assign","Error","concat","ROOT_CONFIG_FILENAMES","join","code","dirname","inputOpts","args","_args$envName","envName","_args$cwd","cwd","_args$root","_args$rootMode","caller","_args$cloneInputAst","cloneInputAst","absoluteCwd","absoluteRootDir","filename","showConfigPath","context","configChain","merged","options","wrap","loadPrivatePartialConfig$","_context","prev","next","Array","isArray","validate","getEnv","root","resolve","undefined","delegateYield","resolveShowConfigPath","t0","showConfig","buildRootChain","t1","abrupt","assumptions","forEach","opts","mergeOptions","targets","resolveTargets","babelrc","configFile","browserslistConfigFile","passPerPreset","plugins","map","descriptor","createItemFromDescriptor","presets","fileHandling","ignore","config","files","stop","_marked","showIgnoredFiles","_opts","result","loadPartialConfig$","_context2","item","value","PartialConfig","filepath","_classCallCheck","babelignore","freeze","_createClass","hasFilesystemConfig"],"sources":["../../src/config/partial.ts"],"sourcesContent":["import path from \"path\";\nimport type { Handler } from \"gensync\";\nimport Plugin from \"./plugin.ts\";\nimport { mergeOptions } from \"./util.ts\";\nimport { createItemFromDescriptor } from \"./item.ts\";\nimport { buildRootChain } from \"./config-chain.ts\";\nimport type { ConfigContext, FileHandling } from \"./config-chain.ts\";\nimport { getEnv } from \"./helpers/environment.ts\";\nimport { validate } from \"./validation/options.ts\";\n\nimport type {\n  ValidatedOptions,\n  NormalizedOptions,\n  RootMode,\n} from \"./validation/options.ts\";\n\nimport {\n  findConfigUpwards,\n  resolveShowConfigPath,\n  ROOT_CONFIG_FILENAMES,\n} from \"./files/index.ts\";\nimport type { ConfigFile, IgnoreFile } from \"./files/index.ts\";\nimport { resolveTargets } from \"./resolve-targets.ts\";\n\nfunction resolveRootMode(rootDir: string, rootMode: RootMode): string {\n  switch (rootMode) {\n    case \"root\":\n      return rootDir;\n\n    case \"upward-optional\": {\n      const upwardRootDir = findConfigUpwards(rootDir);\n      return upwardRootDir === null ? rootDir : upwardRootDir;\n    }\n\n    case \"upward\": {\n      const upwardRootDir = findConfigUpwards(rootDir);\n      if (upwardRootDir !== null) return upwardRootDir;\n\n      throw Object.assign(\n        new Error(\n          `Babel was run with rootMode:\"upward\" but a root could not ` +\n            `be found when searching upward from \"${rootDir}\".\\n` +\n            `One of the following config files must be in the directory tree: ` +\n            `\"${ROOT_CONFIG_FILENAMES.join(\", \")}\".`,\n        ) as any,\n        {\n          code: \"BABEL_ROOT_NOT_FOUND\",\n          dirname: rootDir,\n        },\n      );\n    }\n    default:\n      throw new Error(`Assertion failure - unknown rootMode value.`);\n  }\n}\n\ntype PrivPartialConfig = {\n  options: NormalizedOptions;\n  context: ConfigContext;\n  fileHandling: FileHandling;\n  ignore: IgnoreFile | void;\n  babelrc: ConfigFile | void;\n  config: ConfigFile | void;\n  files: Set<string>;\n};\n\nexport default function* loadPrivatePartialConfig(\n  inputOpts: unknown,\n): Handler<PrivPartialConfig | null> {\n  if (\n    inputOpts != null &&\n    (typeof inputOpts !== \"object\" || Array.isArray(inputOpts))\n  ) {\n    throw new Error(\"Babel options must be an object, null, or undefined\");\n  }\n\n  const args = inputOpts ? validate(\"arguments\", inputOpts) : {};\n\n  const {\n    envName = getEnv(),\n    cwd = \".\",\n    root: rootDir = \".\",\n    rootMode = \"root\",\n    caller,\n    cloneInputAst = true,\n  } = args;\n  const absoluteCwd = path.resolve(cwd);\n  const absoluteRootDir = resolveRootMode(\n    path.resolve(absoluteCwd, rootDir),\n    rootMode,\n  );\n\n  const filename =\n    typeof args.filename === \"string\"\n      ? path.resolve(cwd, args.filename)\n      : undefined;\n\n  const showConfigPath = yield* resolveShowConfigPath(absoluteCwd);\n\n  const context: ConfigContext = {\n    filename,\n    cwd: absoluteCwd,\n    root: absoluteRootDir,\n    envName,\n    caller,\n    showConfig: showConfigPath === filename,\n  };\n\n  const configChain = yield* buildRootChain(args, context);\n  if (!configChain) return null;\n\n  const merged: ValidatedOptions = {\n    assumptions: {},\n  };\n  configChain.options.forEach(opts => {\n    mergeOptions(merged as any, opts);\n  });\n\n  const options: NormalizedOptions = {\n    ...merged,\n    targets: resolveTargets(merged, absoluteRootDir),\n\n    // Tack the passes onto the object itself so that, if this object is\n    // passed back to Babel a second time, it will be in the right structure\n    // to not change behavior.\n    cloneInputAst,\n    babelrc: false,\n    configFile: false,\n    browserslistConfigFile: false,\n    passPerPreset: false,\n    envName: context.envName,\n    cwd: context.cwd,\n    root: context.root,\n    rootMode: \"root\",\n    filename:\n      typeof context.filename === \"string\" ? context.filename : undefined,\n\n    plugins: configChain.plugins.map(descriptor =>\n      createItemFromDescriptor(descriptor),\n    ),\n    presets: configChain.presets.map(descriptor =>\n      createItemFromDescriptor(descriptor),\n    ),\n  };\n\n  return {\n    options,\n    context,\n    fileHandling: configChain.fileHandling,\n    ignore: configChain.ignore,\n    babelrc: configChain.babelrc,\n    config: configChain.config,\n    files: configChain.files,\n  };\n}\n\ntype LoadPartialConfigOpts = {\n  showIgnoredFiles?: boolean;\n};\n\nexport function* loadPartialConfig(\n  opts?: LoadPartialConfigOpts,\n): Handler<PartialConfig | null> {\n  let showIgnoredFiles = false;\n  // We only extract showIgnoredFiles if opts is an object, so that\n  // loadPrivatePartialConfig can throw the appropriate error if it's not.\n  if (typeof opts === \"object\" && opts !== null && !Array.isArray(opts)) {\n    ({ showIgnoredFiles, ...opts } = opts);\n  }\n\n  const result: PrivPartialConfig | undefined | null =\n    yield* loadPrivatePartialConfig(opts);\n  if (!result) return null;\n\n  const { options, babelrc, ignore, config, fileHandling, files } = result;\n\n  if (fileHandling === \"ignored\" && !showIgnoredFiles) {\n    return null;\n  }\n\n  (options.plugins || []).forEach(item => {\n    // @ts-expect-error todo(flow->ts): better type annotation for `item.value`\n    if (item.value instanceof Plugin) {\n      throw new Error(\n        \"Passing cached plugin instances is not supported in \" +\n          \"babel.loadPartialConfig()\",\n      );\n    }\n  });\n\n  return new PartialConfig(\n    options,\n    babelrc ? babelrc.filepath : undefined,\n    ignore ? ignore.filepath : undefined,\n    config ? config.filepath : undefined,\n    fileHandling,\n    files,\n  );\n}\n\nexport type { PartialConfig };\n\nclass PartialConfig {\n  /**\n   * These properties are public, so any changes to them should be considered\n   * a breaking change to Babel's API.\n   */\n  options: NormalizedOptions;\n  babelrc: string | void;\n  babelignore: string | void;\n  config: string | void;\n  fileHandling: FileHandling;\n  files: Set<string>;\n\n  constructor(\n    options: NormalizedOptions,\n    babelrc: string | void,\n    ignore: string | void,\n    config: string | void,\n    fileHandling: FileHandling,\n    files: Set<string>,\n  ) {\n    this.options = options;\n    this.babelignore = ignore;\n    this.babelrc = babelrc;\n    this.config = config;\n    this.fileHandling = fileHandling;\n    this.files = files;\n\n    // Freeze since this is a public API and it should be extremely obvious that\n    // reassigning properties on here does nothing.\n    Object.freeze(this);\n  }\n\n  /**\n   * Returns true if there is a config file in the filesystem for this config.\n   */\n  hasFilesystemConfig(): boolean {\n    return this.babelrc !== undefined || this.config !== undefined;\n  }\n}\nObject.freeze(PartialConfig.prototype);\n"],"mappings":"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","ignoreList":[]}
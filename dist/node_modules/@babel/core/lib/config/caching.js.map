{"version":3,"file":"caching.js","names":["genTrue","_marked2","_regeneratorRuntime","mark","getCachedValue","_marked3","getCachedValueOrWait","_gensync","data","require","_async","_util","synchronize","gen","sync","wrap","genTrue$","_context","prev","next","abrupt","stop","_marked","makeWeakCache","handler","makeCachedFunction","WeakMap","makeWeakCacheSync","makeStrongCache","Map","makeStrongCacheSync","CallCache","callCacheSync","callCacheAsync","futureCache","cachedFunction","arg","asyncContext","callCache","cached","cache","handlerResult","finishLock","value","cachedFunction$","_context2","delegateYield","isAsync","t0","t1","valid","CacheConfigurator","isIterableIterator","onFirstPause","setupAsyncLocks","t2","updateFunctionCache","release","cachedValue","_iterator","_step","_step$value","getCachedValue$","_context3","get","_createForOfIteratorHelper","s","n","done","e","f","finish","_cached","getCachedValueOrWait$","_context4","waitFor","promise","config","Lock","configured","forever","deactivate","mode","set","validator","push","_classCallCheck","_active","_never","_forever","_invalidate","_configured","_pairs","_data","_createClass","key","simple","makeSimpleConfigurator","Error","never","using","_this","fn","maybeAsync","isThenable","then","invalidate","pairs","_callee","_iterator2","_step2","_step2$value","_callee$","_context5","_slicedToArray","t3","cacheFn","val","assertSimpleType","cb","_this2","released","_resolve","Promise","resolve"],"sources":["../../src/config/caching.ts"],"sourcesContent":["import gensync from \"gensync\";\nimport type { Handler } from \"gensync\";\nimport {\n  maybeAsync,\n  isAsync,\n  onFirstPause,\n  waitFor,\n  isThenable,\n} from \"../gensync-utils/async.ts\";\nimport { isIterableIterator } from \"./util.ts\";\n\nexport type { CacheConfigurator };\n\nexport type SimpleCacheConfigurator = {\n  (forever: boolean): void;\n  <T>(handler: () => T): T;\n\n  forever: () => void;\n  never: () => void;\n  using: <T>(handler: () => T) => T;\n  invalidate: <T>(handler: () => T) => T;\n};\n\nexport type CacheEntry<ResultT, SideChannel> = Array<{\n  value: ResultT;\n  valid: (channel: SideChannel) => Handler<boolean>;\n}>;\n\nconst synchronize = <ArgsT extends unknown[], ResultT>(\n  gen: (...args: ArgsT) => Handler<ResultT>,\n): ((...args: ArgsT) => ResultT) => {\n  return gensync(gen).sync;\n};\n\n// eslint-disable-next-line require-yield\nfunction* genTrue() {\n  return true;\n}\n\nexport function makeWeakCache<ArgT extends object, ResultT, SideChannel>(\n  handler: (\n    arg: ArgT,\n    cache: CacheConfigurator<SideChannel>,\n  ) => Handler<ResultT> | ResultT,\n): (arg: ArgT, data: SideChannel) => Handler<ResultT> {\n  return makeCachedFunction<ArgT, ResultT, SideChannel>(WeakMap, handler);\n}\n\nexport function makeWeakCacheSync<ArgT extends object, ResultT, SideChannel>(\n  handler: (arg: ArgT, cache?: CacheConfigurator<SideChannel>) => ResultT,\n): (arg: ArgT, data?: SideChannel) => ResultT {\n  return synchronize<[ArgT, SideChannel], ResultT>(\n    makeWeakCache<ArgT, ResultT, SideChannel>(handler),\n  );\n}\n\nexport function makeStrongCache<ArgT, ResultT, SideChannel>(\n  handler: (\n    arg: ArgT,\n    cache: CacheConfigurator<SideChannel>,\n  ) => Handler<ResultT> | ResultT,\n): (arg: ArgT, data: SideChannel) => Handler<ResultT> {\n  return makeCachedFunction<ArgT, ResultT, SideChannel>(Map, handler);\n}\n\nexport function makeStrongCacheSync<ArgT, ResultT, SideChannel>(\n  handler: (arg: ArgT, cache?: CacheConfigurator<SideChannel>) => ResultT,\n): (arg: ArgT, data?: SideChannel) => ResultT {\n  return synchronize<[ArgT, SideChannel], ResultT>(\n    makeStrongCache<ArgT, ResultT, SideChannel>(handler),\n  );\n}\n\n/* NOTE: Part of the logic explained in this comment is explained in the\n *       getCachedValueOrWait and setupAsyncLocks functions.\n *\n * > There are only two hard things in Computer Science: cache invalidation and naming things.\n * > -- Phil Karlton\n *\n * I don't know if Phil was also thinking about handling a cache whose invalidation function is\n * defined asynchronously is considered, but it is REALLY hard to do correctly.\n *\n * The implemented logic (only when gensync is run asynchronously) is the following:\n *   1. If there is a valid cache associated to the current \"arg\" parameter,\n *       a. RETURN the cached value\n *   3. If there is a FinishLock associated to the current \"arg\" parameter representing a valid cache,\n *       a. Wait for that lock to be released\n *       b. RETURN the value associated with that lock\n *   5. Start executing the function to be cached\n *       a. If it pauses on a promise, then\n *           i. Let FinishLock be a new lock\n *          ii. Store FinishLock as associated to the current \"arg\" parameter\n *         iii. Wait for the function to finish executing\n *          iv. Release FinishLock\n *           v. Send the function result to anyone waiting on FinishLock\n *   6. Store the result in the cache\n *   7. RETURN the result\n */\nfunction makeCachedFunction<ArgT, ResultT, SideChannel>(\n  CallCache: new <Cached>() => CacheMap<ArgT, Cached, SideChannel>,\n  handler: (\n    arg: ArgT,\n    cache: CacheConfigurator<SideChannel>,\n  ) => Handler<ResultT> | ResultT,\n): (arg: ArgT, data: SideChannel) => Handler<ResultT> {\n  const callCacheSync = new CallCache<ResultT>();\n  const callCacheAsync = new CallCache<ResultT>();\n  const futureCache = new CallCache<Lock<ResultT>>();\n\n  return function* cachedFunction(arg: ArgT, data: SideChannel) {\n    const asyncContext = yield* isAsync();\n    const callCache = asyncContext ? callCacheAsync : callCacheSync;\n\n    const cached = yield* getCachedValueOrWait<ArgT, ResultT, SideChannel>(\n      asyncContext,\n      callCache,\n      futureCache,\n      arg,\n      data,\n    );\n    if (cached.valid) return cached.value;\n\n    const cache = new CacheConfigurator(data);\n\n    const handlerResult: Handler<ResultT> | ResultT = handler(arg, cache);\n\n    let finishLock: Lock<ResultT>;\n    let value: ResultT;\n\n    if (isIterableIterator(handlerResult)) {\n      value = yield* onFirstPause(handlerResult, () => {\n        finishLock = setupAsyncLocks(cache, futureCache, arg);\n      });\n    } else {\n      value = handlerResult;\n    }\n\n    updateFunctionCache(callCache, cache, arg, value);\n\n    if (finishLock) {\n      futureCache.delete(arg);\n      finishLock.release(value);\n    }\n\n    return value;\n  };\n}\n\ntype CacheMap<ArgT, ResultT, SideChannel> =\n  | Map<ArgT, CacheEntry<ResultT, SideChannel>>\n  // @ts-expect-error todo(flow->ts): add `extends object` constraint to ArgT\n  | WeakMap<ArgT, CacheEntry<ResultT, SideChannel>>;\n\nfunction* getCachedValue<ArgT, ResultT, SideChannel>(\n  cache: CacheMap<ArgT, ResultT, SideChannel>,\n  arg: ArgT,\n  data: SideChannel,\n): Handler<{ valid: true; value: ResultT } | { valid: false; value: null }> {\n  const cachedValue: CacheEntry<ResultT, SideChannel> | void = cache.get(arg);\n\n  if (cachedValue) {\n    for (const { value, valid } of cachedValue) {\n      if (yield* valid(data)) return { valid: true, value };\n    }\n  }\n\n  return { valid: false, value: null };\n}\n\nfunction* getCachedValueOrWait<ArgT, ResultT, SideChannel>(\n  asyncContext: boolean,\n  callCache: CacheMap<ArgT, ResultT, SideChannel>,\n  futureCache: CacheMap<ArgT, Lock<ResultT>, SideChannel>,\n  arg: ArgT,\n  data: SideChannel,\n): Handler<{ valid: true; value: ResultT } | { valid: false; value: null }> {\n  const cached = yield* getCachedValue(callCache, arg, data);\n  if (cached.valid) {\n    return cached;\n  }\n\n  if (asyncContext) {\n    const cached = yield* getCachedValue(futureCache, arg, data);\n    if (cached.valid) {\n      const value = yield* waitFor<ResultT>(cached.value.promise);\n      return { valid: true, value };\n    }\n  }\n\n  return { valid: false, value: null };\n}\n\nfunction setupAsyncLocks<ArgT, ResultT, SideChannel>(\n  config: CacheConfigurator<SideChannel>,\n  futureCache: CacheMap<ArgT, Lock<ResultT>, SideChannel>,\n  arg: ArgT,\n): Lock<ResultT> {\n  const finishLock = new Lock<ResultT>();\n\n  updateFunctionCache(futureCache, config, arg, finishLock);\n\n  return finishLock;\n}\n\nfunction updateFunctionCache<\n  ArgT,\n  ResultT,\n  SideChannel,\n  Cache extends CacheMap<ArgT, ResultT, SideChannel>,\n>(\n  cache: Cache,\n  config: CacheConfigurator<SideChannel>,\n  arg: ArgT,\n  value: ResultT,\n) {\n  if (!config.configured()) config.forever();\n\n  let cachedValue: CacheEntry<ResultT, SideChannel> | void = cache.get(arg);\n\n  config.deactivate();\n\n  switch (config.mode()) {\n    case \"forever\":\n      cachedValue = [{ value, valid: genTrue }];\n      cache.set(arg, cachedValue);\n      break;\n    case \"invalidate\":\n      cachedValue = [{ value, valid: config.validator() }];\n      cache.set(arg, cachedValue);\n      break;\n    case \"valid\":\n      if (cachedValue) {\n        cachedValue.push({ value, valid: config.validator() });\n      } else {\n        cachedValue = [{ value, valid: config.validator() }];\n        cache.set(arg, cachedValue);\n      }\n  }\n}\n\nclass CacheConfigurator<SideChannel = void> {\n  _active: boolean = true;\n  _never: boolean = false;\n  _forever: boolean = false;\n  _invalidate: boolean = false;\n\n  _configured: boolean = false;\n\n  _pairs: Array<\n    [cachedValue: unknown, handler: (data: SideChannel) => Handler<unknown>]\n  > = [];\n\n  _data: SideChannel;\n\n  constructor(data: SideChannel) {\n    this._data = data;\n  }\n\n  simple() {\n    return makeSimpleConfigurator(this);\n  }\n\n  mode() {\n    if (this._never) return \"never\";\n    if (this._forever) return \"forever\";\n    if (this._invalidate) return \"invalidate\";\n    return \"valid\";\n  }\n\n  forever() {\n    if (!this._active) {\n      throw new Error(\"Cannot change caching after evaluation has completed.\");\n    }\n    if (this._never) {\n      throw new Error(\"Caching has already been configured with .never()\");\n    }\n    this._forever = true;\n    this._configured = true;\n  }\n\n  never() {\n    if (!this._active) {\n      throw new Error(\"Cannot change caching after evaluation has completed.\");\n    }\n    if (this._forever) {\n      throw new Error(\"Caching has already been configured with .forever()\");\n    }\n    this._never = true;\n    this._configured = true;\n  }\n\n  using<T>(handler: (data: SideChannel) => T): T {\n    if (!this._active) {\n      throw new Error(\"Cannot change caching after evaluation has completed.\");\n    }\n    if (this._never || this._forever) {\n      throw new Error(\n        \"Caching has already been configured with .never or .forever()\",\n      );\n    }\n    this._configured = true;\n\n    const key = handler(this._data);\n\n    const fn = maybeAsync(\n      handler,\n      `You appear to be using an async cache handler, but Babel has been called synchronously`,\n    );\n\n    if (isThenable(key)) {\n      // @ts-expect-error todo(flow->ts): improve function return type annotation\n      return key.then((key: unknown) => {\n        this._pairs.push([key, fn]);\n        return key;\n      });\n    }\n\n    this._pairs.push([key, fn]);\n    return key;\n  }\n\n  invalidate<T>(handler: (data: SideChannel) => T): T {\n    this._invalidate = true;\n    return this.using(handler);\n  }\n\n  validator(): (data: SideChannel) => Handler<boolean> {\n    const pairs = this._pairs;\n    return function* (data: SideChannel) {\n      for (const [key, fn] of pairs) {\n        if (key !== (yield* fn(data))) return false;\n      }\n      return true;\n    };\n  }\n\n  deactivate() {\n    this._active = false;\n  }\n\n  configured() {\n    return this._configured;\n  }\n}\n\nfunction makeSimpleConfigurator(\n  cache: CacheConfigurator<any>,\n): SimpleCacheConfigurator {\n  function cacheFn(val: any) {\n    if (typeof val === \"boolean\") {\n      if (val) cache.forever();\n      else cache.never();\n      return;\n    }\n\n    return cache.using(() => assertSimpleType(val()));\n  }\n  cacheFn.forever = () => cache.forever();\n  cacheFn.never = () => cache.never();\n  cacheFn.using = (cb: { (): SimpleType }) =>\n    cache.using(() => assertSimpleType(cb()));\n  cacheFn.invalidate = (cb: { (): SimpleType }) =>\n    cache.invalidate(() => assertSimpleType(cb()));\n\n  return cacheFn as any;\n}\n\n// Types are limited here so that in the future these values can be used\n// as part of Babel's caching logic.\nexport type SimpleType =\n  | string\n  | boolean\n  | number\n  | null\n  | void\n  | Promise<SimpleType>;\nexport function assertSimpleType(value: unknown): SimpleType {\n  if (isThenable(value)) {\n    throw new Error(\n      `You appear to be using an async cache handler, ` +\n        `which your current version of Babel does not support. ` +\n        `We may add support for this in the future, ` +\n        `but if you're on the most recent version of @babel/core and still ` +\n        `seeing this error, then you'll need to synchronously handle your caching logic.`,\n    );\n  }\n\n  if (\n    value != null &&\n    typeof value !== \"string\" &&\n    typeof value !== \"boolean\" &&\n    typeof value !== \"number\"\n  ) {\n    throw new Error(\n      \"Cache keys must be either string, boolean, number, null, or undefined.\",\n    );\n  }\n  // @ts-expect-error Type 'unknown' is not assignable to type 'SimpleType'. This can be removed\n  // when strictNullCheck is enabled\n  return value;\n}\n\nclass Lock<T> {\n  released: boolean = false;\n  promise: Promise<T>;\n  _resolve: (value: T) => void;\n\n  constructor() {\n    this.promise = new Promise(resolve => {\n      this._resolve = resolve;\n    });\n  }\n\n  release(value: T) {\n    this.released = true;\n    this._resolve(value);\n  }\n}\n"],"mappings":"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","ignoreList":[]}
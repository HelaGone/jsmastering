{"version":3,"file":"async.js","names":["_gensync","data","require","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","args","arguments","apply","err","undefined","runGenerator","_regeneratorRuntime","mark","_callee","item","wrap","_callee$","_context","prev","next","delegateYield","abrupt","t0","stop","isAsync","exports","sync","errback","cb","maybeAsync","message","_len","length","Array","_key","result","isThenable","Error","async","_len2","_key2","withKind","_ref","_callee2","_callee2$","_context2","_x","forwardAsync","action","g","kind","adapted","onFirstPause","name","arity","firstPause","completed","waitFor","x","_ref2","_callee3","_callee3$","_context3","_x2","val","_typeof"],"sources":["../../src/gensync-utils/async.ts"],"sourcesContent":["import gensync, { type Gensync, type Handler, type Callback } from \"gensync\";\n\ntype MaybePromise<T> = T | Promise<T>;\n\nconst runGenerator: {\n  sync<Return>(gen: Handler<Return>): Return;\n  async<Return>(gen: Handler<Return>): Promise<Return>;\n  errback<Return>(gen: Handler<Return>, cb: Callback<Return>): void;\n} = gensync(function* (item: Handler<any>): Handler<any> {\n  return yield* item;\n});\n\n// This Gensync returns true if the current execution context is\n// asynchronous, otherwise it returns false.\nexport const isAsync = gensync({\n  sync: () => false,\n  errback: cb => cb(null, true),\n});\n\n// This function wraps any functions (which could be either synchronous or\n// asynchronous) with a Gensync. If the wrapped function returns a promise\n// but the current execution context is synchronous, it will throw the\n// provided error.\n// This is used to handle user-provided functions which could be asynchronous.\nexport function maybeAsync<Args extends unknown[], Return>(\n  fn: (...args: Args) => Return,\n  message: string,\n): Gensync<Args, Return> {\n  return gensync({\n    sync(...args) {\n      const result = fn.apply(this, args);\n      if (isThenable(result)) throw new Error(message);\n      return result;\n    },\n    async(...args) {\n      return Promise.resolve(fn.apply(this, args));\n    },\n  });\n}\n\nconst withKind = gensync({\n  sync: cb => cb(\"sync\"),\n  async: async cb => cb(\"async\"),\n}) as <T>(cb: (kind: \"sync\" | \"async\") => MaybePromise<T>) => Handler<T>;\n\n// This function wraps a generator (or a Gensync) into another function which,\n// when called, will run the provided generator in a sync or async way, depending\n// on the execution context where this forwardAsync function is called.\n// This is useful, for example, when passing a callback to a function which isn't\n// aware of gensync, but it only knows about synchronous and asynchronous functions.\n// An example is cache.using, which being exposed to the user must be as simple as\n// possible:\n//     yield* forwardAsync(gensyncFn, wrappedFn =>\n//       cache.using(x => {\n//         // Here we don't know about gensync. wrappedFn is a\n//         // normal sync or async function\n//         return wrappedFn(x);\n//       })\n//     )\nexport function forwardAsync<Args extends unknown[], Return>(\n  action: (...args: Args) => Handler<Return>,\n  cb: (\n    adapted: (...args: Args) => MaybePromise<Return>,\n  ) => MaybePromise<Return>,\n): Handler<Return> {\n  const g = gensync(action);\n  return withKind(kind => {\n    const adapted = g[kind];\n    return cb(adapted);\n  });\n}\n\n// If the given generator is executed asynchronously, the first time that it\n// is paused (i.e. When it yields a gensync generator which can't be run\n// synchronously), call the \"firstPause\" callback.\nexport const onFirstPause = gensync<\n  [gen: Handler<unknown>, firstPause: () => void],\n  unknown\n>({\n  name: \"onFirstPause\",\n  arity: 2,\n  sync: function (item) {\n    return runGenerator.sync(item);\n  },\n  errback: function (item, firstPause, cb) {\n    let completed = false;\n\n    runGenerator.errback(item, (err, value) => {\n      completed = true;\n      cb(err, value);\n    });\n\n    if (!completed) {\n      firstPause();\n    }\n  },\n}) as <T>(gen: Handler<T>, firstPause: () => void) => Handler<T>;\n\n// Wait for the given promise to be resolved\nexport const waitFor = gensync({\n  sync: x => x,\n  async: async x => x,\n}) as <T>(p: T | Promise<T>) => Handler<T>;\n\nexport function isThenable<T = any>(val: any): val is PromiseLike<T> {\n  return (\n    !!val &&\n    (typeof val === \"object\" || typeof val === \"function\") &&\n    !!val.then &&\n    typeof val.then === \"function\"\n  );\n}\n"],"mappings":"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","ignoreList":[]}
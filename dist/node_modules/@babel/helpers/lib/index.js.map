{"version":3,"file":"index.js","names":["_traverse","require","_t","_helpers","assignmentExpression","cloneNode","expressionStatement","file","identifier","makePath","path","parts","parentPath","push","key","inList","listKey","reverse","join","FileClass","undefined","getHelperMetadata","globals","Set","localBindingNames","dependencies","Map","exportName","exportPath","exportBindingAssignments","importPaths","importBindingsReferences","dependencyVisitor","ImportDeclaration","child","name","node","source","value","buildCodeFrameError","concat","get","length","isImportDefaultSpecifier","bindingIdentifier","specifiers","local","set","ExportDefaultDeclaration","decl","isFunctionDeclaration","id","ExportAllDeclaration","ExportNamedDeclaration","Statement","isImportDeclaration","isExportDeclaration","skip","referenceVisitor","Program","bindings","scope","getAllBindings","Object","keys","forEach","has","add","ReferencedIdentifier","binding","getBinding","isProgram","AssignmentExpression","left","getBindingIdentifiers","isIdentifier","ast","Error","Array","from","permuteHelperAST","metadata","localBindings","getDependency","dependenciesRefs","toRename","type","newName","exp","imps","map","p","impsBindingRefs","replaceWith","assignPath","assign","pushContainer","rename","_iterator","_createForOfIteratorHelper","_step","s","n","done","remove","err","e","f","_iterator2","_step2","helperData","create","loadHelper","helper","ReferenceError","code","fn","fakeFile","stop","filename","inputMap","minVersion","build","nodes","program","body","getDependencies","values","ensure","newFileClass","list","exports","replace","_default"],"sources":["../src/index.ts"],"sourcesContent":["import type { File } from \"@babel/core\";\nimport type { NodePath, Visitor } from \"@babel/traverse\";\nimport traverse from \"@babel/traverse\";\nimport {\n  assignmentExpression,\n  cloneNode,\n  expressionStatement,\n  file,\n  identifier,\n} from \"@babel/types\";\nimport type * as t from \"@babel/types\";\nimport helpers from \"./helpers.ts\";\n\nfunction makePath(path: NodePath) {\n  const parts = [];\n\n  for (; path.parentPath; path = path.parentPath) {\n    parts.push(path.key);\n    if (path.inList) parts.push(path.listKey);\n  }\n\n  return parts.reverse().join(\".\");\n}\n\nlet FileClass: typeof File | undefined = undefined;\n\ninterface HelperMetadata {\n  globals: string[];\n  localBindingNames: string[];\n  dependencies: Map<t.Identifier, string>;\n  exportBindingAssignments: string[];\n  exportPath: string;\n  exportName: string;\n  importBindingsReferences: string[];\n  importPaths: string[];\n}\n\n/**\n * Given a file AST for a given helper, get a bunch of metadata about it so that Babel can quickly render\n * the helper is whatever context it is needed in.\n */\nfunction getHelperMetadata(file: File): HelperMetadata {\n  const globals = new Set<string>();\n  const localBindingNames = new Set<string>();\n  // Maps imported identifier -> helper name\n  const dependencies = new Map<t.Identifier, string>();\n\n  let exportName: string | undefined;\n  let exportPath: string | undefined;\n  const exportBindingAssignments: string[] = [];\n  const importPaths: string[] = [];\n  const importBindingsReferences: string[] = [];\n\n  const dependencyVisitor: Visitor = {\n    ImportDeclaration(child) {\n      const name = child.node.source.value;\n      if (!helpers[name]) {\n        throw child.buildCodeFrameError(`Unknown helper ${name}`);\n      }\n      if (\n        child.get(\"specifiers\").length !== 1 ||\n        // @ts-expect-error isImportDefaultSpecifier does not work with NodePath union\n        !child.get(\"specifiers.0\").isImportDefaultSpecifier()\n      ) {\n        throw child.buildCodeFrameError(\n          \"Helpers can only import a default value\",\n        );\n      }\n      const bindingIdentifier = child.node.specifiers[0].local;\n      dependencies.set(bindingIdentifier, name);\n      importPaths.push(makePath(child));\n    },\n    ExportDefaultDeclaration(child) {\n      const decl = child.get(\"declaration\");\n\n      if (!decl.isFunctionDeclaration() || !decl.node.id) {\n        throw decl.buildCodeFrameError(\n          \"Helpers can only export named function declarations\",\n        );\n      }\n\n      exportName = decl.node.id.name;\n      exportPath = makePath(child);\n    },\n    ExportAllDeclaration(child) {\n      throw child.buildCodeFrameError(\"Helpers can only export default\");\n    },\n    ExportNamedDeclaration(child) {\n      throw child.buildCodeFrameError(\"Helpers can only export default\");\n    },\n    Statement(child) {\n      if (child.isImportDeclaration() || child.isExportDeclaration()) return;\n\n      child.skip();\n    },\n  };\n\n  const referenceVisitor: Visitor = {\n    Program(path) {\n      const bindings = path.scope.getAllBindings();\n\n      Object.keys(bindings).forEach(name => {\n        if (name === exportName) return;\n        if (dependencies.has(bindings[name].identifier)) return;\n\n        localBindingNames.add(name);\n      });\n    },\n    ReferencedIdentifier(child) {\n      const name = child.node.name;\n      const binding = child.scope.getBinding(name);\n      if (!binding) {\n        if (name !== \"arguments\" || child.scope.path.isProgram()) {\n          globals.add(name);\n        }\n      } else if (dependencies.has(binding.identifier)) {\n        importBindingsReferences.push(makePath(child));\n      }\n    },\n    AssignmentExpression(child) {\n      const left = child.get(\"left\");\n\n      if (!(exportName in left.getBindingIdentifiers())) return;\n\n      if (!left.isIdentifier()) {\n        throw left.buildCodeFrameError(\n          \"Only simple assignments to exports are allowed in helpers\",\n        );\n      }\n\n      const binding = child.scope.getBinding(exportName);\n\n      if (binding?.scope.path.isProgram()) {\n        exportBindingAssignments.push(makePath(child));\n      }\n    },\n  };\n\n  traverse(file.ast, dependencyVisitor, file.scope);\n  traverse(file.ast, referenceVisitor, file.scope);\n\n  if (!exportPath) throw new Error(\"Helpers must have a default export.\");\n\n  // Process these in reverse so that mutating the references does not invalidate any later paths in\n  // the list.\n  exportBindingAssignments.reverse();\n\n  return {\n    globals: Array.from(globals),\n    localBindingNames: Array.from(localBindingNames),\n    dependencies,\n    exportBindingAssignments,\n    exportPath,\n    exportName,\n    importBindingsReferences,\n    importPaths,\n  };\n}\n\ntype GetDependency = (name: string) => t.Expression;\n\n/**\n * Given a helper AST and information about how it will be used, update the AST to match the usage.\n */\nfunction permuteHelperAST(\n  file: File,\n  metadata: HelperMetadata,\n  id?: t.Identifier | t.MemberExpression,\n  localBindings?: string[],\n  getDependency?: GetDependency,\n) {\n  if (localBindings && !id) {\n    throw new Error(\"Unexpected local bindings for module-based helpers.\");\n  }\n\n  if (!id) return;\n\n  const {\n    localBindingNames,\n    dependencies,\n    exportBindingAssignments,\n    exportPath,\n    exportName,\n    importBindingsReferences,\n    importPaths,\n  } = metadata;\n\n  const dependenciesRefs: Record<string, t.Expression> = {};\n  dependencies.forEach((name, id) => {\n    dependenciesRefs[id.name] =\n      (typeof getDependency === \"function\" && getDependency(name)) || id;\n  });\n\n  const toRename: Record<string, string> = {};\n  const bindings = new Set(localBindings || []);\n  if (id.type === \"Identifier\") bindings.add(id.name);\n  localBindingNames.forEach(name => {\n    let newName = name;\n    while (bindings.has(newName)) newName = \"_\" + newName;\n\n    if (newName !== name) toRename[name] = newName;\n  });\n\n  if (id.type === \"Identifier\" && exportName !== id.name) {\n    toRename[exportName] = id.name;\n  }\n\n  const { path } = file;\n\n  // We need to compute these in advance because removing nodes would\n  // invalidate the paths.\n  const exp: NodePath<t.ExportDefaultDeclaration> = path.get(exportPath);\n  const imps: NodePath<t.ImportDeclaration>[] = importPaths.map(p =>\n    path.get(p),\n  );\n  const impsBindingRefs: NodePath<t.Identifier>[] =\n    importBindingsReferences.map(p => path.get(p));\n\n  // We assert that this is a FunctionDeclaration in dependencyVisitor.\n  const decl = exp.get(\"declaration\") as NodePath<t.FunctionDeclaration>;\n\n  if (id.type === \"Identifier\") {\n    exp.replaceWith(decl);\n  } else if (id.type === \"MemberExpression\") {\n    exportBindingAssignments.forEach(assignPath => {\n      const assign: NodePath<t.Expression> = path.get(assignPath);\n      assign.replaceWith(assignmentExpression(\"=\", id, assign.node));\n    });\n    exp.replaceWith(decl);\n    path.pushContainer(\n      \"body\",\n      expressionStatement(\n        assignmentExpression(\"=\", id, identifier(exportName)),\n      ),\n    );\n  } else {\n    throw new Error(\"Unexpected helper format.\");\n  }\n\n  Object.keys(toRename).forEach(name => {\n    path.scope.rename(name, toRename[name]);\n  });\n\n  for (const path of imps) path.remove();\n  for (const path of impsBindingRefs) {\n    const node = cloneNode(dependenciesRefs[path.node.name]);\n    path.replaceWith(node);\n  }\n}\n\ninterface HelperData {\n  build: (\n    getDependency: GetDependency,\n    id: t.Identifier | t.MemberExpression,\n    localBindings: string[],\n  ) => {\n    nodes: t.Program[\"body\"];\n    globals: string[];\n  };\n  minVersion: string;\n  getDependencies: () => string[];\n}\n\nconst helperData: Record<string, HelperData> = Object.create(null);\nfunction loadHelper(name: string) {\n  if (!helperData[name]) {\n    const helper = helpers[name];\n    if (!helper) {\n      throw Object.assign(new ReferenceError(`Unknown helper ${name}`), {\n        code: \"BABEL_HELPER_UNKNOWN\",\n        helper: name,\n      });\n    }\n\n    const fn = (): File => {\n      if (!process.env.BABEL_8_BREAKING) {\n        if (!FileClass) {\n          const fakeFile = { ast: file(helper.ast()), path: null } as File;\n          traverse(fakeFile.ast, {\n            Program: path => (fakeFile.path = path).stop(),\n          });\n          return fakeFile;\n        }\n      }\n      return new FileClass(\n        { filename: `babel-helper://${name}` },\n        {\n          ast: file(helper.ast()),\n          code: \"[internal Babel helper code]\",\n          inputMap: null,\n        },\n      );\n    };\n\n    // We compute the helper metadata lazily, so that we skip that\n    // work if we only need the `.minVersion` (for example because\n    // of a call to `.availableHelper` when `@babel/runtime`).\n    let metadata: HelperMetadata | null = null;\n\n    helperData[name] = {\n      minVersion: helper.minVersion,\n      build(getDependency, id, localBindings) {\n        const file = fn();\n        metadata ||= getHelperMetadata(file);\n        permuteHelperAST(file, metadata, id, localBindings, getDependency);\n\n        return {\n          nodes: file.ast.program.body,\n          globals: metadata.globals,\n        };\n      },\n      getDependencies() {\n        metadata ||= getHelperMetadata(fn());\n        return Array.from(metadata.dependencies.values());\n      },\n    };\n  }\n\n  return helperData[name];\n}\n\nexport function get(\n  name: string,\n  getDependency?: GetDependency,\n  id?: t.Identifier | t.MemberExpression,\n  localBindings?: string[],\n) {\n  return loadHelper(name).build(getDependency, id, localBindings);\n}\n\nexport function minVersion(name: string) {\n  return loadHelper(name).minVersion;\n}\n\nexport function getDependencies(name: string): ReadonlyArray<string> {\n  return loadHelper(name).getDependencies();\n}\n\nexport function ensure(name: string, newFileClass: typeof File) {\n  // We inject the File class here rather than importing it to avoid\n  // circular dependencies between @babel/core and @babel/helpers.\n  FileClass ||= newFileClass;\n\n  loadHelper(name);\n}\n\nexport const list = Object.keys(helpers).map(name => name.replace(/^_/, \"\"));\n\nexport default get;\n"],"mappings":"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","ignoreList":[]}
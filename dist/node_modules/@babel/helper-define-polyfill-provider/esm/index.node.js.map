{"version":3,"file":"index.node.js","names":["_babel","t$1","_ref2","types","template","intersection","a","b","result","Set","forEach","v","has","add","has$1","object","key","Object","prototype","hasOwnProperty","call","getType","target","toString","slice","resolveId","path","isIdentifier","scope","hasBinding","node","name","isPure","_path$evaluate","evaluate","deopt","resolveKey","computed","arguments","length","undefined","isStringLiteral","value","parent","isMemberExpression","get","sym","_path$evaluate2","resolveSource","obj","id","placement","isRegExpLiteral","isFunction","_obj$evaluate","getImportSource","_ref3","specifiers","source","getRequireSource","_ref4","isExpressionStatement","expression","isCallExpression","callee","hoist","_blockHoist","createUtilsGetter","cache","prog","findParent","p","isProgram","injectGlobalImport","url","moduleName","storeAnonymous","isScript","statement","ast","_templateObject","_taggedTemplateLiteral","importDeclaration","injectNamedImport","hint","storeNamed","generateUidIdentifier","_templateObject2","importSpecifier","injectDefaultImport","_templateObject3","importDefaultSpecifier","t","_ref5","ImportsCachedInjector","resolver","getPreferredIndex","_classCallCheck","_imports","WeakMap","_anonymousImports","_lastImports","_resolver","_getPreferredIndex","programPath","getVal","_normalizeKey","imports","_ensure","sourceType","stringLiteral","_injectImport","Map","_getVal","identifier","set","_this$_lastImports$ge","newIndex","lastImports","isPathStillValid","container","body","last","Infinity","_iterator","_createForOfIteratorHelper","entries","_step","s","n","done","_step$value","_slicedToArray","i","data","index","_path$insertBefore","insertBefore","_path$insertBefore2","newPath","splice","_last$insertAfter","insertAfter","_last$insertAfter2","push","_programPath$unshiftC","unshiftContainer","_programPath$unshiftC2","map","Collection","collection","concat","presetEnvSilentDebugHeader","stringifyTargetsMultiline","targets","JSON","stringify","prettifyTargets","patternToRegExp","pattern","RegExp","_unused","buildUnusedError","label","unused","original","String","join","buldDuplicatesError","duplicates","size","Array","from","validateIncludeExclude","provider","polyfills","includePatterns","excludePatterns","current","filter","regexp","matched","_iterator2","keys","_step2","polyfill","test","include","unusedInclude","exclude","unusedExclude","Error","applyMissingDependenciesDefaults","options","babelApi","_options$missingDepen","missingDependencies","caller","_missingDependencies$","log","_missingDependencies$2","inject","_missingDependencies$3","all","isRemoved","removed","parentPath","listKey","includes","usage","callProvider","property","kind","handleReferencedIdentifier","getBindingIdentifier","analyzeMemberExpression","handleAsMemberExpression","ReferencedIdentifier","MemberExpression","_analyzeMemberExpress","objectIsGlobalIdentifier","binding","getBinding","isImportNamespaceSpecifier","skipObject","shouldSkip","ObjectPattern","isVariableDeclarator","isAssignmentExpression","grand","isNewExpression","_resolveSource","_iterator3","_step3","prop","isObjectProperty","BinaryExpression","operator","entry","ImportDeclaration","Program","bodyPath","nativeRequireResolve","parseFloat","process","versions","require","createRequire","import","meta","myResolve","basedir","resolve","paths","replace","requireResolve","sync","dirname","absoluteImports","err","code","assign","_unused2","logMissing","missingDeps","deps","sort","console","warn","exitCode","allMissingDeps","laterLogMissingDependencies","debounce","laterLogMissing","PossibleGlobalObjects","createMetaResolver","staticP","instanceP","instance","globalP","global","desc","getTargets","_getTargets","resolveOptions","method","targetsOption","ignoreBrowserslistConfig","configPath","debug","shouldInjectPolyfill","providerOptions","_objectWithoutProperties","_excluded","isEmpty","methodName","targetsObj","isArray","browsers","instantiateProvider","factory","debugLog","_resolveOptions","polyfillsSupport","polyfillsNames","filterPolyfills","getUtils","_polyfillsNames$get","_polyfillsNames","depsCache","api","babel","providerName","shouldInject","isRequired","compatData","excludes","_debugLog","_debugLog$polyfillsSu","found","assertDependency","version","dep","mapGetOr","_validateIncludeExclu","payload","_ref","utils","definePolyfillProvider","declare","assertVersion","traverse","_instantiateProvider","createVisitor","visitor","visitors","merge","runtimeName","pre","file","_provider$pre","providers","apply","post","_provider$post","filename","_step4","_iterator4","_debugLog$polyfillsSu2","filteredTargets","getInclusionReasons","formattedTargets","getDefault","val","_default","exports"],"sources":["../src/utils.ts","../src/imports-injector.ts","../src/debug-utils.ts","../src/normalize-options.ts","../src/visitors/usage.ts","../src/visitors/entry.ts","../src/node/dependencies.ts","../src/meta-resolver.ts","../src/index.ts"],"sourcesContent":["import { types as t, template } from \"@babel/core\";\nimport type { NodePath } from \"@babel/traverse\";\nimport type { Utils } from \"./types\";\nimport type ImportsCachedInjector from \"./imports-injector\";\n\nexport function intersection<T>(a: Set<T>, b: Set<T>): Set<T> {\n  const result = new Set<T>();\n  a.forEach(v => b.has(v) && result.add(v));\n  return result;\n}\n\nexport function has(object: any, key: string) {\n  return Object.prototype.hasOwnProperty.call(object, key);\n}\n\nfunction getType(target: any): string {\n  return Object.prototype.toString.call(target).slice(8, -1);\n}\n\nfunction resolveId(path): string {\n  if (\n    path.isIdentifier() &&\n    !path.scope.hasBinding(path.node.name, /* noGlobals */ true)\n  ) {\n    return path.node.name;\n  }\n\n  if (path.isPure()) {\n    const { deopt } = path.evaluate();\n    if (deopt && deopt.isIdentifier()) {\n      return deopt.node.name;\n    }\n  }\n}\n\nexport function resolveKey(\n  path: NodePath<t.Expression | t.PrivateName>,\n  computed: boolean = false,\n) {\n  const { scope } = path;\n  if (path.isStringLiteral()) return path.node.value;\n  const isIdentifier = path.isIdentifier();\n  if (\n    isIdentifier &&\n    !(computed || (path.parent as t.MemberExpression).computed)\n  ) {\n    return path.node.name;\n  }\n\n  if (\n    computed &&\n    path.isMemberExpression() &&\n    path.get(\"object\").isIdentifier({ name: \"Symbol\" }) &&\n    !scope.hasBinding(\"Symbol\", /* noGlobals */ true)\n  ) {\n    const sym = resolveKey(path.get(\"property\"), path.node.computed);\n    if (sym) return \"Symbol.\" + sym;\n  }\n\n  if (\n    isIdentifier\n      ? scope.hasBinding(path.node.name, /* noGlobals */ true)\n      : path.isPure()\n  ) {\n    const { value } = path.evaluate();\n    if (typeof value === \"string\") return value;\n  }\n}\n\nexport function resolveSource(obj: NodePath): {\n  id: string | null;\n  placement: \"prototype\" | \"static\" | null;\n} {\n  if (\n    obj.isMemberExpression() &&\n    obj.get(\"property\").isIdentifier({ name: \"prototype\" })\n  ) {\n    const id = resolveId(obj.get(\"object\"));\n\n    if (id) {\n      return { id, placement: \"prototype\" };\n    }\n    return { id: null, placement: null };\n  }\n\n  const id = resolveId(obj);\n  if (id) {\n    return { id, placement: \"static\" };\n  }\n\n  if (obj.isRegExpLiteral()) {\n    return { id: \"RegExp\", placement: \"prototype\" };\n  } else if (obj.isFunction()) {\n    return { id: \"Function\", placement: \"prototype\" };\n  } else if (obj.isPure()) {\n    const { value } = obj.evaluate();\n    if (value !== undefined) {\n      return { id: getType(value), placement: \"prototype\" };\n    }\n  }\n\n  return { id: null, placement: null };\n}\n\nexport function getImportSource({ node }: NodePath<t.ImportDeclaration>) {\n  if (node.specifiers.length === 0) return node.source.value;\n}\n\nexport function getRequireSource({ node }: NodePath<t.Statement>) {\n  if (!t.isExpressionStatement(node)) return;\n  const { expression } = node;\n  if (\n    t.isCallExpression(expression) &&\n    t.isIdentifier(expression.callee) &&\n    expression.callee.name === \"require\" &&\n    expression.arguments.length === 1 &&\n    t.isStringLiteral(expression.arguments[0])\n  ) {\n    return expression.arguments[0].value;\n  }\n}\n\nfunction hoist(node: t.Node) {\n  // @ts-expect-error\n  node._blockHoist = 3;\n  return node;\n}\n\nexport function createUtilsGetter(cache: ImportsCachedInjector) {\n  return (path: NodePath): Utils => {\n    const prog = path.findParent(p => p.isProgram()) as NodePath<t.Program>;\n\n    return {\n      injectGlobalImport(url, moduleName) {\n        cache.storeAnonymous(prog, url, moduleName, (isScript, source) => {\n          return isScript\n            ? template.statement.ast`require(${source})`\n            : t.importDeclaration([], source);\n        });\n      },\n      injectNamedImport(url, name, hint = name, moduleName) {\n        return cache.storeNamed(\n          prog,\n          url,\n          name,\n          moduleName,\n          (isScript, source, name) => {\n            const id = prog.scope.generateUidIdentifier(hint);\n            return {\n              node: isScript\n                ? hoist(template.statement.ast`\n                  var ${id} = require(${source}).${name}\n                `)\n                : t.importDeclaration([t.importSpecifier(id, name)], source),\n              name: id.name,\n            };\n          },\n        );\n      },\n      injectDefaultImport(url, hint = url, moduleName) {\n        return cache.storeNamed(\n          prog,\n          url,\n          \"default\",\n          moduleName,\n          (isScript, source) => {\n            const id = prog.scope.generateUidIdentifier(hint);\n            return {\n              node: isScript\n                ? hoist(template.statement.ast`var ${id} = require(${source})`)\n                : t.importDeclaration([t.importDefaultSpecifier(id)], source),\n              name: id.name,\n            };\n          },\n        );\n      },\n    };\n  };\n}\n","import type { NodePath } from \"@babel/traverse\";\nimport { types as t } from \"@babel/core\";\n\ntype StrMap<K> = Map<string, K>;\n\nexport default class ImportsCachedInjector {\n  _imports: WeakMap<NodePath<t.Program>, StrMap<string>>;\n  _anonymousImports: WeakMap<NodePath<t.Program>, Set<string>>;\n  _lastImports: WeakMap<\n    NodePath<t.Program>,\n    Array<{ path: NodePath<t.Node>; index: number }>\n  >;\n  _resolver: (url: string) => string;\n  _getPreferredIndex: (url: string) => number;\n\n  constructor(\n    resolver: (url: string) => string,\n    getPreferredIndex: (url: string) => number,\n  ) {\n    this._imports = new WeakMap();\n    this._anonymousImports = new WeakMap();\n    this._lastImports = new WeakMap();\n    this._resolver = resolver;\n    this._getPreferredIndex = getPreferredIndex;\n  }\n\n  storeAnonymous(\n    programPath: NodePath<t.Program>,\n    url: string,\n    moduleName: string,\n    getVal: (isScript: boolean, source: t.StringLiteral) => t.Node,\n  ) {\n    const key = this._normalizeKey(programPath, url);\n    const imports = this._ensure<Set<string>>(\n      this._anonymousImports,\n      programPath,\n      Set,\n    );\n\n    if (imports.has(key)) return;\n\n    const node = getVal(\n      programPath.node.sourceType === \"script\",\n      t.stringLiteral(this._resolver(url)),\n    );\n    imports.add(key);\n    this._injectImport(programPath, node, moduleName);\n  }\n\n  storeNamed(\n    programPath: NodePath<t.Program>,\n    url: string,\n    name: string,\n    moduleName: string,\n    getVal: (\n      isScript: boolean,\n      // eslint-disable-next-line no-undef\n      source: t.StringLiteral,\n      // eslint-disable-next-line no-undef\n      name: t.Identifier,\n    ) => { node: t.Node; name: string },\n  ) {\n    const key = this._normalizeKey(programPath, url, name);\n    const imports = this._ensure<Map<string, any>>(\n      this._imports,\n      programPath,\n      Map,\n    );\n\n    if (!imports.has(key)) {\n      const { node, name: id } = getVal(\n        programPath.node.sourceType === \"script\",\n        t.stringLiteral(this._resolver(url)),\n        t.identifier(name),\n      );\n      imports.set(key, id);\n      this._injectImport(programPath, node, moduleName);\n    }\n\n    return t.identifier(imports.get(key));\n  }\n\n  _injectImport(\n    programPath: NodePath<t.Program>,\n    node: t.Node,\n    moduleName: string,\n  ) {\n    const newIndex = this._getPreferredIndex(moduleName);\n    const lastImports = this._lastImports.get(programPath) ?? [];\n\n    const isPathStillValid = (path: NodePath) =>\n      path.node &&\n      // Sometimes the AST is modified and the \"last import\"\n      // we have has been replaced\n      path.parent === programPath.node &&\n      path.container === programPath.node.body;\n\n    let last: NodePath;\n\n    if (newIndex === Infinity) {\n      // Fast path: we can always just insert at the end if newIndex is `Infinity`\n      if (lastImports.length > 0) {\n        last = lastImports[lastImports.length - 1].path;\n        if (!isPathStillValid(last)) last = undefined;\n      }\n    } else {\n      for (const [i, data] of lastImports.entries()) {\n        const { path, index } = data;\n        if (isPathStillValid(path)) {\n          if (newIndex < index) {\n            const [newPath] = path.insertBefore(node);\n            lastImports.splice(i, 0, { path: newPath, index: newIndex });\n            return;\n          }\n          last = path;\n        }\n      }\n    }\n\n    if (last) {\n      const [newPath] = last.insertAfter(node);\n      lastImports.push({ path: newPath, index: newIndex });\n    } else {\n      const [newPath] = programPath.unshiftContainer(\"body\", node);\n      this._lastImports.set(programPath, [{ path: newPath, index: newIndex }]);\n    }\n  }\n\n  _ensure<C extends Map<string, any> | Set<string>>(\n    map: WeakMap<NodePath<t.Program>, C>,\n    programPath: NodePath<t.Program>,\n    Collection: { new (...args: any): C },\n  ): C {\n    let collection = map.get(programPath);\n    if (!collection) {\n      collection = new Collection();\n      map.set(programPath, collection);\n    }\n    return collection;\n  }\n\n  _normalizeKey(\n    programPath: NodePath<t.Program>,\n    url: string,\n    name: string = \"\",\n  ): string {\n    const { sourceType } = programPath.node;\n\n    // If we rely on the imported binding (the \"name\" parameter), we also need to cache\n    // based on the sourceType. This is because the module transforms change the names\n    // of the import variables.\n    return `${name && sourceType}::${url}::${name}`;\n  }\n}\n","import { prettifyTargets } from \"@babel/helper-compilation-targets\";\n\nimport type { Targets } from \"./types\";\n\nexport const presetEnvSilentDebugHeader =\n  \"#__secret_key__@babel/preset-env__don't_log_debug_header_and_resolved_targets\";\n\nexport function stringifyTargetsMultiline(targets: Targets): string {\n  return JSON.stringify(prettifyTargets(targets), null, 2);\n}\n\nexport function stringifyTargets(targets: Targets): string {\n  return JSON.stringify(targets)\n    .replace(/,/g, \", \")\n    .replace(/^\\{\"/, '{ \"')\n    .replace(/\"\\}$/, '\" }');\n}\n","import { intersection } from \"./utils\";\nimport type {\n  Pattern,\n  PluginOptions,\n  MissingDependenciesOption,\n} from \"./types\";\n\nfunction patternToRegExp(pattern: Pattern): RegExp | null {\n  if (pattern instanceof RegExp) return pattern;\n\n  try {\n    return new RegExp(`^${pattern}$`);\n  } catch {\n    return null;\n  }\n}\n\nfunction buildUnusedError(label, unused) {\n  if (!unused.length) return \"\";\n  return (\n    `  - The following \"${label}\" patterns didn't match any polyfill:\\n` +\n    unused.map(original => `    ${String(original)}\\n`).join(\"\")\n  );\n}\n\nfunction buldDuplicatesError(duplicates) {\n  if (!duplicates.size) return \"\";\n  return (\n    `  - The following polyfills were matched both by \"include\" and \"exclude\" patterns:\\n` +\n    Array.from(duplicates, name => `    ${name}\\n`).join(\"\")\n  );\n}\n\nexport function validateIncludeExclude(\n  provider: string,\n  polyfills: Map<string, unknown>,\n  includePatterns: Pattern[],\n  excludePatterns: Pattern[],\n) {\n  let current;\n  const filter = pattern => {\n    const regexp = patternToRegExp(pattern);\n    if (!regexp) return false;\n\n    let matched = false;\n    for (const polyfill of polyfills.keys()) {\n      if (regexp.test(polyfill)) {\n        matched = true;\n        current.add(polyfill);\n      }\n    }\n    return !matched;\n  };\n\n  // prettier-ignore\n  const include = current = new Set<string> ();\n  const unusedInclude = Array.from(includePatterns).filter(filter);\n\n  // prettier-ignore\n  const exclude = current = new Set<string> ();\n  const unusedExclude = Array.from(excludePatterns).filter(filter);\n\n  const duplicates = intersection(include, exclude);\n\n  if (\n    duplicates.size > 0 ||\n    unusedInclude.length > 0 ||\n    unusedExclude.length > 0\n  ) {\n    throw new Error(\n      `Error while validating the \"${provider}\" provider options:\\n` +\n        buildUnusedError(\"include\", unusedInclude) +\n        buildUnusedError(\"exclude\", unusedExclude) +\n        buldDuplicatesError(duplicates),\n    );\n  }\n\n  return { include, exclude };\n}\n\nexport function applyMissingDependenciesDefaults(\n  options: PluginOptions,\n  babelApi: any,\n): MissingDependenciesOption {\n  const { missingDependencies = {} } = options;\n  if (missingDependencies === false) return false;\n\n  const caller = babelApi.caller(caller => caller?.name);\n\n  const {\n    log = \"deferred\",\n    inject = caller === \"rollup-plugin-babel\" ? \"throw\" : \"import\",\n    all = false,\n  } = missingDependencies;\n\n  return { log, inject, all };\n}\n","import type { NodePath } from \"@babel/traverse\";\nimport { types as t } from \"@babel/core\";\nimport type { CallProvider } from \"./index\";\n\nimport { resolveKey, resolveSource } from \"../utils\";\n\nfunction isRemoved(path: NodePath) {\n  if (path.removed) return true;\n  if (!path.parentPath) return false;\n  if (path.listKey) {\n    if (!path.parentPath.node[path.listKey].includes(path.node)) return true;\n  } else {\n    if (path.parentPath.node[path.key] !== path.node) return true;\n  }\n  return isRemoved(path.parentPath);\n}\n\nexport default (callProvider: CallProvider) => {\n  function property(object, key, placement, path) {\n    return callProvider({ kind: \"property\", object, key, placement }, path);\n  }\n\n  function handleReferencedIdentifier(path) {\n    const {\n      node: { name },\n      scope,\n    } = path;\n    if (scope.getBindingIdentifier(name)) return;\n\n    callProvider({ kind: \"global\", name }, path);\n  }\n\n  function analyzeMemberExpression(path: NodePath<t.MemberExpression>) {\n    const key = resolveKey(path.get(\"property\"), path.node.computed);\n    return { key, handleAsMemberExpression: !!key && key !== \"prototype\" };\n  }\n\n  return {\n    // Symbol(), new Promise\n    ReferencedIdentifier(path: NodePath<t.Identifier>) {\n      const { parentPath } = path;\n      if (\n        parentPath.isMemberExpression({ object: path.node }) &&\n        analyzeMemberExpression(parentPath).handleAsMemberExpression\n      ) {\n        return;\n      }\n      handleReferencedIdentifier(path);\n    },\n\n    MemberExpression(path: NodePath<t.MemberExpression>) {\n      const { key, handleAsMemberExpression } = analyzeMemberExpression(path);\n      if (!handleAsMemberExpression) return;\n\n      const object = path.get(\"object\");\n      let objectIsGlobalIdentifier = object.isIdentifier();\n      if (objectIsGlobalIdentifier) {\n        const binding = object.scope.getBinding(\n          (object.node as t.Identifier).name,\n        );\n        if (binding) {\n          if (binding.path.isImportNamespaceSpecifier()) return;\n          objectIsGlobalIdentifier = false;\n        }\n      }\n\n      const source = resolveSource(object);\n      let skipObject = property(source.id, key, source.placement, path);\n      skipObject ||=\n        !objectIsGlobalIdentifier ||\n        path.shouldSkip ||\n        object.shouldSkip ||\n        isRemoved(object);\n\n      if (!skipObject) handleReferencedIdentifier(object);\n    },\n\n    ObjectPattern(path: NodePath<t.ObjectPattern>) {\n      const { parentPath, parent } = path;\n      let obj;\n\n      // const { keys, values } = Object\n      if (parentPath.isVariableDeclarator()) {\n        obj = parentPath.get(\"init\");\n        // ({ keys, values } = Object)\n      } else if (parentPath.isAssignmentExpression()) {\n        obj = parentPath.get(\"right\");\n        // !function ({ keys, values }) {...} (Object)\n        // resolution does not work after properties transform :-(\n      } else if (parentPath.isFunction()) {\n        const grand = parentPath.parentPath;\n        if (grand.isCallExpression() || grand.isNewExpression()) {\n          if (grand.node.callee === parent) {\n            obj = grand.get(\"arguments\")[path.key];\n          }\n        }\n      }\n\n      let id = null;\n      let placement = null;\n      if (obj) ({ id, placement } = resolveSource(obj));\n\n      for (const prop of path.get(\"properties\")) {\n        if (prop.isObjectProperty()) {\n          const key = resolveKey(prop.get(\"key\"));\n          if (key) property(id, key, placement, prop);\n        }\n      }\n    },\n\n    BinaryExpression(path: NodePath<t.BinaryExpression>) {\n      if (path.node.operator !== \"in\") return;\n\n      const source = resolveSource(path.get(\"right\"));\n      const key = resolveKey(path.get(\"left\"), true);\n\n      if (!key) return;\n\n      callProvider(\n        {\n          kind: \"in\",\n          object: source.id,\n          key,\n          placement: source.placement,\n        },\n        path,\n      );\n    },\n  };\n};\n","import type { NodePath } from \"@babel/traverse\";\nimport { types as t } from \"@babel/core\";\nimport type { CallProvider } from \"./index\";\n\nimport { getImportSource, getRequireSource } from \"../utils\";\n\nexport default (callProvider: CallProvider) => ({\n  ImportDeclaration(path: NodePath<t.ImportDeclaration>) {\n    const source = getImportSource(path);\n    if (!source) return;\n    callProvider({ kind: \"import\", source }, path);\n  },\n  Program(path: NodePath<t.Program>) {\n    path.get(\"body\").forEach(bodyPath => {\n      const source = getRequireSource(bodyPath);\n      if (!source) return;\n      callProvider({ kind: \"import\", source }, bodyPath);\n    });\n  },\n});\n","import path from \"path\";\nimport debounce from \"lodash.debounce\";\nimport requireResolve from \"resolve\";\n\nconst nativeRequireResolve = parseFloat(process.versions.node) >= 8.9;\n\nimport { createRequire } from \"module\";\nconst require = createRequire(import /*::(_)*/.meta.url); // eslint-disable-line\n\nfunction myResolve(name: string, basedir: string) {\n  if (nativeRequireResolve) {\n    return require\n      .resolve(name, {\n        paths: [basedir],\n      })\n      .replace(/\\\\/g, \"/\");\n  } else {\n    return requireResolve.sync(name, { basedir }).replace(/\\\\/g, \"/\");\n  }\n}\n\nexport function resolve(\n  dirname: string,\n  moduleName: string,\n  absoluteImports: boolean | string,\n): string {\n  if (absoluteImports === false) return moduleName;\n\n  let basedir = dirname;\n  if (typeof absoluteImports === \"string\") {\n    basedir = path.resolve(basedir, absoluteImports);\n  }\n\n  try {\n    return myResolve(moduleName, basedir);\n  } catch (err) {\n    if (err.code !== \"MODULE_NOT_FOUND\") throw err;\n\n    throw Object.assign(\n      new Error(`Failed to resolve \"${moduleName}\" relative to \"${dirname}\"`),\n      {\n        code: \"BABEL_POLYFILL_NOT_FOUND\",\n        polyfill: moduleName,\n        dirname,\n      },\n    );\n  }\n}\n\nexport function has(basedir: string, name: string) {\n  try {\n    myResolve(name, basedir);\n    return true;\n  } catch {\n    return false;\n  }\n}\n\nexport function logMissing(missingDeps: Set<string>) {\n  if (missingDeps.size === 0) return;\n\n  const deps = Array.from(missingDeps).sort().join(\" \");\n\n  console.warn(\n    \"\\nSome polyfills have been added but are not present in your dependencies.\\n\" +\n      \"Please run one of the following commands:\\n\" +\n      `\\tnpm install --save ${deps}\\n` +\n      `\\tyarn add ${deps}\\n`,\n  );\n\n  process.exitCode = 1;\n}\n\nlet allMissingDeps = new Set<string>();\n\nconst laterLogMissingDependencies = debounce(() => {\n  logMissing(allMissingDeps);\n  allMissingDeps = new Set<string>();\n}, 100);\n\nexport function laterLogMissing(missingDeps: Set<string>) {\n  if (missingDeps.size === 0) return;\n\n  missingDeps.forEach(name => allMissingDeps.add(name));\n  laterLogMissingDependencies();\n}\n","import type {\n  MetaDescriptor,\n  ResolverPolyfills,\n  ResolvedPolyfill,\n} from \"./types\";\n\nimport { has } from \"./utils\";\n\ntype ResolverFn<T> = (meta: MetaDescriptor) => void | ResolvedPolyfill<T>;\n\nconst PossibleGlobalObjects = new Set<string>([\n  \"global\",\n  \"globalThis\",\n  \"self\",\n  \"window\",\n]);\n\nexport default function createMetaResolver<T>(\n  polyfills: ResolverPolyfills<T>,\n): ResolverFn<T> {\n  const { static: staticP, instance: instanceP, global: globalP } = polyfills;\n\n  return meta => {\n    if (meta.kind === \"global\" && globalP && has(globalP, meta.name)) {\n      return { kind: \"global\", desc: globalP[meta.name], name: meta.name };\n    }\n\n    if (meta.kind === \"property\" || meta.kind === \"in\") {\n      const { placement, object, key } = meta;\n\n      if (object && placement === \"static\") {\n        if (globalP && PossibleGlobalObjects.has(object) && has(globalP, key)) {\n          return { kind: \"global\", desc: globalP[key], name: key };\n        }\n\n        if (staticP && has(staticP, object) && has(staticP[object], key)) {\n          return {\n            kind: \"static\",\n            desc: staticP[object][key],\n            name: `${object}$${key}`,\n          };\n        }\n      }\n\n      if (instanceP && has(instanceP, key)) {\n        return { kind: \"instance\", desc: instanceP[key], name: `${key}` };\n      }\n    }\n  };\n}\n","import { declare } from \"@babel/helper-plugin-utils\";\nimport type { NodePath } from \"@babel/traverse\";\n\nimport _getTargets, {\n  isRequired,\n  getInclusionReasons,\n} from \"@babel/helper-compilation-targets\";\nconst getTargets = _getTargets.default || _getTargets;\n\nimport { createUtilsGetter } from \"./utils\";\nimport ImportsCachedInjector from \"./imports-injector\";\nimport {\n  stringifyTargetsMultiline,\n  presetEnvSilentDebugHeader,\n} from \"./debug-utils\";\nimport {\n  validateIncludeExclude,\n  applyMissingDependenciesDefaults,\n} from \"./normalize-options\";\n\nimport type {\n  ProviderApi,\n  MethodString,\n  Targets,\n  MetaDescriptor,\n  PolyfillProvider,\n  PluginOptions,\n  ProviderOptions,\n} from \"./types\";\n\nimport * as v from \"./visitors\";\nimport * as deps from \"./node/dependencies\";\n\nimport createMetaResolver from \"./meta-resolver\";\n\nexport type { PolyfillProvider, MetaDescriptor, Utils, Targets } from \"./types\";\n\nfunction resolveOptions<Options>(\n  options: PluginOptions,\n  babelApi,\n): {\n  method: MethodString;\n  methodName: \"usageGlobal\" | \"entryGlobal\" | \"usagePure\";\n  targets: Targets;\n  debug: boolean | typeof presetEnvSilentDebugHeader;\n  shouldInjectPolyfill:\n    | ((name: string, shouldInject: boolean) => boolean)\n    | undefined;\n  providerOptions: ProviderOptions<Options>;\n  absoluteImports: string | boolean;\n} {\n  const {\n    method,\n    targets: targetsOption,\n    ignoreBrowserslistConfig,\n    configPath,\n    debug,\n    shouldInjectPolyfill,\n    absoluteImports,\n    ...providerOptions\n  } = options;\n\n  if (isEmpty(options)) {\n    throw new Error(\n      `\\\nThis plugin requires options, for example:\n    {\n      \"plugins\": [\n        [\"<plugin name>\", { method: \"usage-pure\" }]\n      ]\n    }\n\nSee more options at https://github.com/babel/babel-polyfills/blob/main/docs/usage.md`,\n    );\n  }\n\n  let methodName;\n  if (method === \"usage-global\") methodName = \"usageGlobal\";\n  else if (method === \"entry-global\") methodName = \"entryGlobal\";\n  else if (method === \"usage-pure\") methodName = \"usagePure\";\n  else if (typeof method !== \"string\") {\n    throw new Error(\".method must be a string\");\n  } else {\n    throw new Error(\n      `.method must be one of \"entry-global\", \"usage-global\"` +\n        ` or \"usage-pure\" (received ${JSON.stringify(method)})`,\n    );\n  }\n\n  if (typeof shouldInjectPolyfill === \"function\") {\n    if (options.include || options.exclude) {\n      throw new Error(\n        `.include and .exclude are not supported when using the` +\n          ` .shouldInjectPolyfill function.`,\n      );\n    }\n  } else if (shouldInjectPolyfill != null) {\n    throw new Error(\n      `.shouldInjectPolyfill must be a function, or undefined` +\n        ` (received ${JSON.stringify(shouldInjectPolyfill)})`,\n    );\n  }\n\n  if (\n    absoluteImports != null &&\n    typeof absoluteImports !== \"boolean\" &&\n    typeof absoluteImports !== \"string\"\n  ) {\n    throw new Error(\n      `.absoluteImports must be a boolean, a string, or undefined` +\n        ` (received ${JSON.stringify(absoluteImports)})`,\n    );\n  }\n\n  let targets;\n\n  if (\n    // If any browserslist-related option is specified, fallback to the old\n    // behavior of not using the targets specified in the top-level options.\n    targetsOption ||\n    configPath ||\n    ignoreBrowserslistConfig\n  ) {\n    const targetsObj =\n      typeof targetsOption === \"string\" || Array.isArray(targetsOption)\n        ? { browsers: targetsOption }\n        : targetsOption;\n\n    targets = getTargets(targetsObj, {\n      ignoreBrowserslistConfig,\n      configPath,\n    });\n  } else {\n    targets = babelApi.targets();\n  }\n\n  return {\n    method,\n    methodName,\n    targets,\n    absoluteImports: absoluteImports ?? false,\n    shouldInjectPolyfill,\n    debug: !!debug,\n    providerOptions: providerOptions as any as ProviderOptions<Options>,\n  };\n}\n\nfunction instantiateProvider<Options>(\n  factory: PolyfillProvider<Options>,\n  options: PluginOptions,\n  missingDependencies,\n  dirname,\n  debugLog,\n  babelApi,\n) {\n  const {\n    method,\n    methodName,\n    targets,\n    debug,\n    shouldInjectPolyfill,\n    providerOptions,\n    absoluteImports,\n  } = resolveOptions<Options>(options, babelApi);\n\n  // eslint-disable-next-line prefer-const\n  let include, exclude;\n  let polyfillsSupport;\n  let polyfillsNames: Map<string, number> | undefined;\n  let filterPolyfills;\n\n  const getUtils = createUtilsGetter(\n    new ImportsCachedInjector(\n      moduleName => deps.resolve(dirname, moduleName, absoluteImports),\n      (name: string) => polyfillsNames?.get(name) ?? Infinity,\n    ),\n  );\n\n  const depsCache = new Map();\n\n  const api: ProviderApi = {\n    babel: babelApi,\n    getUtils,\n    method: options.method,\n    targets,\n    createMetaResolver,\n    shouldInjectPolyfill(name) {\n      if (polyfillsNames === undefined) {\n        throw new Error(\n          `Internal error in the ${factory.name} provider: ` +\n            `shouldInjectPolyfill() can't be called during initialization.`,\n        );\n      }\n      if (!polyfillsNames.has(name)) {\n        console.warn(\n          `Internal error in the ${providerName} provider: ` +\n            `unknown polyfill \"${name}\".`,\n        );\n      }\n\n      if (filterPolyfills && !filterPolyfills(name)) return false;\n\n      let shouldInject = isRequired(name, targets, {\n        compatData: polyfillsSupport,\n        includes: include,\n        excludes: exclude,\n      });\n\n      if (shouldInjectPolyfill) {\n        shouldInject = shouldInjectPolyfill(name, shouldInject);\n        if (typeof shouldInject !== \"boolean\") {\n          throw new Error(`.shouldInjectPolyfill must return a boolean.`);\n        }\n      }\n\n      return shouldInject;\n    },\n    debug(name) {\n      debugLog().found = true;\n\n      if (!debug || !name) return;\n\n      if (debugLog().polyfills.has(providerName)) return;\n      debugLog().polyfills.add(name);\n      debugLog().polyfillsSupport ??= polyfillsSupport;\n    },\n    assertDependency(name, version = \"*\") {\n      if (missingDependencies === false) return;\n      if (absoluteImports) {\n        // If absoluteImports is not false, we will try resolving\n        // the dependency and throw if it's not possible. We can\n        // skip the check here.\n        return;\n      }\n\n      const dep = version === \"*\" ? name : `${name}@^${version}`;\n\n      const found = missingDependencies.all\n        ? false\n        : mapGetOr(depsCache, `${name} :: ${dirname}`, () =>\n            deps.has(dirname, name),\n          );\n\n      if (!found) {\n        debugLog().missingDeps.add(dep);\n      }\n    },\n  };\n\n  const provider = factory(api, providerOptions, dirname);\n  const providerName = provider.name || factory.name;\n\n  if (typeof provider[methodName] !== \"function\") {\n    throw new Error(\n      `The \"${providerName}\" provider doesn't support the \"${method}\" polyfilling method.`,\n    );\n  }\n\n  if (Array.isArray(provider.polyfills)) {\n    polyfillsNames = new Map(\n      provider.polyfills.map((name, index) => [name, index]),\n    );\n    filterPolyfills = provider.filterPolyfills;\n  } else if (provider.polyfills) {\n    polyfillsNames = new Map(\n      Object.keys(provider.polyfills).map((name, index) => [name, index]),\n    );\n    polyfillsSupport = provider.polyfills;\n    filterPolyfills = provider.filterPolyfills;\n  } else {\n    polyfillsNames = new Map();\n  }\n\n  ({ include, exclude } = validateIncludeExclude(\n    providerName,\n    polyfillsNames,\n    providerOptions.include || [],\n    providerOptions.exclude || [],\n  ));\n\n  let callProvider: (payload: MetaDescriptor, path: NodePath) => boolean;\n  if (methodName === \"usageGlobal\") {\n    callProvider = (payload, path) => {\n      const utils = getUtils(path);\n      return (\n        (provider[methodName](payload, utils, path) satisfies boolean) ?? false\n      );\n    };\n  } else {\n    callProvider = (payload, path) => {\n      const utils = getUtils(path);\n      provider[methodName](payload, utils, path) satisfies void;\n      return false;\n    };\n  }\n\n  return {\n    debug,\n    method,\n    targets,\n    provider,\n    providerName,\n    callProvider,\n  };\n}\n\nexport default function definePolyfillProvider<Options>(\n  factory: PolyfillProvider<Options>,\n) {\n  return declare((babelApi, options: PluginOptions, dirname: string) => {\n    babelApi.assertVersion(\"^7.0.0 || ^8.0.0-alpha.0\");\n    const { traverse } = babelApi;\n\n    let debugLog;\n\n    const missingDependencies = applyMissingDependenciesDefaults(\n      options,\n      babelApi,\n    );\n\n    const { debug, method, targets, provider, providerName, callProvider } =\n      instantiateProvider<Options>(\n        factory,\n        options,\n        missingDependencies,\n        dirname,\n        () => debugLog,\n        babelApi,\n      );\n\n    const createVisitor = method === \"entry-global\" ? v.entry : v.usage;\n\n    const visitor = provider.visitor\n      ? traverse.visitors.merge([createVisitor(callProvider), provider.visitor])\n      : createVisitor(callProvider);\n\n    if (debug && debug !== presetEnvSilentDebugHeader) {\n      console.log(`${providerName}: \\`DEBUG\\` option`);\n      console.log(`\\nUsing targets: ${stringifyTargetsMultiline(targets)}`);\n      console.log(`\\nUsing polyfills with \\`${method}\\` method:`);\n    }\n\n    const { runtimeName } = provider;\n\n    return {\n      name: \"inject-polyfills\",\n      visitor,\n\n      pre(file) {\n        if (runtimeName) {\n          if (\n            file.get(\"runtimeHelpersModuleName\") &&\n            file.get(\"runtimeHelpersModuleName\") !== runtimeName\n          ) {\n            console.warn(\n              `Two different polyfill providers` +\n                ` (${file.get(\"runtimeHelpersModuleProvider\")}` +\n                ` and ${providerName}) are trying to define two` +\n                ` conflicting @babel/runtime alternatives:` +\n                ` ${file.get(\"runtimeHelpersModuleName\")} and ${runtimeName}.` +\n                ` The second one will be ignored.`,\n            );\n          } else {\n            file.set(\"runtimeHelpersModuleName\", runtimeName);\n            file.set(\"runtimeHelpersModuleProvider\", providerName);\n          }\n        }\n\n        debugLog = {\n          polyfills: new Set(),\n          polyfillsSupport: undefined,\n          found: false,\n          providers: new Set(),\n          missingDeps: new Set(),\n        };\n\n        provider.pre?.apply(this, arguments);\n      },\n      post() {\n        provider.post?.apply(this, arguments);\n\n        if (missingDependencies !== false) {\n          if (missingDependencies.log === \"per-file\") {\n            deps.logMissing(debugLog.missingDeps);\n          } else {\n            deps.laterLogMissing(debugLog.missingDeps);\n          }\n        }\n\n        if (!debug) return;\n\n        if (this.filename) console.log(`\\n[${this.filename}]`);\n\n        if (debugLog.polyfills.size === 0) {\n          console.log(\n            method === \"entry-global\"\n              ? debugLog.found\n                ? `Based on your targets, the ${providerName} polyfill did not add any polyfill.`\n                : `The entry point for the ${providerName} polyfill has not been found.`\n              : `Based on your code and targets, the ${providerName} polyfill did not add any polyfill.`,\n          );\n\n          return;\n        }\n\n        if (method === \"entry-global\") {\n          console.log(\n            `The ${providerName} polyfill entry has been replaced with ` +\n              `the following polyfills:`,\n          );\n        } else {\n          console.log(\n            `The ${providerName} polyfill added the following polyfills:`,\n          );\n        }\n\n        for (const name of debugLog.polyfills) {\n          if (debugLog.polyfillsSupport?.[name]) {\n            const filteredTargets = getInclusionReasons(\n              name,\n              targets,\n              debugLog.polyfillsSupport,\n            );\n\n            const formattedTargets = JSON.stringify(filteredTargets)\n              .replace(/,/g, \", \")\n              .replace(/^\\{\"/, '{ \"')\n              .replace(/\"\\}$/, '\" }');\n\n            console.log(`  ${name} ${formattedTargets}`);\n          } else {\n            console.log(`  ${name}`);\n          }\n        }\n      },\n    };\n  });\n}\n\nfunction mapGetOr(map, key, getDefault) {\n  let val = map.get(key);\n  if (val === undefined) {\n    val = getDefault();\n    map.set(key, val);\n  }\n  return val;\n}\n\nfunction isEmpty(obj) {\n  return Object.keys(obj).length === 0;\n}\n"],"mappings":"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","ignoreList":[]}
{"version":3,"file":"index.js","names":["_browserslist","require","_helperValidatorOption","_nativeModules","_lruCache","_utils","_targets","_options","_pretty","_debug","_filterItems","ESM_SUPPORT","v","OptionValidator","validateTargetNames","targets","validTargets","Object","keys","TargetNames","_i","_Object$keys","length","target","Error","formatMessage","concat","findSuggestion","isBrowsersQueryValid","browsers","Array","isArray","every","b","validateBrowsers","invariant","undefined","String","getLowestVersions","reduce","all","browser","_browser$split","split","_browser$split2","_slicedToArray","browserName","browserVersion","browserNameMap","splitVersion","toLowerCase","isSplitUnreleased","isUnreleasedVersion","semverify","version","isUnreleased","getLowestUnreleased","parsedBrowserVersion","semverMin","e","outputDecimalWarning","decimalTargets","console","warn","forEach","_ref","value","semverifyTarget","error","nodeTargetParser","parsed","process","versions","node","defaultTargetParser","generateTargets","inputTargets","input","assign","esmodules","resolveTargets","queries","env","resolved","mobileToDesktop","targetsCache","max","resolveTargetsCached","cacheKey","join","cached","get","set","getTargets","arguments","options","_browsers","_browsers2","_options$configPath","configPath","shouldParseBrowsers","hasTargets","shouldSearchForConfig","ignoreBrowserslistConfig","loadConfig","config","configFile","path","browserslistEnv","map","queryBrowsers","_i2","_Object$keys2","esmSupportVersion","getHighestUnreleased","result","decimalWarnings","_iterator","_createForOfIteratorHelper","sort","_step","s","n","done","push","_ref2","_ref3","parsedTarget","parsedValue","err","f"],"sources":["../src/index.ts"],"sourcesContent":["import browserslist from \"browserslist\";\nimport { findSuggestion } from \"@babel/helper-validator-option\";\nimport browserModulesData from \"@babel/compat-data/native-modules\";\nimport LruCache from \"lru-cache\";\n\nimport {\n  semverify,\n  semverMin,\n  isUnreleasedVersion,\n  getLowestUnreleased,\n  getHighestUnreleased,\n} from \"./utils.ts\";\nimport { OptionValidator } from \"@babel/helper-validator-option\";\nimport { browserNameMap } from \"./targets.ts\";\nimport { TargetNames } from \"./options.ts\";\nimport type {\n  Target,\n  Targets,\n  InputTargets,\n  Browsers,\n  BrowserslistBrowserName,\n  TargetsTuple,\n} from \"./types.ts\";\n\nexport type { Target, Targets, InputTargets };\n\nexport { prettifyTargets } from \"./pretty.ts\";\nexport { getInclusionReasons } from \"./debug.ts\";\nexport { default as filterItems, isRequired } from \"./filter-items.ts\";\nexport { unreleasedLabels } from \"./targets.ts\";\nexport { TargetNames };\n\nconst ESM_SUPPORT = browserModulesData[\"es6.module\"];\n\nconst v = new OptionValidator(PACKAGE_JSON.name);\n\nfunction validateTargetNames(targets: Targets): TargetsTuple {\n  const validTargets = Object.keys(TargetNames);\n  for (const target of Object.keys(targets)) {\n    if (!(target in TargetNames)) {\n      throw new Error(\n        v.formatMessage(`'${target}' is not a valid target\n- Did you mean '${findSuggestion(target, validTargets)}'?`),\n      );\n    }\n  }\n\n  return targets;\n}\n\nexport function isBrowsersQueryValid(browsers: unknown): boolean {\n  return (\n    typeof browsers === \"string\" ||\n    (Array.isArray(browsers) && browsers.every(b => typeof b === \"string\"))\n  );\n}\n\nfunction validateBrowsers(browsers: Browsers | undefined) {\n  v.invariant(\n    browsers === undefined || isBrowsersQueryValid(browsers),\n    `'${String(browsers)}' is not a valid browserslist query`,\n  );\n\n  return browsers;\n}\n\nfunction getLowestVersions(browsers: Array<string>): Targets {\n  return browsers.reduce(\n    (all, browser) => {\n      const [browserName, browserVersion] = browser.split(\" \") as [\n        BrowserslistBrowserName,\n        string,\n      ];\n      const target = browserNameMap[browserName];\n\n      if (!target) {\n        return all;\n      }\n\n      try {\n        // Browser version can return as \"10.0-10.2\"\n        const splitVersion = browserVersion.split(\"-\")[0].toLowerCase();\n        const isSplitUnreleased = isUnreleasedVersion(splitVersion, target);\n\n        if (!all[target]) {\n          all[target] = isSplitUnreleased\n            ? splitVersion\n            : semverify(splitVersion);\n          return all;\n        }\n\n        const version = all[target];\n        const isUnreleased = isUnreleasedVersion(version, target);\n\n        if (isUnreleased && isSplitUnreleased) {\n          all[target] = getLowestUnreleased(version, splitVersion, target);\n        } else if (isUnreleased) {\n          all[target] = semverify(splitVersion);\n        } else if (!isUnreleased && !isSplitUnreleased) {\n          const parsedBrowserVersion = semverify(splitVersion);\n\n          all[target] = semverMin(version, parsedBrowserVersion);\n        }\n      } catch (e) {}\n\n      return all;\n    },\n    {} as Record<Target, string>,\n  );\n}\n\nfunction outputDecimalWarning(\n  decimalTargets: Array<{ target: string; value: number }>,\n) {\n  if (!decimalTargets.length) {\n    return;\n  }\n\n  console.warn(\"Warning, the following targets are using a decimal version:\\n\");\n  decimalTargets.forEach(({ target, value }) =>\n    console.warn(`  ${target}: ${value}`),\n  );\n  console.warn(`\nWe recommend using a string for minor/patch versions to avoid numbers like 6.10\ngetting parsed as 6.1, which can lead to unexpected behavior.\n`);\n}\n\nfunction semverifyTarget(target: Target, value: string) {\n  try {\n    return semverify(value);\n  } catch (error) {\n    throw new Error(\n      v.formatMessage(\n        `'${value}' is not a valid value for 'targets.${target}'.`,\n      ),\n    );\n  }\n}\n\n// Parse `node: true` and `node: \"current\"` to version\nfunction nodeTargetParser(value: true | string) {\n  const parsed =\n    value === true || value === \"current\"\n      ? process.versions.node\n      : semverifyTarget(\"node\", value);\n  return [\"node\", parsed] as const;\n}\n\nfunction defaultTargetParser(\n  target: Exclude<Target, \"node\">,\n  value: string,\n): readonly [Exclude<Target, \"node\">, string] {\n  const version = isUnreleasedVersion(value, target)\n    ? value.toLowerCase()\n    : semverifyTarget(target, value);\n  return [target, version] as const;\n}\n\nfunction generateTargets(inputTargets: InputTargets): Targets {\n  const input = { ...inputTargets };\n  delete input.esmodules;\n  delete input.browsers;\n  return input;\n}\n\nfunction resolveTargets(queries: Browsers, env?: string): Targets {\n  const resolved = browserslist(queries, {\n    mobileToDesktop: true,\n    env,\n  });\n  return getLowestVersions(resolved);\n}\n\nconst targetsCache = new LruCache({ max: 64 });\n\nfunction resolveTargetsCached(queries: Browsers, env?: string): Targets {\n  const cacheKey = typeof queries === \"string\" ? queries : queries.join() + env;\n  let cached = targetsCache.get(cacheKey) as Targets | undefined;\n  if (!cached) {\n    cached = resolveTargets(queries, env);\n    targetsCache.set(cacheKey, cached);\n  }\n  return { ...cached };\n}\n\ntype GetTargetsOption = {\n  // This is not the path of the config file, but the path where start searching it from\n  configPath?: string;\n  // The path of the config file\n  configFile?: string;\n  // The env to pass to browserslist\n  browserslistEnv?: string;\n  // true to disable config loading\n  ignoreBrowserslistConfig?: boolean;\n};\n\nexport default function getTargets(\n  inputTargets: InputTargets = {},\n  options: GetTargetsOption = {},\n): Targets {\n  let { browsers, esmodules } = inputTargets;\n  const { configPath = \".\" } = options;\n\n  validateBrowsers(browsers);\n\n  const input = generateTargets(inputTargets);\n  let targets = validateTargetNames(input);\n\n  const shouldParseBrowsers = !!browsers;\n  const hasTargets = shouldParseBrowsers || Object.keys(targets).length > 0;\n  const shouldSearchForConfig =\n    !options.ignoreBrowserslistConfig && !hasTargets;\n\n  if (!browsers && shouldSearchForConfig) {\n    browsers = browserslist.loadConfig({\n      config: options.configFile,\n      path: configPath,\n      env: options.browserslistEnv,\n    });\n    if (browsers == null) {\n      if (process.env.BABEL_8_BREAKING) {\n        // In Babel 8, if no targets are passed, we use browserslist's defaults.\n        browsers = [\"defaults\"];\n      } else {\n        // If no targets are passed, we need to overwrite browserslist's defaults\n        // so that we enable all transforms (acting like the now deprecated\n        // preset-latest).\n        browsers = [];\n      }\n    }\n  }\n\n  // `esmodules` as a target indicates the specific set of browsers supporting ES Modules.\n  // These values OVERRIDE the `browsers` field.\n  if (esmodules && (esmodules !== \"intersect\" || !browsers?.length)) {\n    browsers = Object.keys(ESM_SUPPORT)\n      .map(\n        (browser: keyof typeof ESM_SUPPORT) =>\n          `${browser} >= ${ESM_SUPPORT[browser]}`,\n      )\n      .join(\", \");\n    esmodules = false;\n  }\n\n  // If current value of `browsers` is undefined (`ignoreBrowserslistConfig` should be `false`)\n  // or an empty array (without any user config, use default config),\n  // we don't need to call `resolveTargets` to execute the related methods of `browserslist` library.\n  if (browsers?.length) {\n    const queryBrowsers = resolveTargetsCached(\n      browsers,\n      options.browserslistEnv,\n    );\n\n    if (esmodules === \"intersect\") {\n      for (const browser of Object.keys(queryBrowsers) as Target[]) {\n        if (browser !== \"deno\" && browser !== \"ie\") {\n          const esmSupportVersion =\n            ESM_SUPPORT[browser === \"opera_mobile\" ? \"op_mob\" : browser];\n\n          if (esmSupportVersion) {\n            const version = queryBrowsers[browser];\n            queryBrowsers[browser] = getHighestUnreleased(\n              version,\n              semverify(esmSupportVersion),\n              browser,\n            );\n          } else {\n            delete queryBrowsers[browser];\n          }\n        } else {\n          delete queryBrowsers[browser];\n        }\n      }\n    }\n\n    targets = Object.assign(queryBrowsers, targets);\n  }\n\n  // Parse remaining targets\n  const result: Targets = {};\n  const decimalWarnings = [];\n  for (const target of Object.keys(targets).sort() as Target[]) {\n    const value = targets[target];\n\n    // Warn when specifying minor/patch as a decimal\n    if (typeof value === \"number\" && value % 1 !== 0) {\n      decimalWarnings.push({ target, value });\n    }\n\n    const [parsedTarget, parsedValue] =\n      target === \"node\"\n        ? nodeTargetParser(value)\n        : defaultTargetParser(target, value as string);\n\n    if (parsedValue) {\n      // Merge (lowest wins)\n      result[parsedTarget] = parsedValue;\n    }\n  }\n\n  outputDecimalWarning(decimalWarnings);\n\n  return result;\n}\n"],"mappings":"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","ignoreList":[]}
{"version":3,"file":"filter-items.js","names":["_semver","require","_plugins","_utils","targetsSupported","target","support","targetEnvironments","Object","keys","length","unsupportedEnvironments","filter","environment","lowestImplementedVersion","getLowestImplementedVersion","lowestTargetedVersion","isUnreleasedVersion","valid","toString","Error","concat","gt","semverify","isRequired","name","targets","_ref","arguments","undefined","_ref$compatData","compatData","includes","excludes","has","filterItems","list","defaultIncludes","defaultExcludes","pluginSyntaxMap","result","Set","options","item","add","shippedProposalsSyntax","get","forEach"],"sources":["../src/filter-items.ts"],"sourcesContent":["import semver from \"semver\";\n\nimport pluginsCompatData from \"@babel/compat-data/plugins\";\n\nimport type { Targets } from \"./types.ts\";\nimport {\n  getLowestImplementedVersion,\n  isUnreleasedVersion,\n  semverify,\n} from \"./utils.ts\";\n\nexport function targetsSupported(target: Targets, support: Targets) {\n  const targetEnvironments = Object.keys(target) as Array<keyof Targets>;\n\n  if (targetEnvironments.length === 0) {\n    return false;\n  }\n\n  const unsupportedEnvironments = targetEnvironments.filter(environment => {\n    const lowestImplementedVersion = getLowestImplementedVersion(\n      support,\n      environment,\n    );\n\n    // Feature is not implemented in that environment\n    if (!lowestImplementedVersion) {\n      return true;\n    }\n\n    const lowestTargetedVersion = target[environment];\n\n    // If targets has unreleased value as a lowest version, then don't require a plugin.\n    if (isUnreleasedVersion(lowestTargetedVersion, environment)) {\n      return false;\n    }\n\n    // Include plugin if it is supported in the unreleased environment, which wasn't specified in targets\n    if (isUnreleasedVersion(lowestImplementedVersion, environment)) {\n      return true;\n    }\n\n    if (!semver.valid(lowestTargetedVersion.toString())) {\n      throw new Error(\n        `Invalid version passed for target \"${environment}\": \"${lowestTargetedVersion}\". ` +\n          \"Versions must be in semver format (major.minor.patch)\",\n      );\n    }\n\n    return semver.gt(\n      semverify(lowestImplementedVersion),\n      lowestTargetedVersion.toString(),\n    );\n  });\n\n  return unsupportedEnvironments.length === 0;\n}\n\nexport function isRequired(\n  name: string,\n  targets: Targets,\n  {\n    compatData = pluginsCompatData,\n    includes,\n    excludes,\n  }: {\n    compatData?: { [feature: string]: Targets };\n    includes?: Set<string>;\n    excludes?: Set<string>;\n  } = {},\n) {\n  if (excludes?.has(name)) return false;\n  if (includes?.has(name)) return true;\n  return !targetsSupported(targets, compatData[name]);\n}\n\nexport default function filterItems(\n  list: { [feature: string]: Targets },\n  includes: Set<string>,\n  excludes: Set<string>,\n  targets: Targets,\n  defaultIncludes: Array<string> | null,\n  defaultExcludes?: Array<string> | null,\n  pluginSyntaxMap?: Map<string, string | null>,\n) {\n  const result = new Set<string>();\n  const options = { compatData: list, includes, excludes };\n\n  for (const item in list) {\n    if (isRequired(item, targets, options)) {\n      result.add(item);\n    } else if (pluginSyntaxMap) {\n      const shippedProposalsSyntax = pluginSyntaxMap.get(item);\n\n      if (shippedProposalsSyntax) {\n        result.add(shippedProposalsSyntax);\n      }\n    }\n  }\n\n  defaultIncludes?.forEach(item => !excludes.has(item) && result.add(item));\n  defaultExcludes?.forEach(item => !includes.has(item) && result.delete(item));\n\n  return result;\n}\n"],"mappings":"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","ignoreList":[]}
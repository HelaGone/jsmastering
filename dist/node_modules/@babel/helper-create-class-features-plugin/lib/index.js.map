{"version":3,"file":"index.js","names":["_core","require","_helperFunctionName","_helperSplitExportDeclaration","_decorators","_semver","_fields","_decorators2","_misc","_features","_typescript","versionKey","createClassFeaturePlugin","_ref2","name","feature","loose","manipulateOptions","api","inherits","decoratorVersion","_api$assumption","FEATURES","decorators","_api","assumption","setPublicClassFields","privateFieldsAsSymbols","privateFieldsAsProperties","noUninitializedPrivateFieldAccess","constantSuper","noDocumentAll","Error","privateFieldsAsSymbolsOrProperties","explicit","undefined","push","length","console","warn","concat","join","pre","file","enableFeature","get","set","lt","visitor","Class","path","_ref3","_ref","shouldTransform","pathIsClassDeclaration","isClassDeclaration","assertFieldTransformed","isLoose","constructor","isDecorated","hasDecorators","node","props","elements","computedPaths","privateNames","Set","body","_iterator","_createForOfIteratorHelper","_step","s","n","done","value","isClassProperty","isClassMethod","computed","isPrivate","key","id","getName","setName","isClassPrivateMethod","kind","has","buildCodeFrameError","add","isProperty","isStaticBlock","err","e","f","innerBinding","ref","scope","generateUidIdentifier","classRefForDefine","types","cloneNode","privateNamesMap","buildPrivateNamesMap","privateNamesNodes","buildPrivateNamesNodes","transformPrivateNamesUsage","keysNodes","staticNodes","instanceNodes","lastInstanceNodeReturnsThis","pureStaticNodes","classBindingNode","wrapClass","_ref4","buildDecoratedClass","extractComputedKeys","_ref5","buildFieldsInitNodes","superClass","injectInitialization","referenceVisitor","state","_iterator2","_step2","prop","traverse","wrappedPath","insertBefore","_toConsumableArray","insertAfter","find","parent","isStatement","isDeclaration","ExportDefaultDeclaration","_ref6","decl","type"],"sources":["../src/index.ts"],"sourcesContent":["import { types as t } from \"@babel/core\";\nimport type { PluginAPI, PluginObject } from \"@babel/core\";\nimport type { NodePath } from \"@babel/traverse\";\nimport nameFunction from \"@babel/helper-function-name\";\nimport splitExportDeclaration from \"@babel/helper-split-export-declaration\";\nimport createDecoratorTransform from \"./decorators.ts\";\nimport type { DecoratorVersionKind } from \"./decorators.ts\";\n\nimport semver from \"semver\";\n\nimport {\n  buildPrivateNamesNodes,\n  buildPrivateNamesMap,\n  transformPrivateNamesUsage,\n  buildFieldsInitNodes,\n  buildCheckInRHS,\n} from \"./fields.ts\";\nimport type { PropPath } from \"./fields.ts\";\nimport { buildDecoratedClass, hasDecorators } from \"./decorators-2018-09.ts\";\nimport { injectInitialization, extractComputedKeys } from \"./misc.ts\";\nimport {\n  enableFeature,\n  FEATURES,\n  isLoose,\n  shouldTransform,\n} from \"./features.ts\";\nimport { assertFieldTransformed } from \"./typescript.ts\";\n\nexport { FEATURES, enableFeature, injectInitialization, buildCheckInRHS };\n\nconst versionKey = \"@babel/plugin-class-features/version\";\n\ninterface Options {\n  name: string;\n  feature: number;\n  loose?: boolean;\n  inherits?: PluginObject[\"inherits\"];\n  manipulateOptions?: PluginObject[\"manipulateOptions\"];\n  api?: PluginAPI;\n  decoratorVersion?: DecoratorVersionKind | \"2018-09\";\n}\n\nexport function createClassFeaturePlugin({\n  name,\n  feature,\n  loose,\n  manipulateOptions,\n  api,\n  inherits,\n  decoratorVersion,\n}: Options): PluginObject {\n  if (feature & FEATURES.decorators) {\n    if (process.env.BABEL_8_BREAKING) {\n      return createDecoratorTransform(api, { loose }, \"2023-11\", inherits);\n    } else {\n      if (\n        decoratorVersion === \"2023-11\" ||\n        decoratorVersion === \"2023-05\" ||\n        decoratorVersion === \"2023-01\" ||\n        decoratorVersion === \"2022-03\" ||\n        decoratorVersion === \"2021-12\"\n      ) {\n        return createDecoratorTransform(\n          api,\n          { loose },\n          decoratorVersion,\n          inherits,\n        );\n      }\n    }\n  }\n  if (!process.env.BABEL_8_BREAKING) {\n    api ??= { assumption: () => void 0 as any } as any;\n  }\n  const setPublicClassFields = api.assumption(\"setPublicClassFields\");\n  const privateFieldsAsSymbols = api.assumption(\"privateFieldsAsSymbols\");\n  const privateFieldsAsProperties = api.assumption(\"privateFieldsAsProperties\");\n  const noUninitializedPrivateFieldAccess =\n    api.assumption(\"noUninitializedPrivateFieldAccess\") ?? false;\n  const constantSuper = api.assumption(\"constantSuper\");\n  const noDocumentAll = api.assumption(\"noDocumentAll\");\n\n  if (privateFieldsAsProperties && privateFieldsAsSymbols) {\n    throw new Error(\n      `Cannot enable both the \"privateFieldsAsProperties\" and ` +\n        `\"privateFieldsAsSymbols\" assumptions as the same time.`,\n    );\n  }\n  const privateFieldsAsSymbolsOrProperties =\n    privateFieldsAsProperties || privateFieldsAsSymbols;\n\n  if (loose === true) {\n    type AssumptionName = Parameters<PluginAPI[\"assumption\"]>[0];\n    const explicit: `\"${AssumptionName}\"`[] = [];\n\n    if (setPublicClassFields !== undefined) {\n      explicit.push(`\"setPublicClassFields\"`);\n    }\n    if (privateFieldsAsProperties !== undefined) {\n      explicit.push(`\"privateFieldsAsProperties\"`);\n    }\n    if (privateFieldsAsSymbols !== undefined) {\n      explicit.push(`\"privateFieldsAsSymbols\"`);\n    }\n    if (explicit.length !== 0) {\n      console.warn(\n        `[${name}]: You are using the \"loose: true\" option and you are` +\n          ` explicitly setting a value for the ${explicit.join(\" and \")}` +\n          ` assumption${explicit.length > 1 ? \"s\" : \"\"}. The \"loose\" option` +\n          ` can cause incompatibilities with the other class features` +\n          ` plugins, so it's recommended that you replace it with the` +\n          ` following top-level option:\\n` +\n          `\\t\"assumptions\": {\\n` +\n          `\\t\\t\"setPublicClassFields\": true,\\n` +\n          `\\t\\t\"privateFieldsAsSymbols\": true\\n` +\n          `\\t}`,\n      );\n    }\n  }\n\n  return {\n    name,\n    manipulateOptions,\n    inherits,\n\n    pre(file) {\n      enableFeature(file, feature, loose);\n\n      if (!process.env.BABEL_8_BREAKING) {\n        // Until 7.21.4, we used to encode the version as a number.\n        // If file.get(versionKey) is a number, it has thus been\n        // set by an older version of this plugin.\n        if (typeof file.get(versionKey) === \"number\") {\n          file.set(versionKey, PACKAGE_JSON.version);\n          return;\n        }\n      }\n      if (\n        !file.get(versionKey) ||\n        semver.lt(file.get(versionKey), PACKAGE_JSON.version)\n      ) {\n        file.set(versionKey, PACKAGE_JSON.version);\n      }\n    },\n\n    visitor: {\n      Class(path, { file }) {\n        if (file.get(versionKey) !== PACKAGE_JSON.version) return;\n\n        if (!shouldTransform(path, file)) return;\n\n        const pathIsClassDeclaration = path.isClassDeclaration();\n\n        if (pathIsClassDeclaration) assertFieldTransformed(path);\n\n        const loose = isLoose(file, feature);\n\n        let constructor: NodePath<t.ClassMethod>;\n        const isDecorated = hasDecorators(path.node);\n        const props: PropPath[] = [];\n        const elements = [];\n        const computedPaths: NodePath<t.ClassProperty | t.ClassMethod>[] = [];\n        const privateNames = new Set<string>();\n        const body = path.get(\"body\");\n\n        for (const path of body.get(\"body\")) {\n          if (\n            // check path.node.computed is enough, but ts will complain\n            (path.isClassProperty() || path.isClassMethod()) &&\n            path.node.computed\n          ) {\n            computedPaths.push(path);\n          }\n\n          if (path.isPrivate()) {\n            const { name } = path.node.key.id;\n            const getName = `get ${name}`;\n            const setName = `set ${name}`;\n\n            if (path.isClassPrivateMethod()) {\n              if (path.node.kind === \"get\") {\n                if (\n                  privateNames.has(getName) ||\n                  (privateNames.has(name) && !privateNames.has(setName))\n                ) {\n                  throw path.buildCodeFrameError(\"Duplicate private field\");\n                }\n                privateNames.add(getName).add(name);\n              } else if (path.node.kind === \"set\") {\n                if (\n                  privateNames.has(setName) ||\n                  (privateNames.has(name) && !privateNames.has(getName))\n                ) {\n                  throw path.buildCodeFrameError(\"Duplicate private field\");\n                }\n                privateNames.add(setName).add(name);\n              }\n            } else {\n              if (\n                (privateNames.has(name) &&\n                  !privateNames.has(getName) &&\n                  !privateNames.has(setName)) ||\n                (privateNames.has(name) &&\n                  (privateNames.has(getName) || privateNames.has(setName)))\n              ) {\n                throw path.buildCodeFrameError(\"Duplicate private field\");\n              }\n\n              privateNames.add(name);\n            }\n          }\n\n          if (path.isClassMethod({ kind: \"constructor\" })) {\n            constructor = path;\n          } else {\n            elements.push(path);\n            if (\n              path.isProperty() ||\n              path.isPrivate() ||\n              path.isStaticBlock?.()\n            ) {\n              props.push(path as PropPath);\n            }\n          }\n        }\n\n        if (process.env.BABEL_8_BREAKING) {\n          if (!props.length) return;\n        } else {\n          if (!props.length && !isDecorated) return;\n        }\n\n        const innerBinding = path.node.id;\n        let ref: t.Identifier | null;\n        if (!innerBinding || !pathIsClassDeclaration) {\n          nameFunction(path);\n          ref = path.scope.generateUidIdentifier(innerBinding?.name || \"Class\");\n        }\n        const classRefForDefine = ref ?? t.cloneNode(innerBinding);\n\n        const privateNamesMap = buildPrivateNamesMap(\n          classRefForDefine.name,\n          privateFieldsAsSymbolsOrProperties ?? loose,\n          props,\n          file,\n        );\n        const privateNamesNodes = buildPrivateNamesNodes(\n          privateNamesMap,\n          privateFieldsAsProperties ?? loose,\n          privateFieldsAsSymbols ?? false,\n          file,\n        );\n\n        transformPrivateNamesUsage(\n          classRefForDefine,\n          path,\n          privateNamesMap,\n          {\n            privateFieldsAsProperties:\n              privateFieldsAsSymbolsOrProperties ?? loose,\n            noUninitializedPrivateFieldAccess,\n            noDocumentAll,\n            innerBinding,\n          },\n          file,\n        );\n\n        let keysNodes: t.Statement[],\n          staticNodes: t.Statement[],\n          instanceNodes: t.ExpressionStatement[],\n          lastInstanceNodeReturnsThis: boolean,\n          pureStaticNodes: t.FunctionDeclaration[],\n          classBindingNode: t.Statement | null,\n          wrapClass: (path: NodePath<t.Class>) => NodePath;\n\n        if (!process.env.BABEL_8_BREAKING) {\n          if (isDecorated) {\n            staticNodes = pureStaticNodes = keysNodes = [];\n            ({ instanceNodes, wrapClass } = buildDecoratedClass(\n              classRefForDefine,\n              path,\n              elements,\n              file,\n            ));\n          } else {\n            keysNodes = extractComputedKeys(path, computedPaths, file);\n            ({\n              staticNodes,\n              pureStaticNodes,\n              instanceNodes,\n              lastInstanceNodeReturnsThis,\n              classBindingNode,\n              wrapClass,\n            } = buildFieldsInitNodes(\n              ref,\n              path.node.superClass,\n              props,\n              privateNamesMap,\n              file,\n              setPublicClassFields ?? loose,\n              privateFieldsAsSymbolsOrProperties ?? loose,\n              noUninitializedPrivateFieldAccess,\n              constantSuper ?? loose,\n              innerBinding,\n            ));\n          }\n        } else {\n          keysNodes = extractComputedKeys(path, computedPaths, file);\n          ({\n            staticNodes,\n            pureStaticNodes,\n            instanceNodes,\n            lastInstanceNodeReturnsThis,\n            classBindingNode,\n            wrapClass,\n          } = buildFieldsInitNodes(\n            ref,\n            path.node.superClass,\n            props,\n            privateNamesMap,\n            file,\n            setPublicClassFields ?? loose,\n            privateFieldsAsSymbolsOrProperties ?? loose,\n            noUninitializedPrivateFieldAccess,\n            constantSuper ?? loose,\n            innerBinding,\n          ));\n        }\n\n        if (instanceNodes.length > 0) {\n          injectInitialization(\n            path,\n            constructor,\n            instanceNodes,\n            (referenceVisitor, state) => {\n              if (!process.env.BABEL_8_BREAKING) {\n                if (isDecorated) return;\n              }\n              for (const prop of props) {\n                // @ts-expect-error: TS doesn't infer that prop.node is not a StaticBlock\n                if (t.isStaticBlock?.(prop.node) || prop.node.static) continue;\n                prop.traverse(referenceVisitor, state);\n              }\n            },\n            lastInstanceNodeReturnsThis,\n          );\n        }\n\n        // rename to make ts happy\n        const wrappedPath = wrapClass(path);\n        wrappedPath.insertBefore([...privateNamesNodes, ...keysNodes]);\n        if (staticNodes.length > 0) {\n          wrappedPath.insertAfter(staticNodes);\n        }\n        if (pureStaticNodes.length > 0) {\n          wrappedPath\n            .find(parent => parent.isStatement() || parent.isDeclaration())\n            .insertAfter(pureStaticNodes);\n        }\n        if (classBindingNode != null && pathIsClassDeclaration) {\n          wrappedPath.insertAfter(classBindingNode);\n        }\n      },\n\n      ExportDefaultDeclaration(path, { file }) {\n        if (!process.env.BABEL_8_BREAKING) {\n          if (file.get(versionKey) !== PACKAGE_JSON.version) return;\n\n          const decl = path.get(\"declaration\");\n\n          if (decl.isClassDeclaration() && hasDecorators(decl.node)) {\n            if (decl.node.id) {\n              // export default class Foo {}\n              //   -->\n              // class Foo {} export { Foo as default }\n              splitExportDeclaration(path);\n            } else {\n              // @ts-expect-error Anonymous class declarations can be\n              // transformed as if they were expressions\n              decl.node.type = \"ClassExpression\";\n            }\n          }\n        }\n      },\n    },\n  };\n}\n"],"mappings":"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","ignoreList":[]}
{"version":3,"file":"flow.js","names":["_t","require","_modules","_types2","isDeclareExportDeclaration","isStatement","AnyTypeAnnotation","word","ArrayTypeAnnotation","node","print","elementType","tokenChar","BooleanTypeAnnotation","BooleanLiteralTypeAnnotation","value","NullLiteralTypeAnnotation","DeclareClass","parent","space","_interfaceish","DeclareFunction","id","typeAnnotation","predicate","semicolon","InferredPredicate","DeclaredPredicate","DeclareInterface","InterfaceDeclaration","DeclareModule","body","DeclareModuleExports","DeclareTypeAlias","TypeAlias","DeclareOpaqueType","OpaqueType","DeclareVariable","DeclareExportDeclaration","FlowExportDeclaration","call","DeclareExportAllDeclaration","ExportAllDeclaration","EnumDeclaration","enumExplicitType","context","name","hasExplicitType","enumBody","members","token","indent","newline","_iterator","_createForOfIteratorHelper","_step","s","n","done","member","err","e","f","hasUnknownMembers","dedent","EnumBooleanBody","explicitType","EnumNumberBody","EnumStringBody","EnumSymbolBody","EnumDefaultedMember","enumInitializedMember","init","EnumBooleanMember","EnumNumberMember","EnumStringMember","declaration","declar","specifiers","length","printList","source","ExistsTypeAnnotation","FunctionTypeAnnotation","typeParameters","params","rest","type","method","returnType","FunctionTypeParam","optional","InterfaceExtends","_node$extends","_node$mixins","_node$implements","mixins","_variance","_node$variance","kind","variance","andSeparator","InterfaceTypeAnnotation","_node$extends2","IntersectionTypeAnnotation","printJoin","types","separator","MixedTypeAnnotation","EmptyTypeAnnotation","NullableTypeAnnotation","NumberTypeAnnotation","StringTypeAnnotation","ThisTypeAnnotation","TupleTypeAnnotation","TypeofTypeAnnotation","argument","right","TypeAnnotation","TypeParameterInstantiation","TypeParameter","bound","supertype","impltype","ObjectTypeAnnotation","_this","exact","props","concat","_toConsumableArray","properties","callProperties","indexers","internalSlots","addNewlines","leading","statement","iterator","inexact","ObjectTypeInternalSlot","ObjectTypeCallProperty","ObjectTypeIndexer","key","ObjectTypeProperty","proto","ObjectTypeSpreadProperty","QualifiedTypeIdentifier","qualification","SymbolTypeAnnotation","orSeparator","UnionTypeAnnotation","TypeCastExpression","expression","Variance","VoidTypeAnnotation","IndexedAccessType","objectType","indexType","OptionalIndexedAccessType"],"sources":["../../src/generators/flow.ts"],"sourcesContent":["import type Printer from \"../printer.ts\";\nimport { isDeclareExportDeclaration, isStatement } from \"@babel/types\";\nimport type * as t from \"@babel/types\";\nimport { ExportAllDeclaration } from \"./modules.ts\";\n\nexport function AnyTypeAnnotation(this: Printer) {\n  this.word(\"any\");\n}\n\nexport function ArrayTypeAnnotation(\n  this: Printer,\n  node: t.ArrayTypeAnnotation,\n) {\n  this.print(node.elementType, node, true);\n  this.token(\"[\");\n  this.token(\"]\");\n}\n\nexport function BooleanTypeAnnotation(this: Printer) {\n  this.word(\"boolean\");\n}\n\nexport function BooleanLiteralTypeAnnotation(\n  this: Printer,\n  node: t.BooleanLiteralTypeAnnotation,\n) {\n  this.word(node.value ? \"true\" : \"false\");\n}\n\nexport function NullLiteralTypeAnnotation(this: Printer) {\n  this.word(\"null\");\n}\n\nexport function DeclareClass(\n  this: Printer,\n  node: t.DeclareClass,\n  parent: t.Node,\n) {\n  if (!isDeclareExportDeclaration(parent)) {\n    this.word(\"declare\");\n    this.space();\n  }\n  this.word(\"class\");\n  this.space();\n  this._interfaceish(node);\n}\n\nexport function DeclareFunction(\n  this: Printer,\n  node: t.DeclareFunction,\n  parent: t.Node,\n) {\n  if (!isDeclareExportDeclaration(parent)) {\n    this.word(\"declare\");\n    this.space();\n  }\n  this.word(\"function\");\n  this.space();\n  this.print(node.id, node);\n  // @ts-ignore(Babel 7 vs Babel 8) TODO(Babel 8) Remove this comment, since we'll remove the Noop node\n  this.print(node.id.typeAnnotation.typeAnnotation, node);\n\n  if (node.predicate) {\n    this.space();\n    this.print(node.predicate, node);\n  }\n\n  this.semicolon();\n}\n\nexport function InferredPredicate(this: Printer) {\n  this.token(\"%\");\n  this.word(\"checks\");\n}\n\nexport function DeclaredPredicate(this: Printer, node: t.DeclaredPredicate) {\n  this.token(\"%\");\n  this.word(\"checks\");\n  this.token(\"(\");\n  this.print(node.value, node);\n  this.token(\")\");\n}\n\nexport function DeclareInterface(this: Printer, node: t.DeclareInterface) {\n  this.word(\"declare\");\n  this.space();\n  this.InterfaceDeclaration(node);\n}\n\nexport function DeclareModule(this: Printer, node: t.DeclareModule) {\n  this.word(\"declare\");\n  this.space();\n  this.word(\"module\");\n  this.space();\n  this.print(node.id, node);\n  this.space();\n  this.print(node.body, node);\n}\n\nexport function DeclareModuleExports(\n  this: Printer,\n  node: t.DeclareModuleExports,\n) {\n  this.word(\"declare\");\n  this.space();\n  this.word(\"module\");\n  this.token(\".\");\n  this.word(\"exports\");\n  this.print(node.typeAnnotation, node);\n}\n\nexport function DeclareTypeAlias(this: Printer, node: t.DeclareTypeAlias) {\n  this.word(\"declare\");\n  this.space();\n  this.TypeAlias(node);\n}\n\nexport function DeclareOpaqueType(\n  this: Printer,\n  node: t.DeclareOpaqueType,\n  parent: t.Node,\n) {\n  if (!isDeclareExportDeclaration(parent)) {\n    this.word(\"declare\");\n    this.space();\n  }\n  this.OpaqueType(node);\n}\n\nexport function DeclareVariable(\n  this: Printer,\n  node: t.DeclareVariable,\n  parent: t.Node,\n) {\n  if (!isDeclareExportDeclaration(parent)) {\n    this.word(\"declare\");\n    this.space();\n  }\n  this.word(\"var\");\n  this.space();\n  this.print(node.id, node);\n  this.print(node.id.typeAnnotation, node);\n  this.semicolon();\n}\n\nexport function DeclareExportDeclaration(\n  this: Printer,\n  node: t.DeclareExportDeclaration,\n) {\n  this.word(\"declare\");\n  this.space();\n  this.word(\"export\");\n  this.space();\n  if (node.default) {\n    this.word(\"default\");\n    this.space();\n  }\n\n  FlowExportDeclaration.call(this, node);\n}\n\nexport function DeclareExportAllDeclaration(\n  this: Printer,\n  node: t.DeclareExportAllDeclaration,\n) {\n  this.word(\"declare\");\n  this.space();\n  ExportAllDeclaration.call(this, node);\n}\n\nexport function EnumDeclaration(this: Printer, node: t.EnumDeclaration) {\n  const { id, body } = node;\n  this.word(\"enum\");\n  this.space();\n  this.print(id, node);\n  this.print(body, node);\n}\n\nfunction enumExplicitType(\n  context: Printer,\n  name: string,\n  hasExplicitType: boolean,\n) {\n  if (hasExplicitType) {\n    context.space();\n    context.word(\"of\");\n    context.space();\n    context.word(name);\n  }\n  context.space();\n}\n\nfunction enumBody(context: Printer, node: t.EnumBody) {\n  const { members } = node;\n  context.token(\"{\");\n  context.indent();\n  context.newline();\n  for (const member of members) {\n    context.print(member, node);\n    context.newline();\n  }\n  if (node.hasUnknownMembers) {\n    context.token(\"...\");\n    context.newline();\n  }\n  context.dedent();\n  context.token(\"}\");\n}\n\nexport function EnumBooleanBody(this: Printer, node: t.EnumBooleanBody) {\n  const { explicitType } = node;\n  enumExplicitType(this, \"boolean\", explicitType);\n  enumBody(this, node);\n}\n\nexport function EnumNumberBody(this: Printer, node: t.EnumNumberBody) {\n  const { explicitType } = node;\n  enumExplicitType(this, \"number\", explicitType);\n  enumBody(this, node);\n}\n\nexport function EnumStringBody(this: Printer, node: t.EnumStringBody) {\n  const { explicitType } = node;\n  enumExplicitType(this, \"string\", explicitType);\n  enumBody(this, node);\n}\n\nexport function EnumSymbolBody(this: Printer, node: t.EnumSymbolBody) {\n  enumExplicitType(this, \"symbol\", true);\n  enumBody(this, node);\n}\n\nexport function EnumDefaultedMember(\n  this: Printer,\n  node: t.EnumDefaultedMember,\n) {\n  const { id } = node;\n  this.print(id, node);\n  this.token(\",\");\n}\n\nfunction enumInitializedMember(\n  context: Printer,\n  node: t.EnumBooleanMember | t.EnumNumberMember | t.EnumStringMember,\n) {\n  const { id, init } = node;\n  context.print(id, node);\n  context.space();\n  context.token(\"=\");\n  context.space();\n  context.print(init, node);\n  context.token(\",\");\n}\n\nexport function EnumBooleanMember(this: Printer, node: t.EnumBooleanMember) {\n  enumInitializedMember(this, node);\n}\n\nexport function EnumNumberMember(this: Printer, node: t.EnumNumberMember) {\n  enumInitializedMember(this, node);\n}\n\nexport function EnumStringMember(this: Printer, node: t.EnumStringMember) {\n  enumInitializedMember(this, node);\n}\n\nfunction FlowExportDeclaration(\n  this: Printer,\n  node: t.DeclareExportDeclaration,\n) {\n  if (node.declaration) {\n    const declar = node.declaration;\n    this.print(declar, node);\n    if (!isStatement(declar)) this.semicolon();\n  } else {\n    this.token(\"{\");\n    if (node.specifiers.length) {\n      this.space();\n      this.printList(node.specifiers, node);\n      this.space();\n    }\n    this.token(\"}\");\n\n    if (node.source) {\n      this.space();\n      this.word(\"from\");\n      this.space();\n      this.print(node.source, node);\n    }\n\n    this.semicolon();\n  }\n}\n\nexport function ExistsTypeAnnotation(this: Printer) {\n  this.token(\"*\");\n}\n\nexport function FunctionTypeAnnotation(\n  this: Printer,\n  node: t.FunctionTypeAnnotation,\n  parent?: t.Node,\n) {\n  this.print(node.typeParameters, node);\n  this.token(\"(\");\n\n  if (node.this) {\n    this.word(\"this\");\n    this.token(\":\");\n    this.space();\n    this.print(node.this.typeAnnotation, node);\n    if (node.params.length || node.rest) {\n      this.token(\",\");\n      this.space();\n    }\n  }\n\n  this.printList(node.params, node);\n\n  if (node.rest) {\n    if (node.params.length) {\n      this.token(\",\");\n      this.space();\n    }\n    this.token(\"...\");\n    this.print(node.rest, node);\n  }\n\n  this.token(\")\");\n\n  // this node type is overloaded, not sure why but it makes it EXTREMELY annoying\n\n  const type = parent?.type;\n  if (\n    type != null &&\n    (type === \"ObjectTypeCallProperty\" ||\n      type === \"ObjectTypeInternalSlot\" ||\n      type === \"DeclareFunction\" ||\n      (type === \"ObjectTypeProperty\" && parent.method))\n  ) {\n    this.token(\":\");\n  } else {\n    this.space();\n    this.token(\"=>\");\n  }\n\n  this.space();\n  this.print(node.returnType, node);\n}\n\nexport function FunctionTypeParam(this: Printer, node: t.FunctionTypeParam) {\n  this.print(node.name, node);\n  if (node.optional) this.token(\"?\");\n  if (node.name) {\n    this.token(\":\");\n    this.space();\n  }\n  this.print(node.typeAnnotation, node);\n}\n\nexport function InterfaceExtends(this: Printer, node: t.InterfaceExtends) {\n  this.print(node.id, node);\n  this.print(node.typeParameters, node, true);\n}\n\nexport {\n  InterfaceExtends as ClassImplements,\n  InterfaceExtends as GenericTypeAnnotation,\n};\n\nexport function _interfaceish(\n  this: Printer,\n  node: t.InterfaceDeclaration | t.DeclareInterface | t.DeclareClass,\n) {\n  this.print(node.id, node);\n  this.print(node.typeParameters, node);\n  if (node.extends?.length) {\n    this.space();\n    this.word(\"extends\");\n    this.space();\n    this.printList(node.extends, node);\n  }\n  if (node.type === \"DeclareClass\") {\n    if (node.mixins?.length) {\n      this.space();\n      this.word(\"mixins\");\n      this.space();\n      this.printList(node.mixins, node);\n    }\n    if (node.implements?.length) {\n      this.space();\n      this.word(\"implements\");\n      this.space();\n      this.printList(node.implements, node);\n    }\n  }\n  this.space();\n  this.print(node.body, node);\n}\n\nexport function _variance(\n  this: Printer,\n  node:\n    | t.TypeParameter\n    | t.ObjectTypeIndexer\n    | t.ObjectTypeProperty\n    | t.ClassProperty\n    | t.ClassPrivateProperty\n    | t.ClassAccessorProperty,\n) {\n  const kind = node.variance?.kind;\n  if (kind != null) {\n    if (kind === \"plus\") {\n      this.token(\"+\");\n    } else if (kind === \"minus\") {\n      this.token(\"-\");\n    }\n  }\n}\n\nexport function InterfaceDeclaration(\n  this: Printer,\n  node: t.InterfaceDeclaration | t.DeclareInterface,\n) {\n  this.word(\"interface\");\n  this.space();\n  this._interfaceish(node);\n}\n\nfunction andSeparator(this: Printer) {\n  this.space();\n  this.token(\"&\");\n  this.space();\n}\n\nexport function InterfaceTypeAnnotation(\n  this: Printer,\n  node: t.InterfaceTypeAnnotation,\n) {\n  this.word(\"interface\");\n  if (node.extends?.length) {\n    this.space();\n    this.word(\"extends\");\n    this.space();\n    this.printList(node.extends, node);\n  }\n  this.space();\n  this.print(node.body, node);\n}\n\nexport function IntersectionTypeAnnotation(\n  this: Printer,\n  node: t.IntersectionTypeAnnotation,\n) {\n  this.printJoin(node.types, node, { separator: andSeparator });\n}\n\nexport function MixedTypeAnnotation(this: Printer) {\n  this.word(\"mixed\");\n}\n\nexport function EmptyTypeAnnotation(this: Printer) {\n  this.word(\"empty\");\n}\n\nexport function NullableTypeAnnotation(\n  this: Printer,\n  node: t.NullableTypeAnnotation,\n) {\n  this.token(\"?\");\n  this.print(node.typeAnnotation, node);\n}\n\nexport {\n  NumericLiteral as NumberLiteralTypeAnnotation,\n  StringLiteral as StringLiteralTypeAnnotation,\n} from \"./types.ts\";\n\nexport function NumberTypeAnnotation(this: Printer) {\n  this.word(\"number\");\n}\n\nexport function StringTypeAnnotation(this: Printer) {\n  this.word(\"string\");\n}\n\nexport function ThisTypeAnnotation(this: Printer) {\n  this.word(\"this\");\n}\n\nexport function TupleTypeAnnotation(\n  this: Printer,\n  node: t.TupleTypeAnnotation,\n) {\n  this.token(\"[\");\n  this.printList(node.types, node);\n  this.token(\"]\");\n}\n\nexport function TypeofTypeAnnotation(\n  this: Printer,\n  node: t.TypeofTypeAnnotation,\n) {\n  this.word(\"typeof\");\n  this.space();\n  this.print(node.argument, node);\n}\n\nexport function TypeAlias(\n  this: Printer,\n  node: t.TypeAlias | t.DeclareTypeAlias,\n) {\n  this.word(\"type\");\n  this.space();\n  this.print(node.id, node);\n  this.print(node.typeParameters, node);\n  this.space();\n  this.token(\"=\");\n  this.space();\n  this.print(node.right, node);\n  this.semicolon();\n}\n\nexport function TypeAnnotation(this: Printer, node: t.TypeAnnotation) {\n  this.token(\":\");\n  this.space();\n  // @ts-expect-error todo(flow->ts) can this be removed? `.optional` looks to be not existing property\n  if (node.optional) this.token(\"?\");\n  this.print(node.typeAnnotation, node);\n}\n\nexport function TypeParameterInstantiation(\n  this: Printer,\n  node: t.TypeParameterInstantiation,\n): void {\n  this.token(\"<\");\n  this.printList(node.params, node, {});\n  this.token(\">\");\n}\n\nexport { TypeParameterInstantiation as TypeParameterDeclaration };\n\nexport function TypeParameter(this: Printer, node: t.TypeParameter) {\n  this._variance(node);\n\n  this.word(node.name);\n\n  if (node.bound) {\n    this.print(node.bound, node);\n  }\n\n  if (node.default) {\n    this.space();\n    this.token(\"=\");\n    this.space();\n    this.print(node.default, node);\n  }\n}\n\nexport function OpaqueType(\n  this: Printer,\n  node: t.OpaqueType | t.DeclareOpaqueType,\n) {\n  this.word(\"opaque\");\n  this.space();\n  this.word(\"type\");\n  this.space();\n  this.print(node.id, node);\n  this.print(node.typeParameters, node);\n  if (node.supertype) {\n    this.token(\":\");\n    this.space();\n    this.print(node.supertype, node);\n  }\n\n  if (node.impltype) {\n    this.space();\n    this.token(\"=\");\n    this.space();\n    this.print(node.impltype, node);\n  }\n  this.semicolon();\n}\n\nexport function ObjectTypeAnnotation(\n  this: Printer,\n  node: t.ObjectTypeAnnotation,\n) {\n  if (node.exact) {\n    this.token(\"{|\");\n  } else {\n    this.token(\"{\");\n  }\n\n  // TODO: remove the array fallbacks and instead enforce the types to require an array\n  const props = [\n    ...node.properties,\n    ...(node.callProperties || []),\n    ...(node.indexers || []),\n    ...(node.internalSlots || []),\n  ];\n\n  if (props.length) {\n    this.newline();\n\n    this.space();\n\n    this.printJoin(props, node, {\n      addNewlines(leading) {\n        if (leading && !props[0]) return 1;\n      },\n      indent: true,\n      statement: true,\n      iterator: () => {\n        if (props.length !== 1 || node.inexact) {\n          this.token(\",\");\n          this.space();\n        }\n      },\n    });\n\n    this.space();\n  }\n\n  if (node.inexact) {\n    this.indent();\n    this.token(\"...\");\n    if (props.length) {\n      this.newline();\n    }\n    this.dedent();\n  }\n\n  if (node.exact) {\n    this.token(\"|}\");\n  } else {\n    this.token(\"}\");\n  }\n}\n\nexport function ObjectTypeInternalSlot(\n  this: Printer,\n  node: t.ObjectTypeInternalSlot,\n) {\n  if (node.static) {\n    this.word(\"static\");\n    this.space();\n  }\n  this.token(\"[\");\n  this.token(\"[\");\n  this.print(node.id, node);\n  this.token(\"]\");\n  this.token(\"]\");\n  if (node.optional) this.token(\"?\");\n  if (!node.method) {\n    this.token(\":\");\n    this.space();\n  }\n  this.print(node.value, node);\n}\n\nexport function ObjectTypeCallProperty(\n  this: Printer,\n  node: t.ObjectTypeCallProperty,\n) {\n  if (node.static) {\n    this.word(\"static\");\n    this.space();\n  }\n  this.print(node.value, node);\n}\n\nexport function ObjectTypeIndexer(this: Printer, node: t.ObjectTypeIndexer) {\n  if (node.static) {\n    this.word(\"static\");\n    this.space();\n  }\n  this._variance(node);\n  this.token(\"[\");\n  if (node.id) {\n    this.print(node.id, node);\n    this.token(\":\");\n    this.space();\n  }\n  this.print(node.key, node);\n  this.token(\"]\");\n  this.token(\":\");\n  this.space();\n  this.print(node.value, node);\n}\n\nexport function ObjectTypeProperty(this: Printer, node: t.ObjectTypeProperty) {\n  if (node.proto) {\n    this.word(\"proto\");\n    this.space();\n  }\n  if (node.static) {\n    this.word(\"static\");\n    this.space();\n  }\n  if (node.kind === \"get\" || node.kind === \"set\") {\n    this.word(node.kind);\n    this.space();\n  }\n  this._variance(node);\n  this.print(node.key, node);\n  if (node.optional) this.token(\"?\");\n  if (!node.method) {\n    this.token(\":\");\n    this.space();\n  }\n  this.print(node.value, node);\n}\n\nexport function ObjectTypeSpreadProperty(\n  this: Printer,\n  node: t.ObjectTypeSpreadProperty,\n) {\n  this.token(\"...\");\n  this.print(node.argument, node);\n}\n\nexport function QualifiedTypeIdentifier(\n  this: Printer,\n  node: t.QualifiedTypeIdentifier,\n) {\n  this.print(node.qualification, node);\n  this.token(\".\");\n  this.print(node.id, node);\n}\n\nexport function SymbolTypeAnnotation(this: Printer) {\n  this.word(\"symbol\");\n}\n\nfunction orSeparator(this: Printer) {\n  this.space();\n  this.token(\"|\");\n  this.space();\n}\n\nexport function UnionTypeAnnotation(\n  this: Printer,\n  node: t.UnionTypeAnnotation,\n) {\n  this.printJoin(node.types, node, { separator: orSeparator });\n}\n\nexport function TypeCastExpression(this: Printer, node: t.TypeCastExpression) {\n  this.token(\"(\");\n  this.print(node.expression, node);\n  this.print(node.typeAnnotation, node);\n  this.token(\")\");\n}\n\nexport function Variance(this: Printer, node: t.Variance) {\n  if (node.kind === \"plus\") {\n    this.token(\"+\");\n  } else {\n    this.token(\"-\");\n  }\n}\n\nexport function VoidTypeAnnotation(this: Printer) {\n  this.word(\"void\");\n}\n\nexport function IndexedAccessType(this: Printer, node: t.IndexedAccessType) {\n  this.print(node.objectType, node, true);\n  this.token(\"[\");\n  this.print(node.indexType, node);\n  this.token(\"]\");\n}\n\nexport function OptionalIndexedAccessType(\n  this: Printer,\n  node: t.OptionalIndexedAccessType,\n) {\n  this.print(node.objectType, node);\n  if (node.optional) {\n    this.token(\"?.\");\n  }\n  this.token(\"[\");\n  this.print(node.indexType, node);\n  this.token(\"]\");\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA,IAAAA,EAAA,GAAAC,OAAA;AAEA,IAAAC,QAAA,GAAAD,OAAA;AAsdA,IAAAE,OAAA,GAAAF,OAAA;AAGoB,IA3dXG,0BAA0B,GAAaJ,EAAA,CAAvCI,0BAA0B;EAAEC,WAAA,GAAWL,EAAA,CAAXK,WAAA;AAI9B,SAASC,iBAAiBA,CAAA,EAAgB;EAC/C,IAAI,CAACC,IAAI,CAAC,KAAK,CAAC;AAClB;AAEO,SAASC,mBAAmBA,CAEjCC,IAA2B,EAC3B;EACA,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,WAAW,EAAEF,IAAI,EAAE,IAAI,CAAC;EACxC,IAAI,CAACG,SAAK,GAAI,CAAC;EACf,IAAI,CAACA,SAAK,GAAI,CAAC;AACjB;AAEO,SAASC,qBAAqBA,CAAA,EAAgB;EACnD,IAAI,CAACN,IAAI,CAAC,SAAS,CAAC;AACtB;AAEO,SAASO,4BAA4BA,CAE1CL,IAAoC,EACpC;EACA,IAAI,CAACF,IAAI,CAACE,IAAI,CAACM,KAAK,GAAG,MAAM,GAAG,OAAO,CAAC;AAC1C;AAEO,SAASC,yBAAyBA,CAAA,EAAgB;EACvD,IAAI,CAACT,IAAI,CAAC,MAAM,CAAC;AACnB;AAEO,SAASU,YAAYA,CAE1BR,IAAoB,EACpBS,MAAc,EACd;EACA,IAAI,CAACd,0BAA0B,CAACc,MAAM,CAAC,EAAE;IACvC,IAAI,CAACX,IAAI,CAAC,SAAS,CAAC;IACpB,IAAI,CAACY,KAAK,CAAC,CAAC;EACd;EACA,IAAI,CAACZ,IAAI,CAAC,OAAO,CAAC;EAClB,IAAI,CAACY,KAAK,CAAC,CAAC;EACZ,IAAI,CAACC,aAAa,CAACX,IAAI,CAAC;AAC1B;AAEO,SAASY,eAAeA,CAE7BZ,IAAuB,EACvBS,MAAc,EACd;EACA,IAAI,CAACd,0BAA0B,CAACc,MAAM,CAAC,EAAE;IACvC,IAAI,CAACX,IAAI,CAAC,SAAS,CAAC;IACpB,IAAI,CAACY,KAAK,CAAC,CAAC;EACd;EACA,IAAI,CAACZ,IAAI,CAAC,UAAU,CAAC;EACrB,IAAI,CAACY,KAAK,CAAC,CAAC;EACZ,IAAI,CAACT,KAAK,CAACD,IAAI,CAACa,EAAE,EAAEb,IAAI,CAAC;EAEzB,IAAI,CAACC,KAAK,CAACD,IAAI,CAACa,EAAE,CAACC,cAAc,CAACA,cAAc,EAAEd,IAAI,CAAC;EAEvD,IAAIA,IAAI,CAACe,SAAS,EAAE;IAClB,IAAI,CAACL,KAAK,CAAC,CAAC;IACZ,IAAI,CAACT,KAAK,CAACD,IAAI,CAACe,SAAS,EAAEf,IAAI,CAAC;EAClC;EAEA,IAAI,CAACgB,SAAS,CAAC,CAAC;AAClB;AAEO,SAASC,iBAAiBA,CAAA,EAAgB;EAC/C,IAAI,CAACd,SAAK,GAAI,CAAC;EACf,IAAI,CAACL,IAAI,CAAC,QAAQ,CAAC;AACrB;AAEO,SAASoB,iBAAiBA,CAAgBlB,IAAyB,EAAE;EAC1E,IAAI,CAACG,SAAK,GAAI,CAAC;EACf,IAAI,CAACL,IAAI,CAAC,QAAQ,CAAC;EACnB,IAAI,CAACK,SAAK,GAAI,CAAC;EACf,IAAI,CAACF,KAAK,CAACD,IAAI,CAACM,KAAK,EAAEN,IAAI,CAAC;EAC5B,IAAI,CAACG,SAAK,GAAI,CAAC;AACjB;AAEO,SAASgB,gBAAgBA,CAAgBnB,IAAwB,EAAE;EACxE,IAAI,CAACF,IAAI,CAAC,SAAS,CAAC;EACpB,IAAI,CAACY,KAAK,CAAC,CAAC;EACZ,IAAI,CAACU,oBAAoB,CAACpB,IAAI,CAAC;AACjC;AAEO,SAASqB,aAAaA,CAAgBrB,IAAqB,EAAE;EAClE,IAAI,CAACF,IAAI,CAAC,SAAS,CAAC;EACpB,IAAI,CAACY,KAAK,CAAC,CAAC;EACZ,IAAI,CAACZ,IAAI,CAAC,QAAQ,CAAC;EACnB,IAAI,CAACY,KAAK,CAAC,CAAC;EACZ,IAAI,CAACT,KAAK,CAACD,IAAI,CAACa,EAAE,EAAEb,IAAI,CAAC;EACzB,IAAI,CAACU,KAAK,CAAC,CAAC;EACZ,IAAI,CAACT,KAAK,CAACD,IAAI,CAACsB,IAAI,EAAEtB,IAAI,CAAC;AAC7B;AAEO,SAASuB,oBAAoBA,CAElCvB,IAA4B,EAC5B;EACA,IAAI,CAACF,IAAI,CAAC,SAAS,CAAC;EACpB,IAAI,CAACY,KAAK,CAAC,CAAC;EACZ,IAAI,CAACZ,IAAI,CAAC,QAAQ,CAAC;EACnB,IAAI,CAACK,SAAK,GAAI,CAAC;EACf,IAAI,CAACL,IAAI,CAAC,SAAS,CAAC;EACpB,IAAI,CAACG,KAAK,CAACD,IAAI,CAACc,cAAc,EAAEd,IAAI,CAAC;AACvC;AAEO,SAASwB,gBAAgBA,CAAgBxB,IAAwB,EAAE;EACxE,IAAI,CAACF,IAAI,CAAC,SAAS,CAAC;EACpB,IAAI,CAACY,KAAK,CAAC,CAAC;EACZ,IAAI,CAACe,SAAS,CAACzB,IAAI,CAAC;AACtB;AAEO,SAAS0B,iBAAiBA,CAE/B1B,IAAyB,EACzBS,MAAc,EACd;EACA,IAAI,CAACd,0BAA0B,CAACc,MAAM,CAAC,EAAE;IACvC,IAAI,CAACX,IAAI,CAAC,SAAS,CAAC;IACpB,IAAI,CAACY,KAAK,CAAC,CAAC;EACd;EACA,IAAI,CAACiB,UAAU,CAAC3B,IAAI,CAAC;AACvB;AAEO,SAAS4B,eAAeA,CAE7B5B,IAAuB,EACvBS,MAAc,EACd;EACA,IAAI,CAACd,0BAA0B,CAACc,MAAM,CAAC,EAAE;IACvC,IAAI,CAACX,IAAI,CAAC,SAAS,CAAC;IACpB,IAAI,CAACY,KAAK,CAAC,CAAC;EACd;EACA,IAAI,CAACZ,IAAI,CAAC,KAAK,CAAC;EAChB,IAAI,CAACY,KAAK,CAAC,CAAC;EACZ,IAAI,CAACT,KAAK,CAACD,IAAI,CAACa,EAAE,EAAEb,IAAI,CAAC;EACzB,IAAI,CAACC,KAAK,CAACD,IAAI,CAACa,EAAE,CAACC,cAAc,EAAEd,IAAI,CAAC;EACxC,IAAI,CAACgB,SAAS,CAAC,CAAC;AAClB;AAEO,SAASa,wBAAwBA,CAEtC7B,IAAgC,EAChC;EACA,IAAI,CAACF,IAAI,CAAC,SAAS,CAAC;EACpB,IAAI,CAACY,KAAK,CAAC,CAAC;EACZ,IAAI,CAACZ,IAAI,CAAC,QAAQ,CAAC;EACnB,IAAI,CAACY,KAAK,CAAC,CAAC;EACZ,IAAIV,IAAI,WAAQ,EAAE;IAChB,IAAI,CAACF,IAAI,CAAC,SAAS,CAAC;IACpB,IAAI,CAACY,KAAK,CAAC,CAAC;EACd;EAEAoB,qBAAqB,CAACC,IAAI,CAAC,IAAI,EAAE/B,IAAI,CAAC;AACxC;AAEO,SAASgC,2BAA2BA,CAEzChC,IAAmC,EACnC;EACA,IAAI,CAACF,IAAI,CAAC,SAAS,CAAC;EACpB,IAAI,CAACY,KAAK,CAAC,CAAC;EACZjB,QAAA,CAAAwC,oBAAoB,CAACF,IAAI,CAAC,IAAI,EAAE/B,IAAI,CAAC;AACvC;AAEO,SAASkC,eAAeA,CAAgBlC,IAAuB,EAAE;EACtE,IAAQa,EAAE,GAAWb,IAAI,CAAjBa,EAAE;IAAES,IAAA,GAAStB,IAAI,CAAbsB,IAAA;EACZ,IAAI,CAACxB,IAAI,CAAC,MAAM,CAAC;EACjB,IAAI,CAACY,KAAK,CAAC,CAAC;EACZ,IAAI,CAACT,KAAK,CAACY,EAAE,EAAEb,IAAI,CAAC;EACpB,IAAI,CAACC,KAAK,CAACqB,IAAI,EAAEtB,IAAI,CAAC;AACxB;AAEA,SAASmC,gBAAgBA,CACvBC,OAAgB,EAChBC,IAAY,EACZC,eAAwB,EACxB;EACA,IAAIA,eAAe,EAAE;IACnBF,OAAO,CAAC1B,KAAK,CAAC,CAAC;IACf0B,OAAO,CAACtC,IAAI,CAAC,IAAI,CAAC;IAClBsC,OAAO,CAAC1B,KAAK,CAAC,CAAC;IACf0B,OAAO,CAACtC,IAAI,CAACuC,IAAI,CAAC;EACpB;EACAD,OAAO,CAAC1B,KAAK,CAAC,CAAC;AACjB;AAEA,SAAS6B,QAAQA,CAACH,OAAgB,EAAEpC,IAAgB,EAAE;EACpD,IAAQwC,OAAA,GAAYxC,IAAI,CAAhBwC,OAAA;EACRJ,OAAO,CAACK,KAAK,CAAC,GAAG,CAAC;EAClBL,OAAO,CAACM,MAAM,CAAC,CAAC;EAChBN,OAAO,CAACO,OAAO,CAAC,CAAC;EAAA,IAAAC,SAAA,GAAAC,0BAAA,CACIL,OAAO;IAAAM,KAAA;EAAA;IAA5B,KAAAF,SAAA,CAAAG,CAAA,MAAAD,KAAA,GAAAF,SAAA,CAAAI,CAAA,IAAAC,IAAA,GAA8B;MAAA,IAAnBC,MAAM,GAAAJ,KAAA,CAAAxC,KAAA;MACf8B,OAAO,CAACnC,KAAK,CAACiD,MAAM,EAAElD,IAAI,CAAC;MAC3BoC,OAAO,CAACO,OAAO,CAAC,CAAC;IACnB;EAAA,SAAAQ,GAAA;IAAAP,SAAA,CAAAQ,CAAA,CAAAD,GAAA;EAAA;IAAAP,SAAA,CAAAS,CAAA;EAAA;EACA,IAAIrD,IAAI,CAACsD,iBAAiB,EAAE;IAC1BlB,OAAO,CAACK,KAAK,CAAC,KAAK,CAAC;IACpBL,OAAO,CAACO,OAAO,CAAC,CAAC;EACnB;EACAP,OAAO,CAACmB,MAAM,CAAC,CAAC;EAChBnB,OAAO,CAACK,KAAK,CAAC,GAAG,CAAC;AACpB;AAEO,SAASe,eAAeA,CAAgBxD,IAAuB,EAAE;EACtE,IAAQyD,YAAA,GAAiBzD,IAAI,CAArByD,YAAA;EACRtB,gBAAgB,CAAC,IAAI,EAAE,SAAS,EAAEsB,YAAY,CAAC;EAC/ClB,QAAQ,CAAC,IAAI,EAAEvC,IAAI,CAAC;AACtB;AAEO,SAAS0D,cAAcA,CAAgB1D,IAAsB,EAAE;EACpE,IAAQyD,YAAA,GAAiBzD,IAAI,CAArByD,YAAA;EACRtB,gBAAgB,CAAC,IAAI,EAAE,QAAQ,EAAEsB,YAAY,CAAC;EAC9ClB,QAAQ,CAAC,IAAI,EAAEvC,IAAI,CAAC;AACtB;AAEO,SAAS2D,cAAcA,CAAgB3D,IAAsB,EAAE;EACpE,IAAQyD,YAAA,GAAiBzD,IAAI,CAArByD,YAAA;EACRtB,gBAAgB,CAAC,IAAI,EAAE,QAAQ,EAAEsB,YAAY,CAAC;EAC9ClB,QAAQ,CAAC,IAAI,EAAEvC,IAAI,CAAC;AACtB;AAEO,SAAS4D,cAAcA,CAAgB5D,IAAsB,EAAE;EACpEmC,gBAAgB,CAAC,IAAI,EAAE,QAAQ,EAAE,IAAI,CAAC;EACtCI,QAAQ,CAAC,IAAI,EAAEvC,IAAI,CAAC;AACtB;AAEO,SAAS6D,mBAAmBA,CAEjC7D,IAA2B,EAC3B;EACA,IAAQa,EAAA,GAAOb,IAAI,CAAXa,EAAA;EACR,IAAI,CAACZ,KAAK,CAACY,EAAE,EAAEb,IAAI,CAAC;EACpB,IAAI,CAACG,SAAK,GAAI,CAAC;AACjB;AAEA,SAAS2D,qBAAqBA,CAC5B1B,OAAgB,EAChBpC,IAAmE,EACnE;EACA,IAAQa,EAAE,GAAWb,IAAI,CAAjBa,EAAE;IAAEkD,IAAA,GAAS/D,IAAI,CAAb+D,IAAA;EACZ3B,OAAO,CAACnC,KAAK,CAACY,EAAE,EAAEb,IAAI,CAAC;EACvBoC,OAAO,CAAC1B,KAAK,CAAC,CAAC;EACf0B,OAAO,CAACK,KAAK,CAAC,GAAG,CAAC;EAClBL,OAAO,CAAC1B,KAAK,CAAC,CAAC;EACf0B,OAAO,CAACnC,KAAK,CAAC8D,IAAI,EAAE/D,IAAI,CAAC;EACzBoC,OAAO,CAACK,KAAK,CAAC,GAAG,CAAC;AACpB;AAEO,SAASuB,iBAAiBA,CAAgBhE,IAAyB,EAAE;EAC1E8D,qBAAqB,CAAC,IAAI,EAAE9D,IAAI,CAAC;AACnC;AAEO,SAASiE,gBAAgBA,CAAgBjE,IAAwB,EAAE;EACxE8D,qBAAqB,CAAC,IAAI,EAAE9D,IAAI,CAAC;AACnC;AAEO,SAASkE,gBAAgBA,CAAgBlE,IAAwB,EAAE;EACxE8D,qBAAqB,CAAC,IAAI,EAAE9D,IAAI,CAAC;AACnC;AAEA,SAAS8B,qBAAqBA,CAE5B9B,IAAgC,EAChC;EACA,IAAIA,IAAI,CAACmE,WAAW,EAAE;IACpB,IAAMC,MAAM,GAAGpE,IAAI,CAACmE,WAAW;IAC/B,IAAI,CAAClE,KAAK,CAACmE,MAAM,EAAEpE,IAAI,CAAC;IACxB,IAAI,CAACJ,WAAW,CAACwE,MAAM,CAAC,EAAE,IAAI,CAACpD,SAAS,CAAC,CAAC;EAC5C,CAAC,MAAM;IACL,IAAI,CAACb,SAAK,IAAI,CAAC;IACf,IAAIH,IAAI,CAACqE,UAAU,CAACC,MAAM,EAAE;MAC1B,IAAI,CAAC5D,KAAK,CAAC,CAAC;MACZ,IAAI,CAAC6D,SAAS,CAACvE,IAAI,CAACqE,UAAU,EAAErE,IAAI,CAAC;MACrC,IAAI,CAACU,KAAK,CAAC,CAAC;IACd;IACA,IAAI,CAACP,SAAK,IAAI,CAAC;IAEf,IAAIH,IAAI,CAACwE,MAAM,EAAE;MACf,IAAI,CAAC9D,KAAK,CAAC,CAAC;MACZ,IAAI,CAACZ,IAAI,CAAC,MAAM,CAAC;MACjB,IAAI,CAACY,KAAK,CAAC,CAAC;MACZ,IAAI,CAACT,KAAK,CAACD,IAAI,CAACwE,MAAM,EAAExE,IAAI,CAAC;IAC/B;IAEA,IAAI,CAACgB,SAAS,CAAC,CAAC;EAClB;AACF;AAEO,SAASyD,oBAAoBA,CAAA,EAAgB;EAClD,IAAI,CAACtE,SAAK,GAAI,CAAC;AACjB;AAEO,SAASuE,sBAAsBA,CAEpC1E,IAA8B,EAC9BS,MAAe,EACf;EACA,IAAI,CAACR,KAAK,CAACD,IAAI,CAAC2E,cAAc,EAAE3E,IAAI,CAAC;EACrC,IAAI,CAACG,SAAK,GAAI,CAAC;EAEf,IAAIH,IAAI,QAAK,EAAE;IACb,IAAI,CAACF,IAAI,CAAC,MAAM,CAAC;IACjB,IAAI,CAACK,SAAK,GAAI,CAAC;IACf,IAAI,CAACO,KAAK,CAAC,CAAC;IACZ,IAAI,CAACT,KAAK,CAACD,IAAI,QAAK,CAACc,cAAc,EAAEd,IAAI,CAAC;IAC1C,IAAIA,IAAI,CAAC4E,MAAM,CAACN,MAAM,IAAItE,IAAI,CAAC6E,IAAI,EAAE;MACnC,IAAI,CAAC1E,SAAK,GAAI,CAAC;MACf,IAAI,CAACO,KAAK,CAAC,CAAC;IACd;EACF;EAEA,IAAI,CAAC6D,SAAS,CAACvE,IAAI,CAAC4E,MAAM,EAAE5E,IAAI,CAAC;EAEjC,IAAIA,IAAI,CAAC6E,IAAI,EAAE;IACb,IAAI7E,IAAI,CAAC4E,MAAM,CAACN,MAAM,EAAE;MACtB,IAAI,CAACnE,SAAK,GAAI,CAAC;MACf,IAAI,CAACO,KAAK,CAAC,CAAC;IACd;IACA,IAAI,CAAC+B,KAAK,CAAC,KAAK,CAAC;IACjB,IAAI,CAACxC,KAAK,CAACD,IAAI,CAAC6E,IAAI,EAAE7E,IAAI,CAAC;EAC7B;EAEA,IAAI,CAACG,SAAK,GAAI,CAAC;EAIf,IAAM2E,IAAI,GAAGrE,MAAM,oBAANA,MAAM,CAAEqE,IAAI;EACzB,IACEA,IAAI,IAAI,IAAI,KACXA,IAAI,KAAK,wBAAwB,IAChCA,IAAI,KAAK,wBAAwB,IACjCA,IAAI,KAAK,iBAAiB,IACzBA,IAAI,KAAK,oBAAoB,IAAIrE,MAAM,CAACsE,MAAO,CAAC,EACnD;IACA,IAAI,CAAC5E,SAAK,GAAI,CAAC;EACjB,CAAC,MAAM;IACL,IAAI,CAACO,KAAK,CAAC,CAAC;IACZ,IAAI,CAAC+B,KAAK,CAAC,IAAI,CAAC;EAClB;EAEA,IAAI,CAAC/B,KAAK,CAAC,CAAC;EACZ,IAAI,CAACT,KAAK,CAACD,IAAI,CAACgF,UAAU,EAAEhF,IAAI,CAAC;AACnC;AAEO,SAASiF,iBAAiBA,CAAgBjF,IAAyB,EAAE;EAC1E,IAAI,CAACC,KAAK,CAACD,IAAI,CAACqC,IAAI,EAAErC,IAAI,CAAC;EAC3B,IAAIA,IAAI,CAACkF,QAAQ,EAAE,IAAI,CAAC/E,SAAK,GAAI,CAAC;EAClC,IAAIH,IAAI,CAACqC,IAAI,EAAE;IACb,IAAI,CAAClC,SAAK,GAAI,CAAC;IACf,IAAI,CAACO,KAAK,CAAC,CAAC;EACd;EACA,IAAI,CAACT,KAAK,CAACD,IAAI,CAACc,cAAc,EAAEd,IAAI,CAAC;AACvC;AAEO,SAASmF,gBAAgBA,CAAgBnF,IAAwB,EAAE;EACxE,IAAI,CAACC,KAAK,CAACD,IAAI,CAACa,EAAE,EAAEb,IAAI,CAAC;EACzB,IAAI,CAACC,KAAK,CAACD,IAAI,CAAC2E,cAAc,EAAE3E,IAAI,EAAE,IAAI,CAAC;AAC7C;AAOO,SAASW,aAAaA,CAE3BX,IAAkE,EAClE;EAAA,IAAAoF,aAAA;EACA,IAAI,CAACnF,KAAK,CAACD,IAAI,CAACa,EAAE,EAAEb,IAAI,CAAC;EACzB,IAAI,CAACC,KAAK,CAACD,IAAI,CAAC2E,cAAc,EAAE3E,IAAI,CAAC;EACrC,KAAAoF,aAAA,GAAIpF,IAAI,WAAQ,aAAZoF,aAAA,CAAcd,MAAM,EAAE;IACxB,IAAI,CAAC5D,KAAK,CAAC,CAAC;IACZ,IAAI,CAACZ,IAAI,CAAC,SAAS,CAAC;IACpB,IAAI,CAACY,KAAK,CAAC,CAAC;IACZ,IAAI,CAAC6D,SAAS,CAACvE,IAAI,WAAQ,EAAEA,IAAI,CAAC;EACpC;EACA,IAAIA,IAAI,CAAC8E,IAAI,KAAK,cAAc,EAAE;IAAA,IAAAO,YAAA,EAAAC,gBAAA;IAChC,KAAAD,YAAA,GAAIrF,IAAI,CAACuF,MAAM,aAAXF,YAAA,CAAaf,MAAM,EAAE;MACvB,IAAI,CAAC5D,KAAK,CAAC,CAAC;MACZ,IAAI,CAACZ,IAAI,CAAC,QAAQ,CAAC;MACnB,IAAI,CAACY,KAAK,CAAC,CAAC;MACZ,IAAI,CAAC6D,SAAS,CAACvE,IAAI,CAACuF,MAAM,EAAEvF,IAAI,CAAC;IACnC;IACA,KAAAsF,gBAAA,GAAItF,IAAI,cAAW,aAAfsF,gBAAA,CAAiBhB,MAAM,EAAE;MAC3B,IAAI,CAAC5D,KAAK,CAAC,CAAC;MACZ,IAAI,CAACZ,IAAI,CAAC,YAAY,CAAC;MACvB,IAAI,CAACY,KAAK,CAAC,CAAC;MACZ,IAAI,CAAC6D,SAAS,CAACvE,IAAI,cAAW,EAAEA,IAAI,CAAC;IACvC;EACF;EACA,IAAI,CAACU,KAAK,CAAC,CAAC;EACZ,IAAI,CAACT,KAAK,CAACD,IAAI,CAACsB,IAAI,EAAEtB,IAAI,CAAC;AAC7B;AAEO,SAASwF,SAASA,CAEvBxF,IAM2B,EAC3B;EAAA,IAAAyF,cAAA;EACA,IAAMC,IAAI,IAAAD,cAAA,GAAGzF,IAAI,CAAC2F,QAAQ,qBAAbF,cAAA,CAAeC,IAAI;EAChC,IAAIA,IAAI,IAAI,IAAI,EAAE;IAChB,IAAIA,IAAI,KAAK,MAAM,EAAE;MACnB,IAAI,CAACvF,SAAK,GAAI,CAAC;IACjB,CAAC,MAAM,IAAIuF,IAAI,KAAK,OAAO,EAAE;MAC3B,IAAI,CAACvF,SAAK,GAAI,CAAC;IACjB;EACF;AACF;AAEO,SAASiB,oBAAoBA,CAElCpB,IAAiD,EACjD;EACA,IAAI,CAACF,IAAI,CAAC,WAAW,CAAC;EACtB,IAAI,CAACY,KAAK,CAAC,CAAC;EACZ,IAAI,CAACC,aAAa,CAACX,IAAI,CAAC;AAC1B;AAEA,SAAS4F,YAAYA,CAAA,EAAgB;EACnC,IAAI,CAAClF,KAAK,CAAC,CAAC;EACZ,IAAI,CAACP,SAAK,GAAI,CAAC;EACf,IAAI,CAACO,KAAK,CAAC,CAAC;AACd;AAEO,SAASmF,uBAAuBA,CAErC7F,IAA+B,EAC/B;EAAA,IAAA8F,cAAA;EACA,IAAI,CAAChG,IAAI,CAAC,WAAW,CAAC;EACtB,KAAAgG,cAAA,GAAI9F,IAAI,WAAQ,aAAZ8F,cAAA,CAAcxB,MAAM,EAAE;IACxB,IAAI,CAAC5D,KAAK,CAAC,CAAC;IACZ,IAAI,CAACZ,IAAI,CAAC,SAAS,CAAC;IACpB,IAAI,CAACY,KAAK,CAAC,CAAC;IACZ,IAAI,CAAC6D,SAAS,CAACvE,IAAI,WAAQ,EAAEA,IAAI,CAAC;EACpC;EACA,IAAI,CAACU,KAAK,CAAC,CAAC;EACZ,IAAI,CAACT,KAAK,CAACD,IAAI,CAACsB,IAAI,EAAEtB,IAAI,CAAC;AAC7B;AAEO,SAAS+F,0BAA0BA,CAExC/F,IAAkC,EAClC;EACA,IAAI,CAACgG,SAAS,CAAChG,IAAI,CAACiG,KAAK,EAAEjG,IAAI,EAAE;IAAEkG,SAAS,EAAEN;EAAa,CAAC,CAAC;AAC/D;AAEO,SAASO,mBAAmBA,CAAA,EAAgB;EACjD,IAAI,CAACrG,IAAI,CAAC,OAAO,CAAC;AACpB;AAEO,SAASsG,mBAAmBA,CAAA,EAAgB;EACjD,IAAI,CAACtG,IAAI,CAAC,OAAO,CAAC;AACpB;AAEO,SAASuG,sBAAsBA,CAEpCrG,IAA8B,EAC9B;EACA,IAAI,CAACG,SAAK,GAAI,CAAC;EACf,IAAI,CAACF,KAAK,CAACD,IAAI,CAACc,cAAc,EAAEd,IAAI,CAAC;AACvC;AAOO,SAASsG,oBAAoBA,CAAA,EAAgB;EAClD,IAAI,CAACxG,IAAI,CAAC,QAAQ,CAAC;AACrB;AAEO,SAASyG,oBAAoBA,CAAA,EAAgB;EAClD,IAAI,CAACzG,IAAI,CAAC,QAAQ,CAAC;AACrB;AAEO,SAAS0G,kBAAkBA,CAAA,EAAgB;EAChD,IAAI,CAAC1G,IAAI,CAAC,MAAM,CAAC;AACnB;AAEO,SAAS2G,mBAAmBA,CAEjCzG,IAA2B,EAC3B;EACA,IAAI,CAACG,SAAK,GAAI,CAAC;EACf,IAAI,CAACoE,SAAS,CAACvE,IAAI,CAACiG,KAAK,EAAEjG,IAAI,CAAC;EAChC,IAAI,CAACG,SAAK,GAAI,CAAC;AACjB;AAEO,SAASuG,oBAAoBA,CAElC1G,IAA4B,EAC5B;EACA,IAAI,CAACF,IAAI,CAAC,QAAQ,CAAC;EACnB,IAAI,CAACY,KAAK,CAAC,CAAC;EACZ,IAAI,CAACT,KAAK,CAACD,IAAI,CAAC2G,QAAQ,EAAE3G,IAAI,CAAC;AACjC;AAEO,SAASyB,SAASA,CAEvBzB,IAAsC,EACtC;EACA,IAAI,CAACF,IAAI,CAAC,MAAM,CAAC;EACjB,IAAI,CAACY,KAAK,CAAC,CAAC;EACZ,IAAI,CAACT,KAAK,CAACD,IAAI,CAACa,EAAE,EAAEb,IAAI,CAAC;EACzB,IAAI,CAACC,KAAK,CAACD,IAAI,CAAC2E,cAAc,EAAE3E,IAAI,CAAC;EACrC,IAAI,CAACU,KAAK,CAAC,CAAC;EACZ,IAAI,CAACP,SAAK,GAAI,CAAC;EACf,IAAI,CAACO,KAAK,CAAC,CAAC;EACZ,IAAI,CAACT,KAAK,CAACD,IAAI,CAAC4G,KAAK,EAAE5G,IAAI,CAAC;EAC5B,IAAI,CAACgB,SAAS,CAAC,CAAC;AAClB;AAEO,SAAS6F,cAAcA,CAAgB7G,IAAsB,EAAE;EACpE,IAAI,CAACG,SAAK,GAAI,CAAC;EACf,IAAI,CAACO,KAAK,CAAC,CAAC;EAEZ,IAAIV,IAAI,CAACkF,QAAQ,EAAE,IAAI,CAAC/E,SAAK,GAAI,CAAC;EAClC,IAAI,CAACF,KAAK,CAACD,IAAI,CAACc,cAAc,EAAEd,IAAI,CAAC;AACvC;AAEO,SAAS8G,0BAA0BA,CAExC9G,IAAkC,EAC5B;EACN,IAAI,CAACG,SAAK,GAAI,CAAC;EACf,IAAI,CAACoE,SAAS,CAACvE,IAAI,CAAC4E,MAAM,EAAE5E,IAAI,EAAE,CAAC,CAAC,CAAC;EACrC,IAAI,CAACG,SAAK,GAAI,CAAC;AACjB;AAIO,SAAS4G,aAAaA,CAAgB/G,IAAqB,EAAE;EAClE,IAAI,CAACwF,SAAS,CAACxF,IAAI,CAAC;EAEpB,IAAI,CAACF,IAAI,CAACE,IAAI,CAACqC,IAAI,CAAC;EAEpB,IAAIrC,IAAI,CAACgH,KAAK,EAAE;IACd,IAAI,CAAC/G,KAAK,CAACD,IAAI,CAACgH,KAAK,EAAEhH,IAAI,CAAC;EAC9B;EAEA,IAAIA,IAAI,WAAQ,EAAE;IAChB,IAAI,CAACU,KAAK,CAAC,CAAC;IACZ,IAAI,CAACP,SAAK,GAAI,CAAC;IACf,IAAI,CAACO,KAAK,CAAC,CAAC;IACZ,IAAI,CAACT,KAAK,CAACD,IAAI,WAAQ,EAAEA,IAAI,CAAC;EAChC;AACF;AAEO,SAAS2B,UAAUA,CAExB3B,IAAwC,EACxC;EACA,IAAI,CAACF,IAAI,CAAC,QAAQ,CAAC;EACnB,IAAI,CAACY,KAAK,CAAC,CAAC;EACZ,IAAI,CAACZ,IAAI,CAAC,MAAM,CAAC;EACjB,IAAI,CAACY,KAAK,CAAC,CAAC;EACZ,IAAI,CAACT,KAAK,CAACD,IAAI,CAACa,EAAE,EAAEb,IAAI,CAAC;EACzB,IAAI,CAACC,KAAK,CAACD,IAAI,CAAC2E,cAAc,EAAE3E,IAAI,CAAC;EACrC,IAAIA,IAAI,CAACiH,SAAS,EAAE;IAClB,IAAI,CAAC9G,SAAK,GAAI,CAAC;IACf,IAAI,CAACO,KAAK,CAAC,CAAC;IACZ,IAAI,CAACT,KAAK,CAACD,IAAI,CAACiH,SAAS,EAAEjH,IAAI,CAAC;EAClC;EAEA,IAAIA,IAAI,CAACkH,QAAQ,EAAE;IACjB,IAAI,CAACxG,KAAK,CAAC,CAAC;IACZ,IAAI,CAACP,SAAK,GAAI,CAAC;IACf,IAAI,CAACO,KAAK,CAAC,CAAC;IACZ,IAAI,CAACT,KAAK,CAACD,IAAI,CAACkH,QAAQ,EAAElH,IAAI,CAAC;EACjC;EACA,IAAI,CAACgB,SAAS,CAAC,CAAC;AAClB;AAEO,SAASmG,oBAAoBA,CAElCnH,IAA4B,EAC5B;EAAA,IAAAoH,KAAA;EACA,IAAIpH,IAAI,CAACqH,KAAK,EAAE;IACd,IAAI,CAAC5E,KAAK,CAAC,IAAI,CAAC;EAClB,CAAC,MAAM;IACL,IAAI,CAACtC,SAAK,IAAI,CAAC;EACjB;EAGA,IAAMmH,KAAK,MAAAC,MAAA,CAAAC,kBAAA,CACNxH,IAAI,CAACyH,UAAU,GAAAD,kBAAA,CACdxH,IAAI,CAAC0H,cAAc,IAAI,EAAE,GAAAF,kBAAA,CACzBxH,IAAI,CAAC2H,QAAQ,IAAI,EAAE,GAAAH,kBAAA,CACnBxH,IAAI,CAAC4H,aAAa,IAAI,EAAE,EAC7B;EAED,IAAIN,KAAK,CAAChD,MAAM,EAAE;IAChB,IAAI,CAAC3B,OAAO,CAAC,CAAC;IAEd,IAAI,CAACjC,KAAK,CAAC,CAAC;IAEZ,IAAI,CAACsF,SAAS,CAACsB,KAAK,EAAEtH,IAAI,EAAE;MAC1B6H,WAAW,WAAAA,YAACC,OAAO,EAAE;QACnB,IAAIA,OAAO,IAAI,CAACR,KAAK,CAAC,CAAC,CAAC,EAAE,OAAO,CAAC;MACpC,CAAC;MACD5E,MAAM,EAAE,IAAI;MACZqF,SAAS,EAAE,IAAI;MACfC,QAAQ,EAAE,SAAAA,SAAA,EAAM;QACd,IAAIV,KAAK,CAAChD,MAAM,KAAK,CAAC,IAAItE,IAAI,CAACiI,OAAO,EAAE;UACtCb,KAAI,CAACjH,SAAK,GAAI,CAAC;UACfiH,KAAI,CAAC1G,KAAK,CAAC,CAAC;QACd;MACF;IACF,CAAC,CAAC;IAEF,IAAI,CAACA,KAAK,CAAC,CAAC;EACd;EAEA,IAAIV,IAAI,CAACiI,OAAO,EAAE;IAChB,IAAI,CAACvF,MAAM,CAAC,CAAC;IACb,IAAI,CAACD,KAAK,CAAC,KAAK,CAAC;IACjB,IAAI6E,KAAK,CAAChD,MAAM,EAAE;MAChB,IAAI,CAAC3B,OAAO,CAAC,CAAC;IAChB;IACA,IAAI,CAACY,MAAM,CAAC,CAAC;EACf;EAEA,IAAIvD,IAAI,CAACqH,KAAK,EAAE;IACd,IAAI,CAAC5E,KAAK,CAAC,IAAI,CAAC;EAClB,CAAC,MAAM;IACL,IAAI,CAACtC,SAAK,IAAI,CAAC;EACjB;AACF;AAEO,SAAS+H,sBAAsBA,CAEpClI,IAA8B,EAC9B;EACA,IAAIA,IAAI,UAAO,EAAE;IACf,IAAI,CAACF,IAAI,CAAC,QAAQ,CAAC;IACnB,IAAI,CAACY,KAAK,CAAC,CAAC;EACd;EACA,IAAI,CAACP,SAAK,GAAI,CAAC;EACf,IAAI,CAACA,SAAK,GAAI,CAAC;EACf,IAAI,CAACF,KAAK,CAACD,IAAI,CAACa,EAAE,EAAEb,IAAI,CAAC;EACzB,IAAI,CAACG,SAAK,GAAI,CAAC;EACf,IAAI,CAACA,SAAK,GAAI,CAAC;EACf,IAAIH,IAAI,CAACkF,QAAQ,EAAE,IAAI,CAAC/E,SAAK,GAAI,CAAC;EAClC,IAAI,CAACH,IAAI,CAAC+E,MAAM,EAAE;IAChB,IAAI,CAAC5E,SAAK,GAAI,CAAC;IACf,IAAI,CAACO,KAAK,CAAC,CAAC;EACd;EACA,IAAI,CAACT,KAAK,CAACD,IAAI,CAACM,KAAK,EAAEN,IAAI,CAAC;AAC9B;AAEO,SAASmI,sBAAsBA,CAEpCnI,IAA8B,EAC9B;EACA,IAAIA,IAAI,UAAO,EAAE;IACf,IAAI,CAACF,IAAI,CAAC,QAAQ,CAAC;IACnB,IAAI,CAACY,KAAK,CAAC,CAAC;EACd;EACA,IAAI,CAACT,KAAK,CAACD,IAAI,CAACM,KAAK,EAAEN,IAAI,CAAC;AAC9B;AAEO,SAASoI,iBAAiBA,CAAgBpI,IAAyB,EAAE;EAC1E,IAAIA,IAAI,UAAO,EAAE;IACf,IAAI,CAACF,IAAI,CAAC,QAAQ,CAAC;IACnB,IAAI,CAACY,KAAK,CAAC,CAAC;EACd;EACA,IAAI,CAAC8E,SAAS,CAACxF,IAAI,CAAC;EACpB,IAAI,CAACG,SAAK,GAAI,CAAC;EACf,IAAIH,IAAI,CAACa,EAAE,EAAE;IACX,IAAI,CAACZ,KAAK,CAACD,IAAI,CAACa,EAAE,EAAEb,IAAI,CAAC;IACzB,IAAI,CAACG,SAAK,GAAI,CAAC;IACf,IAAI,CAACO,KAAK,CAAC,CAAC;EACd;EACA,IAAI,CAACT,KAAK,CAACD,IAAI,CAACqI,GAAG,EAAErI,IAAI,CAAC;EAC1B,IAAI,CAACG,SAAK,GAAI,CAAC;EACf,IAAI,CAACA,SAAK,GAAI,CAAC;EACf,IAAI,CAACO,KAAK,CAAC,CAAC;EACZ,IAAI,CAACT,KAAK,CAACD,IAAI,CAACM,KAAK,EAAEN,IAAI,CAAC;AAC9B;AAEO,SAASsI,kBAAkBA,CAAgBtI,IAA0B,EAAE;EAC5E,IAAIA,IAAI,CAACuI,KAAK,EAAE;IACd,IAAI,CAACzI,IAAI,CAAC,OAAO,CAAC;IAClB,IAAI,CAACY,KAAK,CAAC,CAAC;EACd;EACA,IAAIV,IAAI,UAAO,EAAE;IACf,IAAI,CAACF,IAAI,CAAC,QAAQ,CAAC;IACnB,IAAI,CAACY,KAAK,CAAC,CAAC;EACd;EACA,IAAIV,IAAI,CAAC0F,IAAI,KAAK,KAAK,IAAI1F,IAAI,CAAC0F,IAAI,KAAK,KAAK,EAAE;IAC9C,IAAI,CAAC5F,IAAI,CAACE,IAAI,CAAC0F,IAAI,CAAC;IACpB,IAAI,CAAChF,KAAK,CAAC,CAAC;EACd;EACA,IAAI,CAAC8E,SAAS,CAACxF,IAAI,CAAC;EACpB,IAAI,CAACC,KAAK,CAACD,IAAI,CAACqI,GAAG,EAAErI,IAAI,CAAC;EAC1B,IAAIA,IAAI,CAACkF,QAAQ,EAAE,IAAI,CAAC/E,SAAK,GAAI,CAAC;EAClC,IAAI,CAACH,IAAI,CAAC+E,MAAM,EAAE;IAChB,IAAI,CAAC5E,SAAK,GAAI,CAAC;IACf,IAAI,CAACO,KAAK,CAAC,CAAC;EACd;EACA,IAAI,CAACT,KAAK,CAACD,IAAI,CAACM,KAAK,EAAEN,IAAI,CAAC;AAC9B;AAEO,SAASwI,wBAAwBA,CAEtCxI,IAAgC,EAChC;EACA,IAAI,CAACyC,KAAK,CAAC,KAAK,CAAC;EACjB,IAAI,CAACxC,KAAK,CAACD,IAAI,CAAC2G,QAAQ,EAAE3G,IAAI,CAAC;AACjC;AAEO,SAASyI,uBAAuBA,CAErCzI,IAA+B,EAC/B;EACA,IAAI,CAACC,KAAK,CAACD,IAAI,CAAC0I,aAAa,EAAE1I,IAAI,CAAC;EACpC,IAAI,CAACG,SAAK,GAAI,CAAC;EACf,IAAI,CAACF,KAAK,CAACD,IAAI,CAACa,EAAE,EAAEb,IAAI,CAAC;AAC3B;AAEO,SAAS2I,oBAAoBA,CAAA,EAAgB;EAClD,IAAI,CAAC7I,IAAI,CAAC,QAAQ,CAAC;AACrB;AAEA,SAAS8I,WAAWA,CAAA,EAAgB;EAClC,IAAI,CAAClI,KAAK,CAAC,CAAC;EACZ,IAAI,CAACP,SAAK,IAAI,CAAC;EACf,IAAI,CAACO,KAAK,CAAC,CAAC;AACd;AAEO,SAASmI,mBAAmBA,CAEjC7I,IAA2B,EAC3B;EACA,IAAI,CAACgG,SAAS,CAAChG,IAAI,CAACiG,KAAK,EAAEjG,IAAI,EAAE;IAAEkG,SAAS,EAAE0C;EAAY,CAAC,CAAC;AAC9D;AAEO,SAASE,kBAAkBA,CAAgB9I,IAA0B,EAAE;EAC5E,IAAI,CAACG,SAAK,GAAI,CAAC;EACf,IAAI,CAACF,KAAK,CAACD,IAAI,CAAC+I,UAAU,EAAE/I,IAAI,CAAC;EACjC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACc,cAAc,EAAEd,IAAI,CAAC;EACrC,IAAI,CAACG,SAAK,GAAI,CAAC;AACjB;AAEO,SAAS6I,QAAQA,CAAgBhJ,IAAgB,EAAE;EACxD,IAAIA,IAAI,CAAC0F,IAAI,KAAK,MAAM,EAAE;IACxB,IAAI,CAACvF,SAAK,GAAI,CAAC;EACjB,CAAC,MAAM;IACL,IAAI,CAACA,SAAK,GAAI,CAAC;EACjB;AACF;AAEO,SAAS8I,kBAAkBA,CAAA,EAAgB;EAChD,IAAI,CAACnJ,IAAI,CAAC,MAAM,CAAC;AACnB;AAEO,SAASoJ,iBAAiBA,CAAgBlJ,IAAyB,EAAE;EAC1E,IAAI,CAACC,KAAK,CAACD,IAAI,CAACmJ,UAAU,EAAEnJ,IAAI,EAAE,IAAI,CAAC;EACvC,IAAI,CAACG,SAAK,GAAI,CAAC;EACf,IAAI,CAACF,KAAK,CAACD,IAAI,CAACoJ,SAAS,EAAEpJ,IAAI,CAAC;EAChC,IAAI,CAACG,SAAK,GAAI,CAAC;AACjB;AAEO,SAASkJ,yBAAyBA,CAEvCrJ,IAAiC,EACjC;EACA,IAAI,CAACC,KAAK,CAACD,IAAI,CAACmJ,UAAU,EAAEnJ,IAAI,CAAC;EACjC,IAAIA,IAAI,CAACkF,QAAQ,EAAE;IACjB,IAAI,CAACzC,KAAK,CAAC,IAAI,CAAC;EAClB;EACA,IAAI,CAACtC,SAAK,GAAI,CAAC;EACf,IAAI,CAACF,KAAK,CAACD,IAAI,CAACoJ,SAAS,EAAEpJ,IAAI,CAAC;EAChC,IAAI,CAACG,SAAK,GAAI,CAAC;AACjB","ignoreList":[]}
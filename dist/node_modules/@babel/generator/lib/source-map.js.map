{"version":3,"file":"source-map.js","names":["_genMapping","require","_traceMapping","SourceMap","opts","code","_classCallCheck","_opts$sourceFileName","_map","_rawMappings","_sourceFileName","_lastGenLine","_lastSourceLine","_lastSourceColumn","_inputMap","map","GenMapping","sourceRoot","sourceFileName","replace","undefined","inputSourceMap","TraceMap","resolvedSources","length","i","_this$_inputMap$sourc","setSourceContent","sourcesContent","_typeof","_i","_Object$keys","Object","keys","_createClass","key","value","get","toEncodedMap","getDecoded","toDecodedMap","getRawMappings","allMappings","mark","generated","line","column","identifierName","identifierNamePos","filename","_originalMapping","originalMapping","originalPositionFor","name","originalIdentifierMapping","source","maybeAddMapping","original","exports"],"sources":["../src/source-map.ts"],"sourcesContent":["import {\n  GenMapping,\n  maybeAddMapping,\n  setSourceContent,\n  allMappings,\n  toEncodedMap,\n  toDecodedMap,\n} from \"@jridgewell/gen-mapping\";\n\nimport type {\n  EncodedSourceMap,\n  DecodedSourceMap,\n  Mapping,\n} from \"@jridgewell/gen-mapping\";\n\nimport {\n  type SourceMapInput,\n  originalPositionFor,\n  TraceMap,\n} from \"@jridgewell/trace-mapping\";\n\n/**\n * Build a sourcemap.\n */\n\nexport default class SourceMap {\n  private _map: GenMapping;\n  private _rawMappings: Mapping[] | undefined;\n  private _sourceFileName: string | undefined;\n\n  // Any real line is > 0, so init to 0 is fine.\n  private _lastGenLine = 0;\n  private _lastSourceLine = 0;\n\n  // Source columns can be 0, but we only check in unison with sourceLine, which\n  // inits to an impossible value. So init to 0 is fine.\n  private _lastSourceColumn = 0;\n\n  public _inputMap: TraceMap;\n\n  constructor(\n    opts: {\n      sourceFileName?: string;\n      sourceRoot?: string;\n      inputSourceMap?: SourceMapInput;\n    },\n    code: string | { [sourceFileName: string]: string },\n  ) {\n    const map = (this._map = new GenMapping({ sourceRoot: opts.sourceRoot }));\n    this._sourceFileName = opts.sourceFileName?.replace(/\\\\/g, \"/\");\n    this._rawMappings = undefined;\n\n    if (opts.inputSourceMap) {\n      this._inputMap = new TraceMap(opts.inputSourceMap);\n      const resolvedSources = this._inputMap.resolvedSources;\n      if (resolvedSources.length) {\n        for (let i = 0; i < resolvedSources.length; i++) {\n          setSourceContent(\n            map,\n            resolvedSources[i],\n            this._inputMap.sourcesContent?.[i],\n          );\n        }\n      }\n    }\n\n    if (typeof code === \"string\" && !opts.inputSourceMap) {\n      setSourceContent(map, this._sourceFileName, code);\n    } else if (typeof code === \"object\") {\n      for (const sourceFileName of Object.keys(code)) {\n        setSourceContent(\n          map,\n          sourceFileName.replace(/\\\\/g, \"/\"),\n          code[sourceFileName],\n        );\n      }\n    }\n  }\n\n  /**\n   * Get the sourcemap.\n   */\n  get(): EncodedSourceMap {\n    return toEncodedMap(this._map);\n  }\n\n  getDecoded(): DecodedSourceMap {\n    return toDecodedMap(this._map);\n  }\n\n  getRawMappings(): Mapping[] {\n    return (this._rawMappings ||= allMappings(this._map));\n  }\n\n  /**\n   * Mark the current generated position with a source position. May also be passed null line/column\n   * values to insert a mapping to nothing.\n   */\n\n  mark(\n    generated: { line: number; column: number },\n    line: number,\n    column: number,\n    identifierName?: string | null,\n    identifierNamePos?: { line: number; column: number },\n    filename?: string | null,\n  ) {\n    this._rawMappings = undefined;\n\n    let originalMapping: {\n      source: string | null;\n      name?: string | null;\n      line: number | null;\n      column: number | null;\n    };\n\n    if (line != null) {\n      if (this._inputMap) {\n        // This is the lookup for this mark\n        originalMapping = originalPositionFor(this._inputMap, {\n          line,\n          column,\n        });\n\n        // If the we found a name, nothing else needs to be done\n        // Maybe we're marking a `(` and the input map already had a name attached there,\n        // or we're marking a `(` and the sourcemap spanned a `foo(`,\n        // or we're marking an identifier, etc.\n        if (!originalMapping.name && identifierNamePos) {\n          // We're trying to mark a `(` (as that's the only thing that provides\n          // an identifierNamePos currently), and we the AST had an identifier attached.\n          // Lookup it's original name.\n          const originalIdentifierMapping = originalPositionFor(\n            this._inputMap,\n            identifierNamePos,\n          );\n          if (originalIdentifierMapping.name) {\n            identifierName = originalIdentifierMapping.name;\n          }\n        }\n      } else {\n        originalMapping = {\n          source: filename?.replace(/\\\\/g, \"/\") || this._sourceFileName,\n          line: line,\n          column: column,\n        };\n      }\n    }\n\n    maybeAddMapping(this._map, {\n      name: identifierName,\n      generated,\n      source: originalMapping?.source,\n      original: originalMapping,\n    });\n  }\n}\n"],"mappings":"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","ignoreList":[]}
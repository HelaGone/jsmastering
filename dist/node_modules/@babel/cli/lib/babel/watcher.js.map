{"version":3,"file":"watcher.js","names":["_path","data","require","fileToDeps","Map","depToFiles","isWatchMode","watcher","watchQueue","Set","hasStarted","enable","_ref","enableGlobbing","_requireChokidar","requireChokidar","FSWatcher","options","disableGlobbing","persistent","ignoreInitial","awaitWriteFinish","stabilityThreshold","pollInterval","on","unwatchFile","startWatcher","_iterator","_createForOfIteratorHelper","_step","s","n","done","dep","value","add","err","e","f","clear","console","log","watch","filename","Error","resolve","onFilesChange","callback","event","_depToFiles$get","absoluteFile","concat","_toConsumableArray","get","updateExternalDependencies","dependencies","absFilename","absDependencies","Array","from","deps","_iterator2","_step2","has","removeFileDependency","_iterator3","_step3","set","size","unwatch","_iterator4","_step4","parseInt","process","versions","node","error"],"sources":["../../src/babel/watcher.ts"],"sourcesContent":["import { createRequire } from \"module\";\nimport path from \"path\";\nimport type { WatchOptions, FSWatcher } from \"chokidar\";\n\nconst fileToDeps = new Map<string, Set<string>>();\nconst depToFiles = new Map<string, Set<string>>();\n\nlet isWatchMode = false;\nlet watcher: FSWatcher;\nconst watchQueue = new Set<string>();\nlet hasStarted = false;\n\nexport function enable({ enableGlobbing }: { enableGlobbing: boolean }) {\n  isWatchMode = true;\n\n  const { FSWatcher } = requireChokidar();\n\n  const options: WatchOptions = {\n    disableGlobbing: !enableGlobbing,\n    persistent: true,\n    ignoreInitial: true,\n    awaitWriteFinish: {\n      stabilityThreshold: 50,\n      pollInterval: 10,\n    },\n  };\n  watcher = new FSWatcher(options);\n\n  watcher.on(\"unlink\", unwatchFile);\n}\n\nexport function startWatcher() {\n  hasStarted = true;\n\n  for (const dep of watchQueue) {\n    watcher.add(dep);\n  }\n  watchQueue.clear();\n\n  watcher.on(\"ready\", () => {\n    console.log(\"The watcher is ready.\");\n  });\n}\n\nexport function watch(filename: string): void {\n  if (!isWatchMode) {\n    throw new Error(\n      \"Internal Babel error: .watch called when not in watch mode.\",\n    );\n  }\n\n  if (!hasStarted) {\n    watchQueue.add(path.resolve(filename));\n  } else {\n    watcher.add(path.resolve(filename));\n  }\n}\n\n/**\n * Call @param callback whenever a dependency (source file)/\n * external dependency (non-source file) changes.\n *\n * Handles mapping external dependencies to their corresponding\n * dependencies.\n */\nexport function onFilesChange(\n  callback: (filenames: string[], event: string, cause: string) => void,\n): void {\n  if (!isWatchMode) {\n    throw new Error(\n      \"Internal Babel error: .onFilesChange called when not in watch mode.\",\n    );\n  }\n\n  watcher.on(\"all\", (event, filename) => {\n    if (event !== \"change\" && event !== \"add\") return;\n\n    const absoluteFile = path.resolve(filename);\n    callback(\n      [absoluteFile, ...(depToFiles.get(absoluteFile) ?? [])],\n      event,\n      absoluteFile,\n    );\n  });\n}\n\nexport function updateExternalDependencies(\n  filename: string,\n  dependencies: Set<string>,\n) {\n  if (!isWatchMode) return;\n\n  // Use absolute paths\n  const absFilename = path.resolve(filename);\n  const absDependencies = new Set(\n    Array.from(dependencies, dep => path.resolve(dep)),\n  );\n\n  const deps = fileToDeps.get(absFilename);\n  if (deps) {\n    for (const dep of deps) {\n      if (!absDependencies.has(dep)) {\n        removeFileDependency(absFilename, dep);\n      }\n    }\n  }\n  for (const dep of absDependencies) {\n    let deps = depToFiles.get(dep);\n    if (!deps) {\n      depToFiles.set(dep, (deps = new Set()));\n\n      if (!hasStarted) {\n        watchQueue.add(dep);\n      } else {\n        watcher.add(dep);\n      }\n    }\n\n    deps.add(absFilename);\n  }\n\n  fileToDeps.set(absFilename, absDependencies);\n}\n\nfunction removeFileDependency(filename: string, dep: string) {\n  const deps = depToFiles.get(dep);\n  deps.delete(filename);\n\n  if (deps.size === 0) {\n    depToFiles.delete(dep);\n\n    if (!hasStarted) {\n      watchQueue.delete(dep);\n    } else {\n      watcher.unwatch(dep);\n    }\n  }\n}\n\nfunction unwatchFile(filename: string) {\n  const deps = fileToDeps.get(filename);\n  if (!deps) return;\n\n  for (const dep of deps) {\n    removeFileDependency(filename, dep);\n  }\n  fileToDeps.delete(filename);\n}\n\nfunction requireChokidar(): any {\n  const require = createRequire(import.meta.url);\n\n  try {\n    return process.env.BABEL_8_BREAKING\n      ? require(\"chokidar\")\n      : parseInt(process.versions.node) >= 8\n        ? require(\"chokidar\")\n        : require(\"@nicolo-ribaudo/chokidar-2\");\n  } catch (err) {\n    console.error(\n      \"The optional dependency chokidar failed to install and is required for \" +\n        \"--watch. Chokidar is likely not supported on your platform.\",\n    );\n    throw err;\n  }\n}\n"],"mappings":"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","ignoreList":[]}
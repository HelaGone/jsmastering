{"version":3,"file":"import-injector.js","names":["_assert","require","_t","_importBuilder","_isModule","identifier","importSpecifier","numericLiteral","sequenceExpression","isImportDeclaration","ImportInjector","path","importedSource","opts","_classCallCheck","_defaultOpts","importedType","importedInterop","importingInterop","ensureLiveReference","ensureNoContext","importPosition","programPath","find","p","isProgram","_programPath","_programScope","scope","_hub","hub","_applyDefaults","_createClass","key","value","addDefault","importedSourceIn","addNamed","importName","_generateImport","addNamespace","addSideEffect","isInit","arguments","length","undefined","newOpts","Object","assign","nameHint","blockHoist","isDefault","isNamed","isNamespace","name","isMod","isModuleForNode","isModuleForBabel","Error","builder","namespace","named","concat","es6Default","wildcardInterop","defaultInterop","read","prop","_builder$done","done","statements","resultName","_insertStatements","type","_insertStatementsAfter","_insertStatementsBefore","unshiftContainer","isValueImport","firstImportDecl","get","node","source","maybeAppendImportSpecifiers","forEach","_blockHoist","targetPath","val","Number","isFinite","insertBefore","statementsSet","Set","importDeclarations","Map","_iterator","_createForOfIteratorHelper","_step","s","n","statement","has","set","push","err","e","f","lastImportPath","_iterator2","_step2","bodyStmt","newImports","_iterator3","_step3","decl","size","insertAfter","Array","from","exports","importKind","hasNamespaceImport","specifiers","hasDefaultImport","target","_target$specifiers","local","unshift","shift","apply","_toConsumableArray"],"sources":["../src/import-injector.ts"],"sourcesContent":["import assert from \"assert\";\nimport {\n  identifier,\n  importSpecifier,\n  numericLiteral,\n  sequenceExpression,\n  isImportDeclaration,\n} from \"@babel/types\";\nimport type * as t from \"@babel/types\";\nimport type { NodePath, Scope } from \"@babel/traverse\";\nimport type { File } from \"@babel/core\";\n\nimport ImportBuilder from \"./import-builder.ts\";\nimport isModule from \"./is-module.ts\";\n\nexport type ImportOptions = {\n  /**\n   * The module being referenced.\n   */\n  importedSource: string | null;\n  /**\n   * The type of module being imported:\n   *\n   *  * 'es6'      - An ES6 module.\n   *  * 'commonjs' - A CommonJS module. (Default)\n   */\n  importedType: \"es6\" | \"commonjs\";\n  /**\n   * The type of interop behavior for namespace/default/named when loading\n   * CommonJS modules.\n   *\n   * ## 'babel' (Default)\n   *\n   * Load using Babel's interop.\n   *\n   * If '.__esModule' is true, treat as 'compiled', else:\n   *\n   * * Namespace: A copy of the module.exports with .default\n   *     populated by the module.exports object.\n   * * Default: The module.exports value.\n   * * Named: The .named property of module.exports.\n   *\n   * The 'ensureLiveReference' has no effect on the liveness of these.\n   *\n   * ## 'compiled'\n   *\n   * Assume the module is ES6 compiled to CommonJS. Useful to avoid injecting\n   * interop logic if you are confident that the module is a certain format.\n   *\n   * * Namespace: The root module.exports object.\n   * * Default: The .default property of the namespace.\n   * * Named: The .named property of the namespace.\n   *\n   * Will return erroneous results if the imported module is _not_ compiled\n   * from ES6 with Babel.\n   *\n   * ## 'uncompiled'\n   *\n   * Assume the module is _not_ ES6 compiled to CommonJS. Used a simplified\n   * access pattern that doesn't require additional function calls.\n   *\n   * Will return erroneous results if the imported module _is_ compiled\n   * from ES6 with Babel.\n   *\n   * * Namespace: The module.exports object.\n   * * Default: The module.exports object.\n   * * Named: The .named property of module.exports.\n   */\n  importedInterop: \"babel\" | \"node\" | \"compiled\" | \"uncompiled\";\n  /**\n   * The type of CommonJS interop included in the environment that will be\n   * loading the output code.\n   *\n   *  * 'babel' - CommonJS modules load with Babel's interop. (Default)\n   *  * 'node'  - CommonJS modules load with Node's interop.\n   *\n   * See descriptions in 'importedInterop' for more details.\n   */\n  importingInterop: \"babel\" | \"node\";\n  /**\n   * Define whether we explicitly care that the import be a live reference.\n   * Only applies when importing default and named imports, not the namespace.\n   *\n   *  * true  - Force imported values to be live references.\n   *  * false - No particular requirements. Keeps the code simplest. (Default)\n   */\n  ensureLiveReference: boolean;\n  /**\n   * Define if we explicitly care that the result not be a property reference.\n   *\n   *  * true  - Force calls to exclude context. Useful if the value is going to\n   *            be used as function callee.\n   *  * false - No particular requirements for context of the access. (Default)\n   */\n  ensureNoContext: boolean;\n  /**\n   * Define whether the import should be loaded before or after the existing imports.\n   * \"after\" is only allowed inside ECMAScript modules, since it's not possible to\n   * reliably pick the location _after_ require() calls but _before_ other code in CJS.\n   */\n  importPosition: \"before\" | \"after\";\n\n  nameHint?: string;\n  blockHoist?: number;\n};\n\n/**\n * A general helper classes add imports via transforms. See README for usage.\n */\nexport default class ImportInjector {\n  /**\n   * The path used for manipulation.\n   */\n  declare _programPath: NodePath<t.Program>;\n\n  /**\n   * The scope used to generate unique variable names.\n   */\n  declare _programScope: Scope;\n\n  /**\n   * The file used to inject helpers and resolve paths.\n   */\n  declare _hub: File[\"hub\"];\n\n  /**\n   * The default options to use with this instance when imports are added.\n   */\n  _defaultOpts: ImportOptions = {\n    importedSource: null,\n    importedType: \"commonjs\",\n    importedInterop: \"babel\",\n    importingInterop: \"babel\",\n    ensureLiveReference: false,\n    ensureNoContext: false,\n    importPosition: \"before\",\n  };\n\n  constructor(\n    path: NodePath,\n    importedSource?: string,\n    opts?: Partial<ImportOptions>,\n  ) {\n    const programPath = path.find(p => p.isProgram()) as NodePath<t.Program>;\n\n    this._programPath = programPath;\n    this._programScope = programPath.scope;\n    this._hub = programPath.hub as File[\"hub\"];\n\n    this._defaultOpts = this._applyDefaults(importedSource, opts, true);\n  }\n\n  addDefault(importedSourceIn: string, opts: Partial<ImportOptions>) {\n    return this.addNamed(\"default\", importedSourceIn, opts);\n  }\n\n  addNamed(\n    importName: string,\n    importedSourceIn: string,\n    opts: Partial<ImportOptions>,\n  ) {\n    assert(typeof importName === \"string\");\n\n    return this._generateImport(\n      this._applyDefaults(importedSourceIn, opts),\n      importName,\n    );\n  }\n\n  addNamespace(importedSourceIn: string, opts: Partial<ImportOptions>) {\n    return this._generateImport(\n      this._applyDefaults(importedSourceIn, opts),\n      null,\n    );\n  }\n\n  addSideEffect(importedSourceIn: string, opts: Partial<ImportOptions>) {\n    return this._generateImport(\n      this._applyDefaults(importedSourceIn, opts),\n      void 0,\n    );\n  }\n\n  _applyDefaults(\n    importedSource: string | Partial<ImportOptions>,\n    opts: Partial<ImportOptions> | undefined,\n    isInit = false,\n  ) {\n    let newOpts: ImportOptions;\n    if (typeof importedSource === \"string\") {\n      newOpts = { ...this._defaultOpts, importedSource, ...opts };\n    } else {\n      assert(!opts, \"Unexpected secondary arguments.\");\n      newOpts = { ...this._defaultOpts, ...importedSource };\n    }\n\n    if (!isInit && opts) {\n      if (opts.nameHint !== undefined) newOpts.nameHint = opts.nameHint;\n      if (opts.blockHoist !== undefined) newOpts.blockHoist = opts.blockHoist;\n    }\n    return newOpts;\n  }\n\n  _generateImport(\n    opts: Partial<ImportOptions>,\n    importName: string | null | undefined,\n  ) {\n    const isDefault = importName === \"default\";\n    const isNamed = !!importName && !isDefault;\n    const isNamespace = importName === null;\n\n    const {\n      importedSource,\n      importedType,\n      importedInterop,\n      importingInterop,\n      ensureLiveReference,\n      ensureNoContext,\n      nameHint,\n      importPosition,\n\n      // Not meant for public usage. Allows code that absolutely must control\n      // ordering to set a specific hoist value on the import nodes.\n      // This is ignored when \"importPosition\" is \"after\".\n      blockHoist,\n    } = opts;\n\n    // Provide a hint for generateUidIdentifier for the local variable name\n    // to use for the import, if the code will generate a simple assignment\n    // to a variable.\n    let name = nameHint || importName;\n\n    const isMod = isModule(this._programPath);\n    const isModuleForNode = isMod && importingInterop === \"node\";\n    const isModuleForBabel = isMod && importingInterop === \"babel\";\n\n    if (importPosition === \"after\" && !isMod) {\n      throw new Error(`\"importPosition\": \"after\" is only supported in modules`);\n    }\n\n    const builder = new ImportBuilder(\n      importedSource,\n      this._programScope,\n      this._hub,\n    );\n\n    if (importedType === \"es6\") {\n      if (!isModuleForNode && !isModuleForBabel) {\n        throw new Error(\"Cannot import an ES6 module from CommonJS\");\n      }\n\n      // import * as namespace from ''; namespace\n      // import def from ''; def\n      // import { named } from ''; named\n      builder.import();\n      if (isNamespace) {\n        builder.namespace(nameHint || importedSource);\n      } else if (isDefault || isNamed) {\n        builder.named(name, importName);\n      }\n    } else if (importedType !== \"commonjs\") {\n      throw new Error(`Unexpected interopType \"${importedType}\"`);\n    } else if (importedInterop === \"babel\") {\n      if (isModuleForNode) {\n        // import _tmp from ''; var namespace = interopRequireWildcard(_tmp); namespace\n        // import _tmp from ''; var def = interopRequireDefault(_tmp).default; def\n        // import _tmp from ''; _tmp.named\n        name = name !== \"default\" ? name : importedSource;\n        const es6Default = `${importedSource}$es6Default`;\n\n        builder.import();\n        if (isNamespace) {\n          builder\n            .default(es6Default)\n            .var(name || importedSource)\n            .wildcardInterop();\n        } else if (isDefault) {\n          if (ensureLiveReference) {\n            builder\n              .default(es6Default)\n              .var(name || importedSource)\n              .defaultInterop()\n              .read(\"default\");\n          } else {\n            builder\n              .default(es6Default)\n              .var(name)\n              .defaultInterop()\n              .prop(importName);\n          }\n        } else if (isNamed) {\n          builder.default(es6Default).read(importName);\n        }\n      } else if (isModuleForBabel) {\n        // import * as namespace from ''; namespace\n        // import def from ''; def\n        // import { named } from ''; named\n        builder.import();\n        if (isNamespace) {\n          builder.namespace(name || importedSource);\n        } else if (isDefault || isNamed) {\n          builder.named(name, importName);\n        }\n      } else {\n        // var namespace = interopRequireWildcard(require(''));\n        // var def = interopRequireDefault(require('')).default; def\n        // var named = require('').named; named\n        builder.require();\n        if (isNamespace) {\n          builder.var(name || importedSource).wildcardInterop();\n        } else if ((isDefault || isNamed) && ensureLiveReference) {\n          if (isDefault) {\n            name = name !== \"default\" ? name : importedSource;\n            builder.var(name).read(importName);\n            builder.defaultInterop();\n          } else {\n            builder.var(importedSource).read(importName);\n          }\n        } else if (isDefault) {\n          builder.var(name).defaultInterop().prop(importName);\n        } else if (isNamed) {\n          builder.var(name).prop(importName);\n        }\n      }\n    } else if (importedInterop === \"compiled\") {\n      if (isModuleForNode) {\n        // import namespace from ''; namespace\n        // import namespace from ''; namespace.default\n        // import namespace from ''; namespace.named\n\n        builder.import();\n        if (isNamespace) {\n          builder.default(name || importedSource);\n        } else if (isDefault || isNamed) {\n          builder.default(importedSource).read(name);\n        }\n      } else if (isModuleForBabel) {\n        // import * as namespace from ''; namespace\n        // import def from ''; def\n        // import { named } from ''; named\n        // Note: These lookups will break if the module has no __esModule set,\n        // hence the warning that 'compiled' will not work on standard CommonJS.\n\n        builder.import();\n        if (isNamespace) {\n          builder.namespace(name || importedSource);\n        } else if (isDefault || isNamed) {\n          builder.named(name, importName);\n        }\n      } else {\n        // var namespace = require(''); namespace\n        // var namespace = require(''); namespace.default\n        // var namespace = require(''); namespace.named\n        // var named = require('').named;\n        builder.require();\n        if (isNamespace) {\n          builder.var(name || importedSource);\n        } else if (isDefault || isNamed) {\n          if (ensureLiveReference) {\n            builder.var(importedSource).read(name);\n          } else {\n            builder.prop(importName).var(name);\n          }\n        }\n      }\n    } else if (importedInterop === \"uncompiled\") {\n      if (isDefault && ensureLiveReference) {\n        throw new Error(\"No live reference for commonjs default\");\n      }\n\n      if (isModuleForNode) {\n        // import namespace from ''; namespace\n        // import def from ''; def;\n        // import namespace from ''; namespace.named\n        builder.import();\n        if (isNamespace) {\n          builder.default(name || importedSource);\n        } else if (isDefault) {\n          builder.default(name);\n        } else if (isNamed) {\n          builder.default(importedSource).read(name);\n        }\n      } else if (isModuleForBabel) {\n        // import namespace from '';\n        // import def from '';\n        // import { named } from ''; named;\n        // Note: These lookups will break if the module has __esModule set,\n        // hence the warning that 'uncompiled' will not work on ES6 transpiled\n        // to CommonJS.\n\n        builder.import();\n        if (isNamespace) {\n          builder.default(name || importedSource);\n        } else if (isDefault) {\n          builder.default(name);\n        } else if (isNamed) {\n          builder.named(name, importName);\n        }\n      } else {\n        // var namespace = require(''); namespace\n        // var def = require(''); def\n        // var namespace = require(''); namespace.named\n        // var named = require('').named;\n        builder.require();\n        if (isNamespace) {\n          builder.var(name || importedSource);\n        } else if (isDefault) {\n          builder.var(name);\n        } else if (isNamed) {\n          if (ensureLiveReference) {\n            builder.var(importedSource).read(name);\n          } else {\n            builder.var(name).prop(importName);\n          }\n        }\n      }\n    } else {\n      throw new Error(`Unknown importedInterop \"${importedInterop}\".`);\n    }\n\n    const { statements, resultName } = builder.done();\n\n    this._insertStatements(statements, importPosition, blockHoist);\n\n    if (\n      (isDefault || isNamed) &&\n      ensureNoContext &&\n      resultName.type !== \"Identifier\"\n    ) {\n      return sequenceExpression([numericLiteral(0), resultName]);\n    }\n    return resultName;\n  }\n\n  _insertStatements(\n    statements: t.Statement[],\n    importPosition = \"before\",\n    blockHoist = 3,\n  ) {\n    if (importPosition === \"after\") {\n      if (this._insertStatementsAfter(statements)) return;\n    } else {\n      if (this._insertStatementsBefore(statements, blockHoist)) return;\n    }\n\n    this._programPath.unshiftContainer(\"body\", statements);\n  }\n\n  _insertStatementsBefore(statements: t.Statement[], blockHoist: number) {\n    if (\n      statements.length === 1 &&\n      isImportDeclaration(statements[0]) &&\n      isValueImport(statements[0])\n    ) {\n      const firstImportDecl = this._programPath\n        .get(\"body\")\n        .find((p): p is NodePath<t.ImportDeclaration> => {\n          return p.isImportDeclaration() && isValueImport(p.node);\n        });\n\n      if (\n        firstImportDecl?.node.source.value === statements[0].source.value &&\n        maybeAppendImportSpecifiers(firstImportDecl.node, statements[0])\n      ) {\n        return true;\n      }\n    }\n\n    statements.forEach(node => {\n      // @ts-expect-error handle _blockHoist\n      node._blockHoist = blockHoist;\n    });\n\n    const targetPath = this._programPath.get(\"body\").find(p => {\n      // @ts-expect-error todo(flow->ts): avoid mutations\n      const val = p.node._blockHoist;\n      return Number.isFinite(val) && val < 4;\n    });\n\n    if (targetPath) {\n      targetPath.insertBefore(statements);\n      return true;\n    }\n\n    return false;\n  }\n\n  _insertStatementsAfter(statements: t.Statement[]): boolean {\n    const statementsSet = new Set(statements);\n    const importDeclarations: Map<string, t.ImportDeclaration[]> = new Map();\n\n    for (const statement of statements) {\n      if (isImportDeclaration(statement) && isValueImport(statement)) {\n        const source = statement.source.value;\n        if (!importDeclarations.has(source)) importDeclarations.set(source, []);\n        importDeclarations.get(source).push(statement);\n      }\n    }\n\n    let lastImportPath = null;\n    for (const bodyStmt of this._programPath.get(\"body\")) {\n      if (bodyStmt.isImportDeclaration() && isValueImport(bodyStmt.node)) {\n        lastImportPath = bodyStmt;\n\n        const source = bodyStmt.node.source.value;\n        const newImports = importDeclarations.get(source);\n        if (!newImports) continue;\n\n        for (const decl of newImports) {\n          if (!statementsSet.has(decl)) continue;\n          if (maybeAppendImportSpecifiers(bodyStmt.node, decl)) {\n            statementsSet.delete(decl);\n          }\n        }\n      }\n    }\n\n    if (statementsSet.size === 0) return true;\n\n    if (lastImportPath) lastImportPath.insertAfter(Array.from(statementsSet));\n\n    return !!lastImportPath;\n  }\n}\n\nfunction isValueImport(node: t.ImportDeclaration) {\n  return node.importKind !== \"type\" && node.importKind !== \"typeof\";\n}\n\nfunction hasNamespaceImport(node: t.ImportDeclaration) {\n  return (\n    (node.specifiers.length === 1 &&\n      node.specifiers[0].type === \"ImportNamespaceSpecifier\") ||\n    (node.specifiers.length === 2 &&\n      node.specifiers[1].type === \"ImportNamespaceSpecifier\")\n  );\n}\n\nfunction hasDefaultImport(node: t.ImportDeclaration) {\n  return (\n    node.specifiers.length > 0 &&\n    node.specifiers[0].type === \"ImportDefaultSpecifier\"\n  );\n}\n\nfunction maybeAppendImportSpecifiers(\n  target: t.ImportDeclaration,\n  source: t.ImportDeclaration,\n): boolean {\n  if (!target.specifiers.length) {\n    target.specifiers = source.specifiers;\n    return true;\n  }\n  if (!source.specifiers.length) return true;\n\n  if (hasNamespaceImport(target) || hasNamespaceImport(source)) return false;\n\n  if (hasDefaultImport(source)) {\n    if (hasDefaultImport(target)) {\n      source.specifiers[0] = importSpecifier(\n        source.specifiers[0].local,\n        identifier(\"default\"),\n      );\n    } else {\n      target.specifiers.unshift(source.specifiers.shift());\n    }\n  }\n\n  target.specifiers.push(...source.specifiers);\n\n  return true;\n}\n"],"mappings":"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","ignoreList":[]}
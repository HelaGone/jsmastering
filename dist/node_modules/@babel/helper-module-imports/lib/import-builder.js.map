{"version":3,"file":"import-builder.js","names":["_assert","require","_t","callExpression","cloneNode","expressionStatement","identifier","importDeclaration","importDefaultSpecifier","importNamespaceSpecifier","importSpecifier","memberExpression","stringLiteral","variableDeclaration","variableDeclarator","ImportBuilder","importedSource","scope","hub","_classCallCheck","_statements","_resultName","_importedSource","_scope","_hub","_createClass","key","value","done","statements","resultName","_import","push","namespace","name","arguments","length","undefined","local","generateUidIdentifier","statement","type","specifiers","_default","id","named","importName","_var","expression","defaultInterop","_interop","addHelper","wildcardInterop","callee","declarations","init","fail","prop","read","exports"],"sources":["../src/import-builder.ts"],"sourcesContent":["import assert from \"assert\";\nimport {\n  callExpression,\n  cloneNode,\n  expressionStatement,\n  identifier,\n  importDeclaration,\n  importDefaultSpecifier,\n  importNamespaceSpecifier,\n  importSpecifier,\n  memberExpression,\n  stringLiteral,\n  variableDeclaration,\n  variableDeclarator,\n} from \"@babel/types\";\nimport type * as t from \"@babel/types\";\nimport type { Scope } from \"@babel/traverse\";\nimport type { File } from \"@babel/core\";\n\n/**\n * A class to track and accumulate mutations to the AST that will eventually\n * output a new require/import statement list.\n */\nexport default class ImportBuilder {\n  private _statements: t.Statement[] = [];\n  private _resultName: t.Identifier | t.MemberExpression = null;\n\n  declare _scope: Scope;\n  declare _hub: File[\"hub\"];\n  private _importedSource: string;\n\n  constructor(importedSource: string, scope: Scope, hub: File[\"hub\"]) {\n    this._scope = scope;\n    this._hub = hub;\n    this._importedSource = importedSource;\n  }\n\n  done() {\n    return {\n      statements: this._statements,\n      resultName: this._resultName,\n    };\n  }\n\n  import() {\n    this._statements.push(\n      importDeclaration([], stringLiteral(this._importedSource)),\n    );\n    return this;\n  }\n\n  require() {\n    this._statements.push(\n      expressionStatement(\n        callExpression(identifier(\"require\"), [\n          stringLiteral(this._importedSource),\n        ]),\n      ),\n    );\n    return this;\n  }\n\n  namespace(name = \"namespace\") {\n    const local = this._scope.generateUidIdentifier(name);\n\n    const statement = this._statements[this._statements.length - 1];\n    assert(statement.type === \"ImportDeclaration\");\n    assert(statement.specifiers.length === 0);\n    statement.specifiers = [importNamespaceSpecifier(local)];\n    this._resultName = cloneNode(local);\n    return this;\n  }\n  default(name: string) {\n    const id = this._scope.generateUidIdentifier(name);\n    const statement = this._statements[this._statements.length - 1];\n    assert(statement.type === \"ImportDeclaration\");\n    assert(statement.specifiers.length === 0);\n    statement.specifiers = [importDefaultSpecifier(id)];\n    this._resultName = cloneNode(id);\n    return this;\n  }\n  named(name: string, importName: string) {\n    if (importName === \"default\") return this.default(name);\n\n    const id = this._scope.generateUidIdentifier(name);\n    const statement = this._statements[this._statements.length - 1];\n    assert(statement.type === \"ImportDeclaration\");\n    assert(statement.specifiers.length === 0);\n    statement.specifiers = [importSpecifier(id, identifier(importName))];\n    this._resultName = cloneNode(id);\n    return this;\n  }\n\n  var(name: string) {\n    const id = this._scope.generateUidIdentifier(name);\n    let statement = this._statements[this._statements.length - 1];\n    if (statement.type !== \"ExpressionStatement\") {\n      assert(this._resultName);\n      statement = expressionStatement(this._resultName);\n      this._statements.push(statement);\n    }\n    this._statements[this._statements.length - 1] = variableDeclaration(\"var\", [\n      variableDeclarator(id, statement.expression),\n    ]);\n    this._resultName = cloneNode(id);\n    return this;\n  }\n\n  defaultInterop() {\n    return this._interop(this._hub.addHelper(\"interopRequireDefault\"));\n  }\n  wildcardInterop() {\n    return this._interop(this._hub.addHelper(\"interopRequireWildcard\"));\n  }\n\n  _interop(callee: t.Expression) {\n    const statement = this._statements[this._statements.length - 1];\n    if (statement.type === \"ExpressionStatement\") {\n      statement.expression = callExpression(callee, [statement.expression]);\n    } else if (statement.type === \"VariableDeclaration\") {\n      assert(statement.declarations.length === 1);\n      statement.declarations[0].init = callExpression(callee, [\n        statement.declarations[0].init,\n      ]);\n    } else {\n      assert.fail(\"Unexpected type.\");\n    }\n    return this;\n  }\n\n  prop(name: string) {\n    const statement = this._statements[this._statements.length - 1];\n    if (statement.type === \"ExpressionStatement\") {\n      statement.expression = memberExpression(\n        statement.expression,\n        identifier(name),\n      );\n    } else if (statement.type === \"VariableDeclaration\") {\n      assert(statement.declarations.length === 1);\n      statement.declarations[0].init = memberExpression(\n        statement.declarations[0].init,\n        identifier(name),\n      );\n    } else {\n      assert.fail(\"Unexpected type:\" + statement.type);\n    }\n    return this;\n  }\n\n  read(name: string) {\n    this._resultName = memberExpression(this._resultName, identifier(name));\n  }\n}\n"],"mappings":"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","ignoreList":[]}
{"version":3,"file":"doubleNumbers.test.js","names":["_index","require","describe","it","input","expected","result","doubleNumbers","expect","toEqual","NaN"],"sources":["../doubleNumbers.test.js"],"sourcesContent":["import { doubleNumbers } from \"./index\";\ndescribe('doubleNumbers', () => {\n  it('should double each number in the array', () => {\n    const input = [1, 2, 3, 4, 5];\n    const expected = [2, 4, 6, 8, 10];\n    const result = doubleNumbers(input);\n    expect(result).toEqual(expected);\n  });\n\n  it('should return an empty array when input is empty', () => {\n    const input = [];\n    const expected = [];\n    const result = doubleNumbers(input);\n    expect(result).toEqual(expected);\n  });\n\n  it('should handle an array with non-numeric values', () => {\n    const input = [1, 2, 'three', 4, null];\n    const expected = [2, 4, NaN, 8, NaN];\n    const result = doubleNumbers(input);\n    expect(result).toEqual(expected);\n  });\n});"],"mappings":";;AAAA,IAAAA,MAAA,GAAAC,OAAA;AACAC,QAAQ,CAAC,eAAe,EAAE,YAAM;EAC9BC,EAAE,CAAC,wCAAwC,EAAE,YAAM;IACjD,IAAMC,KAAK,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IAC7B,IAAMC,QAAQ,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC;IACjC,IAAMC,MAAM,GAAG,IAAAC,oBAAa,EAACH,KAAK,CAAC;IACnCI,MAAM,CAACF,MAAM,CAAC,CAACG,OAAO,CAACJ,QAAQ,CAAC;EAClC,CAAC,CAAC;EAEFF,EAAE,CAAC,kDAAkD,EAAE,YAAM;IAC3D,IAAMC,KAAK,GAAG,EAAE;IAChB,IAAMC,QAAQ,GAAG,EAAE;IACnB,IAAMC,MAAM,GAAG,IAAAC,oBAAa,EAACH,KAAK,CAAC;IACnCI,MAAM,CAACF,MAAM,CAAC,CAACG,OAAO,CAACJ,QAAQ,CAAC;EAClC,CAAC,CAAC;EAEFF,EAAE,CAAC,gDAAgD,EAAE,YAAM;IACzD,IAAMC,KAAK,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,IAAI,CAAC;IACtC,IAAMC,QAAQ,GAAG,CAAC,CAAC,EAAE,CAAC,EAAEK,GAAG,EAAE,CAAC,EAAEA,GAAG,CAAC;IACpC,IAAMJ,MAAM,GAAG,IAAAC,oBAAa,EAACH,KAAK,CAAC;IACnCI,MAAM,CAACF,MAAM,CAAC,CAACG,OAAO,CAACJ,QAAQ,CAAC;EAClC,CAAC,CAAC;AACJ,CAAC,CAAC","ignoreList":[]}